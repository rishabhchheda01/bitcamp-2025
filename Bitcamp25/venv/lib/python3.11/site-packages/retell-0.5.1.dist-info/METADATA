Metadata-Version: 2.1
Name: retell
Version: 0.5.1
Summary: retell sdk
Home-page: UNKNOWN
Author: retell
License: UNKNOWN
Platform: UNKNOWN
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: certifi >=2023.7.22
Requires-Dist: charset-normalizer >=3.2.0
Requires-Dist: dataclasses-json >=0.6.4
Requires-Dist: idna >=3.4
Requires-Dist: jsonpath-python >=1.0.6
Requires-Dist: marshmallow >=3.19.0
Requires-Dist: mypy-extensions >=1.0.0
Requires-Dist: packaging >=23.1
Requires-Dist: python-dateutil >=2.8.2
Requires-Dist: requests >=2.31.0
Requires-Dist: six >=1.16.0
Requires-Dist: typing-inspect >=0.9.0
Requires-Dist: typing-extensions >=4.7.1
Requires-Dist: urllib3 >=1.26.18
Provides-Extra: dev
Requires-Dist: pylint ==2.16.2 ; extra == 'dev'

# retell

<div align="left">
    <a href="https://speakeasyapi.dev/"><img src="https://custom-icon-badges.demolab.com/badge/-Built%20By%20Speakeasy-212015?style=for-the-badge&logoColor=FBE331&logo=speakeasy&labelColor=545454" /></a>
    <a href="https://opensource.org/licenses/MIT">
        <img src="https://img.shields.io/badge/License-MIT-blue.svg" style="width: 100px; height: 28px;" />
    </a>
</div>


## üèó **Welcome to your new SDK!** üèó

It has been generated successfully based on your OpenAPI spec. However, it is not yet ready for production use. Here are some next steps:
- [ ] üõ† Make your SDK feel handcrafted by [customizing it](https://www.speakeasyapi.dev/docs/customize-sdks)
- [ ] ‚ôªÔ∏è Refine your SDK quickly by iterating locally with the [Speakeasy CLI](https://github.com/speakeasy-api/speakeasy)
- [ ] üéÅ Publish your SDK to package managers by [configuring automatic publishing](https://www.speakeasyapi.dev/docs/productionize-sdks/publish-sdks)
- [ ] ‚ú® When ready to productionize, delete this section from the README

<!-- Start SDK Installation [installation] -->
## SDK Installation

```bash
pip install retell
```
<!-- End SDK Installation [installation] -->

<!-- Start SDK Example Usage [usage] -->
## SDK Example Usage

### Create an outbound phone call

Initiate an outbound phone call.

```python
import sdk
from sdk.models import operations

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)

req = operations.CreatePhoneCallRequestBody(
    phone_number=operations.PhoneNumber(
        from_='+14159095857',
        to='+14159095858',
    ),
)

res = s.create_phone_call(req)

if res.object is not None:
    # handle response
    pass

```

### Retrieve a on-going or finished call

Retrieve details of a specific call

```python
import sdk

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)


res = s.get_call(call_id='119c3f8e47135a29e65947eeb34cf12d')

if res.call_detail is not None:
    # handle response
    pass

```

### List all web or phone calls

Retrieve call details

```python
import sdk
from sdk.models import operations

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)


res = s.list_calls(filter_criteria=operations.FilterCriteria(
    agent_id=[
        'oBeDLoLOeuAbiuaMFXRtDOLriTJ5tSxD',
    ],
    call_type=[
        operations.CallType.INBOUND_PHONE_CALL,
        operations.CallType.OUTBOUND_PHONE_CALL,
    ],
    before_start_timestamp=1703302407399,
    after_start_timestamp=1703302407300,
    before_end_timestamp=1703302428899,
    after_end_timestamp=1703302428800,
), sort_order=operations.SortOrder.DESCENDING, limit=1000)

if res.call_details is not None:
    # handle response
    pass

```

### Create a new voice AI agent

Create a new agent

```python
import sdk
from sdk.models import operations

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)

req = operations.CreateAgentRequestBody(
    prompt='You are a marketing assistant. You help come up with creative content ideas and content like marketing emails, blog posts, tweets, ad copy and product descriptions. You respond concisely, with filler words in it.',
    voice_id='elevenlabs-xxcrwXReTKMHWjqi7Q27',
    agent_name='Jarvis',
    enable_begin_message=True,
    begin_message='Hello there, how can I help you?',
    enable_end_call=True,
    enable_end_message=False,
    end_message='Hope you have a good day, goodbye.',
)

res = s.create_agent(req)

if res.agent is not None:
    # handle response
    pass

```

### Retrieve details of an agent

Retrieve details of a specific agent

```python
import sdk

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)


res = s.get_agent(agent_id='16b980523634a6dc504898cda492e939')

if res.agent is not None:
    # handle response
    pass

```

### List all agents

List all agents

```python
import sdk

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)


res = s.list_agents()

if res.agents is not None:
    # handle response
    pass

```

### Update an existing agent

Update an existing agent

```python
import sdk
from sdk.models import components

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)


res = s.update_agent(agent_id='16b980523634a6dc504898cda492e939', agent_no_default_no_required=components.AgentNoDefaultNoRequired(
    prompt='You are a marketing assistant. You help come up with creative content ideas and content like marketing emails, blog posts, tweets, ad copy and product descriptions. You respond concisely, with filler words in it.',
    voice_id='elevenlabs-xxcrwXReTKMHWjqi7Q27',
    agent_name='Jarvis',
    enable_begin_message=True,
    begin_message='Hello there, how can I help you.',
    enable_end_call=True,
    enable_end_message=False,
    end_message='Hope you have a good day, goodbye.',
))

if res.agent is not None:
    # handle response
    pass

```

### Delete an existing agent

Delete an existing agent

```python
import sdk

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)


res = s.delete_agent(agent_id='oBeDLoLOeuAbiuaMFXRtDOLriTJ5tSxD')

if res is not None:
    # handle response
    pass

```

### Create a new phone number

Create a new phone number

```python
import sdk
from sdk.models import operations

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)

req = operations.CreatePhoneNumberRequestBody(
    agent_id='oBeDLoLOeuAbiuaMFXRtDOLriTJ5tSxD',
    area_code=415,
)

res = s.create_phone_number(req)

if res.phone_number is not None:
    # handle response
    pass

```

### Retrieve info about a specific number

Retrieve info about a specific number

```python
import sdk

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)


res = s.get_phone_number(phone_number='+14159095857')

if res.phone_number is not None:
    # handle response
    pass

```

### List all purchased and active phone numbers

List all purchased and active phone numbers

```python
import sdk

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)


res = s.list_phone_numbers()

if res.phone_numbers is not None:
    # handle response
    pass

```

### Update an existing phone number

Update an existing phone number

```python
import sdk
from sdk.models import operations

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)


res = s.update_phone_agent(phone_number='+14159095857', request_body=operations.UpdatePhoneAgentRequestBody(
    agent_id='+14159095857',
))

if res.phone_number is not None:
    # handle response
    pass

```

### Delete a specific phone number

Delete a specific phone number

```python
import sdk

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)


res = s.delete_phone_number(phone_number='<value>')

if res is not None:
    # handle response
    pass

```
<!-- End SDK Example Usage [usage] -->

<!-- Start Available Resources and Operations [operations] -->
## Available Resources and Operations

### [SDK](docs/sdks/sdk/README.md)

* [create_phone_call](docs/sdks/sdk/README.md#create_phone_call) - Initiate an outbound phone call.
* [get_call](docs/sdks/sdk/README.md#get_call) - Retrieve details of a specific call
* [list_calls](docs/sdks/sdk/README.md#list_calls) - Retrieve call details
* [create_agent](docs/sdks/sdk/README.md#create_agent) - Create a new agent
* [get_agent](docs/sdks/sdk/README.md#get_agent) - Retrieve details of a specific agent
* [list_agents](docs/sdks/sdk/README.md#list_agents) - List all agents
* [update_agent](docs/sdks/sdk/README.md#update_agent) - Update an existing agent
* [delete_agent](docs/sdks/sdk/README.md#delete_agent) - Delete an existing agent
* [create_phone_number](docs/sdks/sdk/README.md#create_phone_number) - Create a new phone number
* [get_phone_number](docs/sdks/sdk/README.md#get_phone_number) - Retrieve info about a specific number
* [list_phone_numbers](docs/sdks/sdk/README.md#list_phone_numbers) - List all purchased and active phone numbers
* [update_phone_agent](docs/sdks/sdk/README.md#update_phone_agent) - Update an existing phone number
* [delete_phone_number](docs/sdks/sdk/README.md#delete_phone_number) - Delete a specific phone number
<!-- End Available Resources and Operations [operations] -->

<!-- Start Error Handling [errors] -->
## Error Handling

Handling errors in this SDK should largely match your expectations.  All operations return a response object or raise an error.  If Error objects are specified in your OpenAPI Spec, the SDK will raise the appropriate Error type.

| Error Object                       | Status Code                        | Content Type                       |
| ---------------------------------- | ---------------------------------- | ---------------------------------- |
| errors.CreatePhoneCallResponseBody | 400,401,402,422,429,500            | application/json                   |
| errors.SDKError                    | 4x-5xx                             | */*                                |

### Example

```python
import sdk
from sdk.models import errors, operations

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)

req = operations.CreatePhoneCallRequestBody(
    phone_number=operations.PhoneNumber(
        from_='+14159095857',
        to='+14159095858',
    ),
)

res = None
try:
    res = s.create_phone_call(req)
except errors.CreatePhoneCallResponseBody as e:
    # handle exception
    raise(e)
except errors.SDKError as e:
    # handle exception
    raise(e)

if res.object is not None:
    # handle response
    pass

```
<!-- End Error Handling [errors] -->

<!-- Start Server Selection [server] -->
## Server Selection

### Select Server by Index

You can override the default server globally by passing a server index to the `server_idx: int` optional parameter when initializing the SDK client instance. The selected server will then be used as the default on the operations that use it. This table lists the indexes associated with the available servers:

| # | Server | Variables |
| - | ------ | --------- |
| 0 | `https://api.re-tell.ai` | None |

#### Example

```python
import sdk
from sdk.models import operations

s = sdk.SDK(
    server_idx=0,
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)

req = operations.CreatePhoneCallRequestBody(
    phone_number=operations.PhoneNumber(
        from_='+14159095857',
        to='+14159095858',
    ),
)

res = s.create_phone_call(req)

if res.object is not None:
    # handle response
    pass

```


### Override Server URL Per-Client

The default server can also be overridden globally by passing a URL to the `server_url: str` optional parameter when initializing the SDK client instance. For example:
```python
import sdk
from sdk.models import operations

s = sdk.SDK(
    server_url="https://api.re-tell.ai",
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)

req = operations.CreatePhoneCallRequestBody(
    phone_number=operations.PhoneNumber(
        from_='+14159095857',
        to='+14159095858',
    ),
)

res = s.create_phone_call(req)

if res.object is not None:
    # handle response
    pass

```
<!-- End Server Selection [server] -->

<!-- Start Custom HTTP Client [http-client] -->
## Custom HTTP Client

The Python SDK makes API calls using the [requests](https://pypi.org/project/requests/) HTTP library.  In order to provide a convenient way to configure timeouts, cookies, proxies, custom headers, and other low-level configuration, you can initialize the SDK client with a custom `requests.Session` object.

For example, you could specify a header for every request that this sdk makes as follows:
```python
import sdk
import requests

http_client = requests.Session()
http_client.headers.update({'x-custom-header': 'someValue'})
s = sdk.SDK(client: http_client)
```
<!-- End Custom HTTP Client [http-client] -->

<!-- Start Authentication [security] -->
## Authentication

### Per-Client Security Schemes

This SDK supports the following security scheme globally:

| Name        | Type        | Scheme      |
| ----------- | ----------- | ----------- |
| `api_key`   | http        | HTTP Bearer |

To authenticate with the API the `api_key` parameter must be set when initializing the SDK client instance. For example:
```python
import sdk
from sdk.models import operations

s = sdk.SDK(
    api_key="<YOUR_BEARER_TOKEN_HERE>",
)

req = operations.CreatePhoneCallRequestBody(
    phone_number=operations.PhoneNumber(
        from_='+14159095857',
        to='+14159095858',
    ),
)

res = s.create_phone_call(req)

if res.object is not None:
    # handle response
    pass

```
<!-- End Authentication [security] -->

<!-- Placeholder for Future Speakeasy SDK Sections -->

# Development

## Maturity

This SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage
to a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally
looking for the latest version.

## Contributions

While we value open-source contributions to this SDK, this library is generated programmatically.
Feel free to open a PR or a Github issue as a proof of concept and we'll do our best to include it in a future release!

### SDK Created by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)


