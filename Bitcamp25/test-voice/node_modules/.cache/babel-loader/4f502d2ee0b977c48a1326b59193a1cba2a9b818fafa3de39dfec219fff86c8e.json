{"ast":null,"code":"/**\n * @license\n * Copyright 2022 The TensorFlow Authors. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reciprocal } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const reciprocalConfig = createUnaryKernelConfig(Reciprocal);","map":{"version":3,"names":["Reciprocal","createUnaryKernelConfig","reciprocalConfig"],"sources":["C:\\Users\\kheri\\Downloads\\Bitcamp\\bitcamp-2025\\Bitcamp25\\tfjs-backend-wasm\\src\\kernels\\Reciprocal.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2022 The TensorFlow Authors. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Reciprocal} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reciprocalConfig: KernelConfig =\n    createUnaryKernelConfig(Reciprocal);\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAsBA,UAAU,QAAO,uBAAuB;AAE9D,SAAQC,uBAAuB,QAAO,gBAAgB;AACtD,OAAO,MAAMC,gBAAgB,GACzBD,uBAAuB,CAACD,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}