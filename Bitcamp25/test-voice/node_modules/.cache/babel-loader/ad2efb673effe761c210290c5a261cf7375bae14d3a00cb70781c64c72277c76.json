{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringToHashBucketFast } from '@tensorflow/tfjs-core';\nimport { stringToHashBucketFastImplCPU } from '../kernel_utils/shared';\nfunction stringToHashBucketFast(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    input\n  } = inputs;\n  const {\n    numBuckets\n  } = attrs;\n  const inputVals = backend.readSync(input.dataId);\n  const values = stringToHashBucketFastImplCPU(inputVals, numBuckets);\n  const out = backend.makeOutput(input.shape, 'int32');\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(values);\n  return out;\n}\nexport const stringToHashBucketFastConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'wasm',\n  kernelFunc: stringToHashBucketFast\n};","map":{"version":3,"names":["StringToHashBucketFast","stringToHashBucketFastImplCPU","stringToHashBucketFast","args","backend","inputs","attrs","input","numBuckets","inputVals","readSync","dataId","values","out","makeOutput","shape","outVals","typedArrayFromHeap","set","stringToHashBucketFastConfig","kernelName","backendName","kernelFunc"],"sources":["C:\\Users\\kheri\\Downloads\\Bitcamp\\bitcamp-2025\\Bitcamp25\\tfjs-backend-wasm\\src\\kernels\\StringToHashBucketFast.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringToHashBucketFast, StringToHashBucketFastAttrs, StringToHashBucketFastInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringToHashBucketFastImplCPU} from '../kernel_utils/shared';\n\nfunction stringToHashBucketFast(args: {\n  backend: BackendWasm,\n  inputs: StringToHashBucketFastInputs,\n  attrs: StringToHashBucketFastAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {input} = inputs;\n  const {numBuckets} = attrs;\n\n  const inputVals = backend.readSync(input.dataId) as Uint8Array[];\n\n  const values = stringToHashBucketFastImplCPU(inputVals, numBuckets);\n\n  const out = backend.makeOutput(input.shape, 'int32');\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(values);\n  return out;\n}\n\nexport const stringToHashBucketFastConfig: KernelConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'wasm',\n  kernelFunc: stringToHashBucketFast as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,sBAAsB,QAA8E,uBAAuB;AAG7J,SAAQC,6BAA6B,QAAO,wBAAwB;AAEpE,SAASC,sBAAsBA,CAACC,IAI/B;EACC,MAAM;IAACC,OAAO;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGH,IAAI;EACrC,MAAM;IAACI;EAAK,CAAC,GAAGF,MAAM;EACtB,MAAM;IAACG;EAAU,CAAC,GAAGF,KAAK;EAE1B,MAAMG,SAAS,GAAGL,OAAO,CAACM,QAAQ,CAACH,KAAK,CAACI,MAAM,CAAiB;EAEhE,MAAMC,MAAM,GAAGX,6BAA6B,CAACQ,SAAS,EAAED,UAAU,CAAC;EAEnE,MAAMK,GAAG,GAAGT,OAAO,CAACU,UAAU,CAACP,KAAK,CAACQ,KAAK,EAAE,OAAO,CAAC;EACpD,MAAMC,OAAO,GAAGZ,OAAO,CAACa,kBAAkB,CAACJ,GAAG,CAAC;EAC/CG,OAAO,CAACE,GAAG,CAACN,MAAM,CAAC;EACnB,OAAOC,GAAG;AACZ;AAEA,OAAO,MAAMM,4BAA4B,GAAiB;EACxDC,UAAU,EAAEpB,sBAAsB;EAClCqB,WAAW,EAAE,MAAM;EACnBC,UAAU,EAAEpB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}