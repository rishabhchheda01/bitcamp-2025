{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kheri\\\\Downloads\\\\Bitcamp\\\\bitcamp-2025\\\\Bitcamp25\\\\test-voice\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { RetellWebClient } from \"retell-client-js-sdk\";\nimport SplineLoader from './SplineLoader';\nimport SplineViewer from './SplineViewer';\nimport './index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Add a ref to maintain the Spline instance\n  const splineInstanceRef = useRef(null);\n  const cursorAnimationRef = useRef(null);\n  const [isCallActive, setIsCallActive] = useState(false);\n  const [retellWebClient, setRetellWebClient] = useState(null);\n  const [eventStatus, setEventStatus] = useState({\n    callStarted: false,\n    callEnded: false,\n    agentStartTalking: false,\n    agentStopTalking: false,\n    error: null,\n    transcript: ''\n  });\n  const [micPermission, setMicPermission] = useState(null);\n  const [accessToken, setAccessToken] = useState('');\n  const [isGeneratingToken, setIsGeneratingToken] = useState(false);\n  const [callInfo, setCallInfo] = useState(null);\n  const [loadingComplete, setLoadingComplete] = useState(false);\n  const [showUI, setShowUI] = useState(true);\n  // Add state to control the mounting/unmounting of Spline\n  const [splineInitialized, setSplineInitialized] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2\n  });\n  const [isCursorControlled, setIsCursorControlled] = useState(false);\n  const [realCursorPosition, setRealCursorPosition] = useState({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2\n  });\n  const [isUserMovingCursor, setIsUserMovingCursor] = useState(false);\n  const userCursorTimeoutRef = useRef(null);\n\n  // Agent ID for Retell\n  const AGENT_ID = \"agent_30b1b504a89d37e3109a7da3e9\";\n\n  // Server endpoint for token generation\n  const TOKEN_SERVER_URL = \"http://127.0.0.1:5000/api/generate-token\";\n\n  // Track real user cursor movements\n  useEffect(() => {\n    const handleMouseMove = event => {\n      const {\n        clientX,\n        clientY\n      } = event;\n      setRealCursorPosition({\n        x: clientX,\n        y: clientY\n      });\n\n      // When user moves cursor, use real position and stop simulated movement temporarily\n      if (isCursorControlled) {\n        setIsUserMovingCursor(true);\n        setCursorPosition({\n          x: clientX,\n          y: clientY\n        });\n\n        // Make real cursor visible when user moves it\n        document.body.classList.remove('cursor-controlled');\n\n        // Clear any existing timeout\n        if (userCursorTimeoutRef.current) {\n          clearTimeout(userCursorTimeoutRef.current);\n        }\n\n        // Set a timeout to return to simulated movement and hide cursor again\n        userCursorTimeoutRef.current = setTimeout(() => {\n          setIsUserMovingCursor(false);\n          document.body.classList.add('cursor-controlled');\n        }, 2000); // Show cursor for 2 seconds as requested\n      }\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (userCursorTimeoutRef.current) {\n        clearTimeout(userCursorTimeoutRef.current);\n      }\n    };\n  }, [isCursorControlled]);\n\n  // Control cursor movement via Spline - Direct event dispatch approach\n  useEffect(() => {\n    // Target the spline-viewer element directly\n    const splineElement = document.querySelector('spline-viewer');\n    if (splineElement) {\n      try {\n        // Create a synthetic MouseEvent to directly control where Spline \"thinks\" the cursor is\n        const mouseEvent = new MouseEvent('mousemove', {\n          bubbles: true,\n          cancelable: true,\n          view: window,\n          clientX: cursorPosition.x,\n          clientY: cursorPosition.y\n        });\n\n        // Dispatch the mouse event directly on the spline-viewer element\n        splineElement.dispatchEvent(mouseEvent);\n\n        // Also try dispatching on the document for broader effect\n        document.dispatchEvent(new MouseEvent('mousemove', {\n          bubbles: true,\n          cancelable: true,\n          view: window,\n          clientX: cursorPosition.x,\n          clientY: cursorPosition.y\n        }));\n\n        // Update the debug cursor for visibility\n        let debugCursor = document.getElementById('debug-cursor');\n        if (debugCursor) {\n          debugCursor.style.left = `${cursorPosition.x - 10}px`;\n          debugCursor.style.top = `${cursorPosition.y - 10}px`;\n        } else {\n          // Create debug cursor if it doesn't exist\n          debugCursor = document.createElement('div');\n          debugCursor.id = 'debug-cursor';\n          debugCursor.style.position = 'absolute';\n          debugCursor.style.width = '20px';\n          debugCursor.style.height = '20px';\n          debugCursor.style.borderRadius = '50%';\n          debugCursor.style.backgroundColor = 'rgba(255, 0, 0, 0.5)';\n          debugCursor.style.zIndex = '10000';\n          debugCursor.style.pointerEvents = 'none';\n          debugCursor.style.left = `${cursorPosition.x - 10}px`;\n          debugCursor.style.top = `${cursorPosition.y - 10}px`;\n          document.body.appendChild(debugCursor);\n        }\n      } catch (error) {\n        console.error('Error moving cursor:', error);\n      }\n    }\n  }, [cursorPosition]);\n\n  // Manual testing function to simulate cursor movement\n  const simulateMovement = () => {\n    console.log(\"Starting manual cursor simulation\");\n\n    // Use a function reference that has access to the latest state\n    const startAnimation = () => {\n      if (cursorAnimationRef.current) {\n        cancelAnimationFrame(cursorAnimationRef.current);\n      }\n\n      // Create a visible debug cursor\n      let debugCursor = document.getElementById('debug-cursor');\n      if (!debugCursor) {\n        debugCursor = document.createElement('div');\n        debugCursor.id = 'debug-cursor';\n        debugCursor.style.position = 'absolute';\n        debugCursor.style.width = '20px';\n        debugCursor.style.height = '20px';\n        debugCursor.style.borderRadius = '50%';\n        debugCursor.style.backgroundColor = 'rgba(255, 0, 0, 0.5)';\n        debugCursor.style.zIndex = '10000';\n        debugCursor.style.pointerEvents = 'none';\n        document.body.appendChild(debugCursor);\n      }\n      let time = 0;\n      const duration = 3000;\n\n      // Generate random parameters with EXTREMELY LARGE amplitudes\n      const randomAmplitude = {\n        nod: 300 + Math.random() * 200,\n        // Super large movement\n        shake: 400 + Math.random() * 300,\n        // Even larger\n        circleX: 400 + Math.random() * 300,\n        circleY: 300 + Math.random() * 200\n      };\n      const randomSpeed = {\n        nod: 15 + Math.random() * 10,\n        // Faster speeds\n        shake: 10 + Math.random() * 8,\n        circle: 8 + Math.random() * 5\n      };\n      const startX = window.innerWidth / 2;\n      const startY = window.innerHeight / 2;\n      let currentPattern = Math.floor(Math.random() * 3);\n      let patternDuration = 0;\n      let maxPatternDuration = Math.random() * 800 + 300;\n      const animate = () => {\n        time += 16;\n        patternDuration += 16;\n        if (time > duration) {\n          time = 0;\n        }\n        if (patternDuration > maxPatternDuration) {\n          currentPattern = Math.floor(Math.random() * 3);\n          patternDuration = 0;\n          maxPatternDuration = Math.random() * 800 + 300;\n        }\n        const progress = time / duration;\n        const noddingPattern = Math.sin(progress * Math.PI * randomSpeed.nod) * randomAmplitude.nod;\n        const shakingPattern = Math.sin(progress * Math.PI * randomSpeed.shake) * randomAmplitude.shake;\n        const circlePattern = {\n          x: Math.cos(progress * Math.PI * randomSpeed.circle) * randomAmplitude.circleX,\n          y: Math.sin(progress * Math.PI * randomSpeed.circle) * randomAmplitude.circleY\n        };\n        let x, y;\n        const jitter = {\n          x: (Math.random() - 0.5) * 80,\n          // Much more jitter\n          y: (Math.random() - 0.5) * 80\n        };\n        switch (currentPattern) {\n          case 0:\n            x = startX + jitter.x;\n            y = startY + noddingPattern + jitter.y;\n            break;\n          case 1:\n            x = startX + shakingPattern + jitter.x;\n            y = startY + jitter.y;\n            break;\n          case 2:\n            x = startX + circlePattern.x + jitter.x;\n            y = startY + circlePattern.y + jitter.y;\n            break;\n          default:\n            x = startX;\n            y = startY;\n        }\n        if (Math.random() < 0.03) {\n          // More frequent jumps\n          x += (Math.random() - 0.5) * 800; // Much larger jumps\n          y += (Math.random() - 0.5) * 800;\n        }\n\n        // Keep within viewport\n        const padding = 50;\n        x = Math.max(padding, Math.min(window.innerWidth - padding, x));\n        y = Math.max(padding, Math.min(window.innerHeight - padding, y));\n\n        // Update cursor position state\n        setCursorPosition({\n          x,\n          y\n        });\n\n        // Update the debug cursor directly (for immediate visual feedback)\n        if (debugCursor) {\n          debugCursor.style.left = `${x - 10}px`;\n          debugCursor.style.top = `${y - 10}px`;\n        }\n\n        // Directly move the real cursor using the Spline element's mousemove event\n        const splineElement = document.querySelector('spline-viewer');\n        if (splineElement) {\n          const event = new MouseEvent('mousemove', {\n            bubbles: true,\n            cancelable: true,\n            view: window,\n            clientX: x,\n            clientY: y\n          });\n          splineElement.dispatchEvent(event);\n        }\n        cursorAnimationRef.current = requestAnimationFrame(animate);\n      };\n\n      // Set state to indicate we're controlling the cursor\n      setIsCursorControlled(true);\n\n      // Add a class to the body to hide the cursor\n      document.body.classList.add('cursor-controlled');\n\n      // Start the animation loop\n      cursorAnimationRef.current = requestAnimationFrame(animate);\n    };\n    startAnimation();\n  };\n\n  // Clean up function to remove debug elements\n  const cleanupDebugElements = () => {\n    const debugCursor = document.getElementById('debug-cursor');\n    if (debugCursor) {\n      document.body.removeChild(debugCursor);\n    }\n\n    // Remove cursor-controlled class from body\n    document.body.classList.remove('cursor-controlled');\n  };\n\n  // Animation start handler that properly sets up cursor control\n  const startCursorAnimation = () => {\n    console.log(\"Starting cursor animation for agent talking\");\n\n    // Hide the system cursor\n    document.body.classList.add('cursor-controlled');\n    setIsCursorControlled(true);\n\n    // Call the animation function\n    simulateMovement();\n  };\n\n  // Animation stop handler that properly cleans up cursor control\n  const stopCursorAnimation = () => {\n    console.log(\"Stopping cursor animation\");\n\n    // Cancel the animation frame\n    if (cursorAnimationRef.current) {\n      cancelAnimationFrame(cursorAnimationRef.current);\n      cursorAnimationRef.current = null;\n    }\n\n    // Show the system cursor again\n    document.body.classList.remove('cursor-controlled');\n    setIsCursorControlled(false);\n  };\n  useEffect(() => {\n    // Initialize the RetellWebClient\n    const client = new RetellWebClient();\n    setRetellWebClient(client);\n\n    // Check for microphone permissions\n    checkMicrophonePermission();\n\n    // Set up event listeners\n    client.on(\"call_started\", () => {\n      console.log(\"call started\");\n      setEventStatus(prev => ({\n        ...prev,\n        callStarted: true,\n        callEnded: false\n      }));\n    });\n    client.on(\"call_ended\", () => {\n      console.log(\"call ended\");\n      setIsCallActive(false);\n      setEventStatus(prev => ({\n        ...prev,\n        callEnded: true\n      }));\n      // Stop cursor animation when call ends\n      stopCursorAnimation();\n      // Clean up any debug elements\n      cleanupDebugElements();\n    });\n    client.on(\"agent_start_talking\", () => {\n      console.log(\"agent_start_talking - STARTING CURSOR ANIMATION\");\n      setEventStatus(prev => ({\n        ...prev,\n        agentStartTalking: true,\n        agentStopTalking: false\n      }));\n\n      // Start cursor animation with proper cursor control\n      startCursorAnimation();\n    });\n    client.on(\"agent_stop_talking\", () => {\n      console.log(\"agent_stop_talking - STOPPING CURSOR ANIMATION\");\n      setEventStatus(prev => ({\n        ...prev,\n        agentStopTalking: true,\n        agentStartTalking: false\n      }));\n      // Stop cursor animation when agent stops talking\n      stopCursorAnimation();\n    });\n    client.on(\"update\", update => {\n      console.log(\"Update received:\", update);\n      if (update.transcript) {\n        // Check if transcript is an object with role and content properties\n        if (typeof update.transcript === 'object' && update.transcript.role && update.transcript.content) {\n          // Extract the content text\n          setEventStatus(prev => ({\n            ...prev,\n            transcript: update.transcript.content\n          }));\n        }\n        // Check if transcript is an array of message objects\n        else if (Array.isArray(update.transcript)) {\n          // Map through messages and format them\n          const formattedTranscript = update.transcript.map(msg => {\n            if (typeof msg === 'object' && msg.role && msg.content) {\n              return `${msg.role}: ${msg.content}`;\n            }\n            return String(msg); // Convert to string if it's some other type\n          }).join('\\n');\n          setEventStatus(prev => ({\n            ...prev,\n            transcript: formattedTranscript\n          }));\n        }\n        // If it's a string or can be converted to string\n        else {\n          setEventStatus(prev => ({\n            ...prev,\n            transcript: String(update.transcript)\n          }));\n        }\n      }\n    });\n    client.on(\"metadata\", metadata => {\n      console.log(\"Metadata received:\", metadata);\n    });\n    client.on(\"error\", error => {\n      console.error(\"An error occurred:\", error);\n      setEventStatus(prev => ({\n        ...prev,\n        error: error.message || \"Unknown error\"\n      }));\n      client.stopCall();\n    });\n\n    // Clean up event listeners on component unmount\n    return () => {\n      if (client) {\n        client.stopCall();\n      }\n\n      // Clean up animation and show cursor\n      stopCursorAnimation();\n      document.body.classList.remove('cursor-controlled');\n\n      // Remove debug elements\n      cleanupDebugElements();\n    };\n  }, []);\n\n  // Function to generate an access token from the server\n  const generateAccessToken = async () => {\n    try {\n      setIsGeneratingToken(true);\n      setEventStatus(prev => ({\n        ...prev,\n        error: null\n      }));\n      console.log(\"Requesting access token from server...\");\n\n      // Make the API call to our server endpoint\n      const response = await fetch(TOKEN_SERVER_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          agent_id: AGENT_ID\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Server responded with status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!data.access_token) {\n        throw new Error(\"No access token received from server\");\n      }\n      console.log(\"Access token received from server:\", data.access_token);\n      setAccessToken(data.access_token);\n      setCallInfo(data); // Store the full call info for reference\n      setIsGeneratingToken(false);\n      return data.access_token;\n    } catch (error) {\n      console.error(\"Failed to generate access token:\", error);\n      setEventStatus(prev => ({\n        ...prev,\n        error: error.message || \"Failed to generate access token\"\n      }));\n      setIsGeneratingToken(false);\n      return null;\n    }\n  };\n  const checkMicrophonePermission = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      setMicPermission('granted');\n      // Stop the stream tracks immediately\n      stream.getTracks().forEach(track => track.stop());\n    } catch (error) {\n      console.error('Microphone permission denied:', error);\n      setMicPermission('denied');\n    }\n  };\n  const requestMicrophonePermission = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      setMicPermission('granted');\n      return true;\n    } catch (error) {\n      console.error('Failed to get microphone permission:', error);\n      setMicPermission('denied');\n      return false;\n    }\n  };\n  const startCall = async () => {\n    if (!retellWebClient || isCallActive) return;\n\n    // First ensure we have microphone permissions\n    if (micPermission !== 'granted') {\n      const permissionGranted = await requestMicrophonePermission();\n      if (!permissionGranted) {\n        alert('Microphone permission is required to start a call');\n        return;\n      }\n    }\n    try {\n      // Reset event status\n      setEventStatus({\n        callStarted: false,\n        callEnded: false,\n        agentStartTalking: false,\n        agentStopTalking: false,\n        error: null,\n        transcript: ''\n      });\n\n      // Ensure we have a valid token\n      if (!accessToken) {\n        const token = await generateAccessToken();\n        if (!token) {\n          throw new Error(\"Failed to generate a valid access token\");\n        }\n      }\n      console.log(\"Starting call with access token...\");\n\n      // Start the call using the access token\n      await retellWebClient.startCall({\n        accessToken: accessToken,\n        sampleRate: 24000,\n        captureDeviceId: \"default\",\n        emitRawAudioSamples: false\n      });\n      setIsCallActive(true);\n    } catch (error) {\n      console.error(\"Failed to start call:\", error);\n      setEventStatus(prev => ({\n        ...prev,\n        error: error.message || \"Failed to start call\"\n      }));\n    }\n  };\n  const stopCall = () => {\n    if (retellWebClient && isCallActive) {\n      retellWebClient.stopCall();\n      setIsCallActive(false);\n    }\n  };\n\n  // Function to check if token is expired (tokens are valid for 30 seconds)\n  const isTokenExpired = () => {\n    // If we don't have token info, consider it expired\n    if (!accessToken || !callInfo) return true;\n\n    // Track when we received the token in our application\n    if (!callInfo._tokenReceivedTime) {\n      // If this is the first time checking, add a timestamp of when we received it\n      callInfo._tokenReceivedTime = Date.now();\n      setCallInfo({\n        ...callInfo\n      }); // Update the state to save this timestamp\n      return false; // Token is fresh\n    }\n\n    // Calculate how long ago we received the token\n    const tokenReceivedTime = callInfo._tokenReceivedTime;\n    const currentTime = Date.now();\n    const tokenAgeInSeconds = (currentTime - tokenReceivedTime) / 1000;\n\n    // Token expires after 30 seconds, but we consider it expired at 25s\n    // to give us a buffer to generate a new one\n    return tokenAgeInSeconds > 25;\n  };\n\n  // New function to handle loading completion and initialize Spline only once\n  const handleLoadingComplete = () => {\n    setLoadingComplete(true);\n    setSplineInitialized(true);\n  };\n\n  // For test purposes, update the test button click handler\n  const testCursorMovement = () => {\n    console.log(\"Testing cursor movement\");\n    startCursorAnimation();\n  };\n\n  // Component cleanup for debug elements\n  useEffect(() => {\n    return () => {\n      console.log(\"Cleaning up cursor animations and debug elements\");\n      if (cursorAnimationRef.current) {\n        cancelAnimationFrame(cursorAnimationRef.current);\n      }\n\n      // Remove all debug elements\n      const virtualCursor = document.getElementById('virtual-cursor');\n      if (virtualCursor) document.body.removeChild(virtualCursor);\n      const debugCursor = document.getElementById('debug-cursor');\n      if (debugCursor) document.body.removeChild(debugCursor);\n    };\n  }, []);\n\n  // Add special handler for when page visibility changes\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        // Page is hidden, stop animations\n        if (cursorAnimationRef.current) {\n          cancelAnimationFrame(cursorAnimationRef.current);\n          setIsCursorControlled(false);\n        }\n      } else {\n        // Page is visible again, restart animation if agent is talking\n        if (eventStatus.agentStartTalking && !eventStatus.agentStopTalking && isCallActive) {\n          startCursorAnimation();\n        }\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [eventStatus.agentStartTalking, eventStatus.agentStopTalking, isCallActive]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isCursorControlled && !isUserMovingCursor ? 'cursor-controlled' : ''}`,\n    children: !loadingComplete ? /*#__PURE__*/_jsxDEV(SplineLoader, {\n      onLoadingComplete: handleLoadingComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spline-container\",\n        children: [splineInitialized && /*#__PURE__*/_jsxDEV(SplineViewer, {\n          ref: splineInstanceRef,\n          url: \"https://prod.spline.design/8CIsvX5hg8u-JUKM/scene.splinecode\",\n          options: {\n            hint: true,\n            'loading-anim-type': 'spinner-small-dark'\n          },\n          persistOnUpdate: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: testCursorMovement,\n          style: {\n            position: 'absolute',\n            top: '10px',\n            left: '10px',\n            zIndex: 100,\n            background: 'rgba(0,0,0,0.5)',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            cursor: 'pointer'\n          },\n          children: \"Test Eyes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sidebar ${showUI ? 'open' : 'closed'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-ui\",\n          onClick: () => setShowUI(!showUI),\n          children: showUI ? '×' : '≡'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"AI Voice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-dot ${isCallActive ? 'active' : 'inactive'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: isCallActive ? 'Connected' : 'Disconnected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 15\n          }, this), micPermission !== 'granted' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: requestMicrophonePermission,\n            className: \"btn-secondary btn-small\",\n            children: \"Enable Mic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: !accessToken || isTokenExpired() ? generateAccessToken : startCall,\n              disabled: isCallActive || isGeneratingToken,\n              className: \"btn-primary\",\n              children: !accessToken || isTokenExpired() ? \"Connect\" : isGeneratingToken ? \"...\" : \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this), isCallActive && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: stopCall,\n              className: \"btn-danger\",\n              children: \"End\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 15\n          }, this), eventStatus.error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-badge\",\n            children: [\"Error: \", eventStatus.error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 17\n          }, this), isCallActive && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"talking-indicator\",\n            children: eventStatus.agentStartTalking && !eventStatus.agentStopTalking ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wave-animation\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 21\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 17\n          }, this), eventStatus.transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mini-transcript\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                whiteSpace: 'pre-line'\n              },\n              children: eventStatus.transcript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 605,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QMskvXVLnsLKIFk+FrTzzE31zqs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","RetellWebClient","SplineLoader","SplineViewer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","splineInstanceRef","cursorAnimationRef","isCallActive","setIsCallActive","retellWebClient","setRetellWebClient","eventStatus","setEventStatus","callStarted","callEnded","agentStartTalking","agentStopTalking","error","transcript","micPermission","setMicPermission","accessToken","setAccessToken","isGeneratingToken","setIsGeneratingToken","callInfo","setCallInfo","loadingComplete","setLoadingComplete","showUI","setShowUI","splineInitialized","setSplineInitialized","cursorPosition","setCursorPosition","x","window","innerWidth","y","innerHeight","isCursorControlled","setIsCursorControlled","realCursorPosition","setRealCursorPosition","isUserMovingCursor","setIsUserMovingCursor","userCursorTimeoutRef","AGENT_ID","TOKEN_SERVER_URL","handleMouseMove","event","clientX","clientY","document","body","classList","remove","current","clearTimeout","setTimeout","add","addEventListener","removeEventListener","splineElement","querySelector","mouseEvent","MouseEvent","bubbles","cancelable","view","dispatchEvent","debugCursor","getElementById","style","left","top","createElement","id","position","width","height","borderRadius","backgroundColor","zIndex","pointerEvents","appendChild","console","simulateMovement","log","startAnimation","cancelAnimationFrame","time","duration","randomAmplitude","nod","Math","random","shake","circleX","circleY","randomSpeed","circle","startX","startY","currentPattern","floor","patternDuration","maxPatternDuration","animate","progress","noddingPattern","sin","PI","shakingPattern","circlePattern","cos","jitter","padding","max","min","requestAnimationFrame","cleanupDebugElements","removeChild","startCursorAnimation","stopCursorAnimation","client","checkMicrophonePermission","on","prev","update","role","content","Array","isArray","formattedTranscript","map","msg","String","join","metadata","message","stopCall","generateAccessToken","response","fetch","method","headers","JSON","stringify","agent_id","ok","errorData","json","Error","status","data","access_token","stream","navigator","mediaDevices","getUserMedia","audio","getTracks","forEach","track","stop","requestMicrophonePermission","startCall","permissionGranted","alert","token","sampleRate","captureDeviceId","emitRawAudioSamples","isTokenExpired","_tokenReceivedTime","Date","now","tokenReceivedTime","currentTime","tokenAgeInSeconds","handleLoadingComplete","testCursorMovement","virtualCursor","handleVisibilityChange","hidden","className","children","onLoadingComplete","fileName","_jsxFileName","lineNumber","columnNumber","ref","url","options","hint","persistOnUpdate","onClick","background","color","border","cursor","disabled","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/kheri/Downloads/Bitcamp/bitcamp-2025/Bitcamp25/test-voice/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { RetellWebClient } from \"retell-client-js-sdk\";\nimport SplineLoader from './SplineLoader';\nimport SplineViewer from './SplineViewer';\nimport './index.css';\n\nfunction App() {\n  // Add a ref to maintain the Spline instance\n  const splineInstanceRef = useRef(null);\n  const cursorAnimationRef = useRef(null);\n  const [isCallActive, setIsCallActive] = useState(false);\n  const [retellWebClient, setRetellWebClient] = useState(null);\n  const [eventStatus, setEventStatus] = useState({\n    callStarted: false,\n    callEnded: false,\n    agentStartTalking: false,\n    agentStopTalking: false,\n    error: null,\n    transcript: ''\n  });\n  const [micPermission, setMicPermission] = useState(null);\n  const [accessToken, setAccessToken] = useState('');\n  const [isGeneratingToken, setIsGeneratingToken] = useState(false);\n  const [callInfo, setCallInfo] = useState(null);\n  const [loadingComplete, setLoadingComplete] = useState(false);\n  const [showUI, setShowUI] = useState(true);\n  // Add state to control the mounting/unmounting of Spline\n  const [splineInitialized, setSplineInitialized] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState({ x: window.innerWidth / 2, y: window.innerHeight / 2 });\n  const [isCursorControlled, setIsCursorControlled] = useState(false);\n  const [realCursorPosition, setRealCursorPosition] = useState({ x: window.innerWidth / 2, y: window.innerHeight / 2 });\n  const [isUserMovingCursor, setIsUserMovingCursor] = useState(false);\n  const userCursorTimeoutRef = useRef(null);\n\n  // Agent ID for Retell\n  const AGENT_ID = \"agent_30b1b504a89d37e3109a7da3e9\";\n  \n  // Server endpoint for token generation\n  const TOKEN_SERVER_URL = \"http://127.0.0.1:5000/api/generate-token\";\n\n  // Track real user cursor movements\n  useEffect(() => {\n    const handleMouseMove = (event) => {\n      const { clientX, clientY } = event;\n      setRealCursorPosition({ x: clientX, y: clientY });\n      \n      // When user moves cursor, use real position and stop simulated movement temporarily\n      if (isCursorControlled) {\n        setIsUserMovingCursor(true);\n        setCursorPosition({ x: clientX, y: clientY });\n        \n        // Make real cursor visible when user moves it\n        document.body.classList.remove('cursor-controlled');\n        \n        // Clear any existing timeout\n        if (userCursorTimeoutRef.current) {\n          clearTimeout(userCursorTimeoutRef.current);\n        }\n        \n        // Set a timeout to return to simulated movement and hide cursor again\n        userCursorTimeoutRef.current = setTimeout(() => {\n          setIsUserMovingCursor(false);\n          document.body.classList.add('cursor-controlled');\n        }, 2000); // Show cursor for 2 seconds as requested\n      }\n    };\n    \n    window.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (userCursorTimeoutRef.current) {\n        clearTimeout(userCursorTimeoutRef.current);\n      }\n    };\n  }, [isCursorControlled]);\n\n  // Control cursor movement via Spline - Direct event dispatch approach\n  useEffect(() => {\n    // Target the spline-viewer element directly\n    const splineElement = document.querySelector('spline-viewer');\n    if (splineElement) {\n      try {\n        // Create a synthetic MouseEvent to directly control where Spline \"thinks\" the cursor is\n        const mouseEvent = new MouseEvent('mousemove', {\n          bubbles: true,\n          cancelable: true,\n          view: window,\n          clientX: cursorPosition.x,\n          clientY: cursorPosition.y\n        });\n        \n        // Dispatch the mouse event directly on the spline-viewer element\n        splineElement.dispatchEvent(mouseEvent);\n        \n        // Also try dispatching on the document for broader effect\n        document.dispatchEvent(\n          new MouseEvent('mousemove', {\n            bubbles: true,\n            cancelable: true,\n            view: window,\n            clientX: cursorPosition.x,\n            clientY: cursorPosition.y\n          })\n        );\n        \n        // Update the debug cursor for visibility\n        let debugCursor = document.getElementById('debug-cursor');\n        if (debugCursor) {\n          debugCursor.style.left = `${cursorPosition.x - 10}px`;\n          debugCursor.style.top = `${cursorPosition.y - 10}px`;\n        } else {\n          // Create debug cursor if it doesn't exist\n          debugCursor = document.createElement('div');\n          debugCursor.id = 'debug-cursor';\n          debugCursor.style.position = 'absolute';\n          debugCursor.style.width = '20px';\n          debugCursor.style.height = '20px';\n          debugCursor.style.borderRadius = '50%';\n          debugCursor.style.backgroundColor = 'rgba(255, 0, 0, 0.5)';\n          debugCursor.style.zIndex = '10000';\n          debugCursor.style.pointerEvents = 'none';\n          debugCursor.style.left = `${cursorPosition.x - 10}px`;\n          debugCursor.style.top = `${cursorPosition.y - 10}px`;\n          document.body.appendChild(debugCursor);\n        }\n      } catch (error) {\n        console.error('Error moving cursor:', error);\n      }\n    }\n  }, [cursorPosition]);\n\n  // Manual testing function to simulate cursor movement\n  const simulateMovement = () => {\n    console.log(\"Starting manual cursor simulation\");\n    \n    // Use a function reference that has access to the latest state\n    const startAnimation = () => {\n      if (cursorAnimationRef.current) {\n        cancelAnimationFrame(cursorAnimationRef.current);\n      }\n\n      // Create a visible debug cursor\n      let debugCursor = document.getElementById('debug-cursor');\n      if (!debugCursor) {\n        debugCursor = document.createElement('div');\n        debugCursor.id = 'debug-cursor';\n        debugCursor.style.position = 'absolute';\n        debugCursor.style.width = '20px';\n        debugCursor.style.height = '20px';\n        debugCursor.style.borderRadius = '50%';\n        debugCursor.style.backgroundColor = 'rgba(255, 0, 0, 0.5)';\n        debugCursor.style.zIndex = '10000';\n        debugCursor.style.pointerEvents = 'none';\n        document.body.appendChild(debugCursor);\n      }\n\n      let time = 0;\n      const duration = 3000;\n      \n      // Generate random parameters with EXTREMELY LARGE amplitudes\n      const randomAmplitude = {\n        nod: 300 + Math.random() * 200,     // Super large movement\n        shake: 400 + Math.random() * 300,    // Even larger\n        circleX: 400 + Math.random() * 300,\n        circleY: 300 + Math.random() * 200\n      };\n      \n      const randomSpeed = {\n        nod: 15 + Math.random() * 10,       // Faster speeds\n        shake: 10 + Math.random() * 8,\n        circle: 8 + Math.random() * 5\n      };\n      \n      const startX = window.innerWidth / 2;\n      const startY = window.innerHeight / 2;\n      \n      let currentPattern = Math.floor(Math.random() * 3);\n      let patternDuration = 0;\n      let maxPatternDuration = Math.random() * 800 + 300;\n      \n      const animate = () => {\n        time += 16;\n        patternDuration += 16;\n        \n        if (time > duration) {\n          time = 0;\n        }\n        \n        if (patternDuration > maxPatternDuration) {\n          currentPattern = Math.floor(Math.random() * 3);\n          patternDuration = 0;\n          maxPatternDuration = Math.random() * 800 + 300;\n        }\n\n        const progress = time / duration;\n        \n        const noddingPattern = Math.sin(progress * Math.PI * randomSpeed.nod) * randomAmplitude.nod;\n        const shakingPattern = Math.sin(progress * Math.PI * randomSpeed.shake) * randomAmplitude.shake;\n        const circlePattern = {\n          x: Math.cos(progress * Math.PI * randomSpeed.circle) * randomAmplitude.circleX,\n          y: Math.sin(progress * Math.PI * randomSpeed.circle) * randomAmplitude.circleY\n        };\n        \n        let x, y;\n        \n        const jitter = {\n          x: (Math.random() - 0.5) * 80,  // Much more jitter\n          y: (Math.random() - 0.5) * 80\n        };\n        \n        switch(currentPattern) {\n          case 0:\n            x = startX + jitter.x;\n            y = startY + noddingPattern + jitter.y;\n            break;\n          case 1:\n            x = startX + shakingPattern + jitter.x;\n            y = startY + jitter.y;\n            break;\n          case 2:\n            x = startX + circlePattern.x + jitter.x;\n            y = startY + circlePattern.y + jitter.y;\n            break;\n          default:\n            x = startX;\n            y = startY;\n        }\n        \n        if (Math.random() < 0.03) { // More frequent jumps\n          x += (Math.random() - 0.5) * 800;  // Much larger jumps\n          y += (Math.random() - 0.5) * 800;\n        }\n        \n        // Keep within viewport\n        const padding = 50;\n        x = Math.max(padding, Math.min(window.innerWidth - padding, x));\n        y = Math.max(padding, Math.min(window.innerHeight - padding, y));\n        \n        // Update cursor position state\n        setCursorPosition({ x, y });\n        \n        // Update the debug cursor directly (for immediate visual feedback)\n        if (debugCursor) {\n          debugCursor.style.left = `${x - 10}px`;\n          debugCursor.style.top = `${y - 10}px`;\n        }\n        \n        // Directly move the real cursor using the Spline element's mousemove event\n        const splineElement = document.querySelector('spline-viewer');\n        if (splineElement) {\n          const event = new MouseEvent('mousemove', {\n            bubbles: true,\n            cancelable: true,\n            view: window,\n            clientX: x,\n            clientY: y\n          });\n          splineElement.dispatchEvent(event);\n        }\n        \n        cursorAnimationRef.current = requestAnimationFrame(animate);\n      };\n      \n      // Set state to indicate we're controlling the cursor\n      setIsCursorControlled(true);\n      \n      // Add a class to the body to hide the cursor\n      document.body.classList.add('cursor-controlled');\n      \n      // Start the animation loop\n      cursorAnimationRef.current = requestAnimationFrame(animate);\n    };\n    \n    startAnimation();\n  };\n\n  // Clean up function to remove debug elements\n  const cleanupDebugElements = () => {\n    const debugCursor = document.getElementById('debug-cursor');\n    if (debugCursor) {\n      document.body.removeChild(debugCursor);\n    }\n    \n    // Remove cursor-controlled class from body\n    document.body.classList.remove('cursor-controlled');\n  };\n\n  // Animation start handler that properly sets up cursor control\n  const startCursorAnimation = () => {\n    console.log(\"Starting cursor animation for agent talking\");\n    \n    // Hide the system cursor\n    document.body.classList.add('cursor-controlled');\n    setIsCursorControlled(true);\n    \n    // Call the animation function\n    simulateMovement();\n  };\n\n  // Animation stop handler that properly cleans up cursor control\n  const stopCursorAnimation = () => {\n    console.log(\"Stopping cursor animation\");\n    \n    // Cancel the animation frame\n    if (cursorAnimationRef.current) {\n      cancelAnimationFrame(cursorAnimationRef.current);\n      cursorAnimationRef.current = null;\n    }\n    \n    // Show the system cursor again\n    document.body.classList.remove('cursor-controlled');\n    setIsCursorControlled(false);\n  };\n\n  useEffect(() => {\n    // Initialize the RetellWebClient\n    const client = new RetellWebClient();\n    setRetellWebClient(client);\n    \n    // Check for microphone permissions\n    checkMicrophonePermission();\n    \n    // Set up event listeners\n    client.on(\"call_started\", () => {\n      console.log(\"call started\");\n      setEventStatus(prev => ({ ...prev, callStarted: true, callEnded: false }));\n    });\n\n    client.on(\"call_ended\", () => {\n      console.log(\"call ended\");\n      setIsCallActive(false);\n      setEventStatus(prev => ({ ...prev, callEnded: true }));\n      // Stop cursor animation when call ends\n      stopCursorAnimation();\n      // Clean up any debug elements\n      cleanupDebugElements();\n    });\n\n    client.on(\"agent_start_talking\", () => {\n      console.log(\"agent_start_talking - STARTING CURSOR ANIMATION\");\n      setEventStatus(prev => ({ ...prev, agentStartTalking: true, agentStopTalking: false }));\n      \n      // Start cursor animation with proper cursor control\n      startCursorAnimation();\n    });\n\n    client.on(\"agent_stop_talking\", () => {\n      console.log(\"agent_stop_talking - STOPPING CURSOR ANIMATION\");\n      setEventStatus(prev => ({ ...prev, agentStopTalking: true, agentStartTalking: false }));\n      // Stop cursor animation when agent stops talking\n      stopCursorAnimation();\n    });\n\n    client.on(\"update\", (update) => {\n      console.log(\"Update received:\", update);\n      if (update.transcript) {\n        // Check if transcript is an object with role and content properties\n        if (typeof update.transcript === 'object' && update.transcript.role && update.transcript.content) {\n          // Extract the content text\n          setEventStatus(prev => ({ ...prev, transcript: update.transcript.content }));\n        } \n        // Check if transcript is an array of message objects\n        else if (Array.isArray(update.transcript)) {\n          // Map through messages and format them\n          const formattedTranscript = update.transcript\n            .map(msg => {\n              if (typeof msg === 'object' && msg.role && msg.content) {\n                return `${msg.role}: ${msg.content}`;\n              }\n              return String(msg); // Convert to string if it's some other type\n            })\n            .join('\\n');\n          setEventStatus(prev => ({ ...prev, transcript: formattedTranscript }));\n        } \n        // If it's a string or can be converted to string\n        else {\n          setEventStatus(prev => ({ ...prev, transcript: String(update.transcript) }));\n        }\n      }\n    });\n\n    client.on(\"metadata\", (metadata) => {\n      console.log(\"Metadata received:\", metadata);\n    });\n\n    client.on(\"error\", (error) => {\n      console.error(\"An error occurred:\", error);\n      setEventStatus(prev => ({ ...prev, error: error.message || \"Unknown error\" }));\n      client.stopCall();\n    });\n    \n    // Clean up event listeners on component unmount\n    return () => {\n      if (client) {\n        client.stopCall();\n      }\n      \n      // Clean up animation and show cursor\n      stopCursorAnimation();\n      document.body.classList.remove('cursor-controlled');\n      \n      // Remove debug elements\n      cleanupDebugElements();\n    };\n  }, []);\n  \n  // Function to generate an access token from the server\n  const generateAccessToken = async () => {\n    try {\n      setIsGeneratingToken(true);\n      setEventStatus(prev => ({ ...prev, error: null }));\n      console.log(\"Requesting access token from server...\");\n      \n      // Make the API call to our server endpoint\n      const response = await fetch(TOKEN_SERVER_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          agent_id: AGENT_ID,\n        })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Server responded with status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (!data.access_token) {\n        throw new Error(\"No access token received from server\");\n      }\n      \n      console.log(\"Access token received from server:\", data.access_token);\n      setAccessToken(data.access_token);\n      setCallInfo(data); // Store the full call info for reference\n      setIsGeneratingToken(false);\n      \n      return data.access_token;\n    } catch (error) {\n      console.error(\"Failed to generate access token:\", error);\n      setEventStatus(prev => ({ ...prev, error: error.message || \"Failed to generate access token\" }));\n      setIsGeneratingToken(false);\n      return null;\n    }\n  };\n  \n  const checkMicrophonePermission = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      setMicPermission('granted');\n      // Stop the stream tracks immediately\n      stream.getTracks().forEach(track => track.stop());\n    } catch (error) {\n      console.error('Microphone permission denied:', error);\n      setMicPermission('denied');\n    }\n  };\n  \n  const requestMicrophonePermission = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({ audio: true });\n      setMicPermission('granted');\n      return true;\n    } catch (error) {\n      console.error('Failed to get microphone permission:', error);\n      setMicPermission('denied');\n      return false;\n    }\n  };\n  \n  const startCall = async () => {\n    if (!retellWebClient || isCallActive) return;\n    \n    // First ensure we have microphone permissions\n    if (micPermission !== 'granted') {\n      const permissionGranted = await requestMicrophonePermission();\n      if (!permissionGranted) {\n        alert('Microphone permission is required to start a call');\n        return;\n      }\n    }\n    \n    try {\n      // Reset event status\n      setEventStatus({\n        callStarted: false,\n        callEnded: false,\n        agentStartTalking: false,\n        agentStopTalking: false,\n        error: null,\n        transcript: ''\n      });\n      \n      // Ensure we have a valid token\n      if (!accessToken) {\n        const token = await generateAccessToken();\n        if (!token) {\n          throw new Error(\"Failed to generate a valid access token\");\n        }\n      }\n      \n      console.log(\"Starting call with access token...\");\n      \n      // Start the call using the access token\n      await retellWebClient.startCall({\n        accessToken: accessToken,\n        sampleRate: 24000,\n        captureDeviceId: \"default\",\n        emitRawAudioSamples: false,\n      });\n      \n      setIsCallActive(true);\n    } catch (error) {\n      console.error(\"Failed to start call:\", error);\n      setEventStatus(prev => ({ ...prev, error: error.message || \"Failed to start call\" }));\n    }\n  };\n  \n  const stopCall = () => {\n    if (retellWebClient && isCallActive) {\n      retellWebClient.stopCall();\n      setIsCallActive(false);\n    }\n  };\n  \n  // Function to check if token is expired (tokens are valid for 30 seconds)\n  const isTokenExpired = () => {\n    // If we don't have token info, consider it expired\n    if (!accessToken || !callInfo) return true;\n    \n    // Track when we received the token in our application\n    if (!callInfo._tokenReceivedTime) {\n      // If this is the first time checking, add a timestamp of when we received it\n      callInfo._tokenReceivedTime = Date.now();\n      setCallInfo({...callInfo}); // Update the state to save this timestamp\n      return false; // Token is fresh\n    }\n    \n    // Calculate how long ago we received the token\n    const tokenReceivedTime = callInfo._tokenReceivedTime;\n    const currentTime = Date.now();\n    const tokenAgeInSeconds = (currentTime - tokenReceivedTime) / 1000;\n    \n    // Token expires after 30 seconds, but we consider it expired at 25s\n    // to give us a buffer to generate a new one\n    return tokenAgeInSeconds > 25;\n  };\n  \n  // New function to handle loading completion and initialize Spline only once\n  const handleLoadingComplete = () => {\n    setLoadingComplete(true);\n    setSplineInitialized(true);\n  };\n\n  // For test purposes, update the test button click handler\n  const testCursorMovement = () => {\n    console.log(\"Testing cursor movement\");\n    startCursorAnimation();\n  };\n\n  // Component cleanup for debug elements\n  useEffect(() => {\n    return () => {\n      console.log(\"Cleaning up cursor animations and debug elements\");\n      if (cursorAnimationRef.current) {\n        cancelAnimationFrame(cursorAnimationRef.current);\n      }\n      \n      // Remove all debug elements\n      const virtualCursor = document.getElementById('virtual-cursor');\n      if (virtualCursor) document.body.removeChild(virtualCursor);\n      \n      const debugCursor = document.getElementById('debug-cursor');\n      if (debugCursor) document.body.removeChild(debugCursor);\n    };\n  }, []);\n\n  // Add special handler for when page visibility changes\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        // Page is hidden, stop animations\n        if (cursorAnimationRef.current) {\n          cancelAnimationFrame(cursorAnimationRef.current);\n          setIsCursorControlled(false);\n        }\n      } else {\n        // Page is visible again, restart animation if agent is talking\n        if (eventStatus.agentStartTalking && !eventStatus.agentStopTalking && isCallActive) {\n          startCursorAnimation();\n        }\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [eventStatus.agentStartTalking, eventStatus.agentStopTalking, isCallActive]);\n\n  return (\n    <div className={`App ${isCursorControlled && !isUserMovingCursor ? 'cursor-controlled' : ''}`}>\n      {!loadingComplete ? (\n        <SplineLoader onLoadingComplete={handleLoadingComplete} />\n      ) : (\n        <>\n          {/* Main Spline Animation filling the entire viewport */}\n          <div className=\"spline-container\">\n            {/* Use splineInitialized to ensure it's only mounted once */}\n            {splineInitialized && (\n              <SplineViewer \n                ref={splineInstanceRef}\n                url=\"https://prod.spline.design/8CIsvX5hg8u-JUKM/scene.splinecode\"\n                options={{\n                  hint: true,\n                  'loading-anim-type': 'spinner-small-dark'\n                }}\n                persistOnUpdate={true}\n              />\n            )}\n            \n            {/* Test button for debugging cursor movement */}\n            <button \n              onClick={testCursorMovement}\n              style={{\n                position: 'absolute',\n                top: '10px',\n                left: '10px',\n                zIndex: 100,\n                background: 'rgba(0,0,0,0.5)',\n                color: 'white',\n                border: 'none',\n                padding: '5px 10px',\n                cursor: 'pointer'\n              }}\n            >\n              Test Eyes\n            </button>\n          </div>\n          \n          {/* Minimal UI sidebar */}\n          <div className={`sidebar ${showUI ? 'open' : 'closed'}`}>\n            <div className=\"toggle-ui\" onClick={() => setShowUI(!showUI)}>\n              {showUI ? '×' : '≡'}\n            </div>\n            \n            <div className=\"sidebar-content\">\n              <h2>AI Voice</h2>\n              \n              <div className=\"status-indicator\">\n                <div className={`status-dot ${isCallActive ? 'active' : 'inactive'}`}></div>\n                <span>{isCallActive ? 'Connected' : 'Disconnected'}</span>\n              </div>\n              \n              {micPermission !== 'granted' && (\n                <button \n                  onClick={requestMicrophonePermission}\n                  className=\"btn-secondary btn-small\"\n                >\n                  Enable Mic\n                </button>\n              )}\n              \n              <div className=\"control-buttons\">\n                <button \n                  onClick={!accessToken || isTokenExpired() ? generateAccessToken : startCall} \n                  disabled={isCallActive || isGeneratingToken}\n                  className=\"btn-primary\"\n                >\n                  {!accessToken || isTokenExpired() \n                    ? \"Connect\" \n                    : isGeneratingToken \n                      ? \"...\" \n                      : \"Start\"}\n                </button>\n                \n                {isCallActive && (\n                  <button \n                    onClick={stopCall} \n                    className=\"btn-danger\"\n                  >\n                    End\n                  </button>\n                )}\n              </div>\n              \n              {eventStatus.error && (\n                <div className=\"error-badge\">\n                  Error: {eventStatus.error}\n                </div>\n              )}\n              \n              {/* Minimalistic talking indicator */}\n              {isCallActive && (\n                <div className=\"talking-indicator\">\n                  {eventStatus.agentStartTalking && !eventStatus.agentStopTalking ? (\n                    <div className=\"wave-animation\">\n                      <div className=\"wave\"></div>\n                      <div className=\"wave\"></div>\n                      <div className=\"wave\"></div>\n                      <div className=\"wave\"></div>\n                    </div>\n                  ) : null}\n                </div>\n              )}\n              \n              {/* Transcript in a minimal scrollable area */}\n              {eventStatus.transcript && (\n                <div className=\"mini-transcript\">\n                  <p style={{ whiteSpace: 'pre-line' }}>{eventStatus.transcript}</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}