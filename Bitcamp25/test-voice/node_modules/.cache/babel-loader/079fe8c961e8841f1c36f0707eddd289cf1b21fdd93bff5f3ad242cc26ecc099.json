{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ClipByValue } from '@tensorflow/tfjs-core';\nlet wasmClip;\nfunction setup(backend) {\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, ['number', 'number', 'number', 'number' // out_id\n  ]);\n}\nfunction clip(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    clipValueMin,\n    clipValueMax\n  } = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\n  return out;\n}\nexport const clipByValueConfig = {\n  kernelName: ClipByValue,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip\n};","map":{"version":3,"names":["ClipByValue","wasmClip","setup","backend","wasm","cwrap","clip","args","inputs","attrs","x","clipValueMin","clipValueMax","xId","dataIdMap","get","dataId","id","out","makeOutput","shape","dtype","outId","clipByValueConfig","kernelName","backendName","setupFunc","kernelFunc"],"sources":["C:\\Users\\kheri\\Downloads\\Bitcamp\\bitcamp-2025\\Bitcamp25\\tfjs-backend-wasm\\src\\kernels\\ClipByValue.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {clipValueMin, clipValueMax} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\n  return out;\n}\n\nexport const clipByValueConfig: KernelConfig = {\n  kernelName: ClipByValue,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,WAAW,QAAsE,uBAAuB;AAIhH,IAAIC,QAAwE;AAE5E,SAASC,KAAKA,CAACC,OAAoB;EACjCF,QAAQ,GAAGE,OAAO,CAACC,IAAI,CAACC,KAAK,CAACL,WAAW,EAAE,IAAI,CAAC,YAAY,CAC1D,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,CAAG;EAAA,CACZ,CAAC;AACJ;AAEA,SAASM,IAAIA,CAACC,IAIb;EACC,MAAM;IAACC,MAAM;IAAEL,OAAO;IAAEM;EAAK,CAAC,GAAGF,IAAI;EACrC,MAAM;IAACG;EAAC,CAAC,GAAGF,MAAM;EAClB,MAAM;IAACG,YAAY;IAAEC;EAAY,CAAC,GAAGH,KAAK;EAC1C,MAAMI,GAAG,GAAGV,OAAO,CAACW,SAAS,CAACC,GAAG,CAACL,CAAC,CAACM,MAAM,CAAC,CAACC,EAAE;EAC9C,MAAMC,GAAG,GAAGf,OAAO,CAACgB,UAAU,CAACT,CAAC,CAACU,KAAK,EAAEV,CAAC,CAACW,KAAK,CAAC;EAChD,MAAMC,KAAK,GAAGnB,OAAO,CAACW,SAAS,CAACC,GAAG,CAACG,GAAG,CAACF,MAAM,CAAC,CAACC,EAAE;EAClDhB,QAAQ,CAACY,GAAG,EAAEF,YAAY,EAAEC,YAAY,EAAEU,KAAK,CAAC;EAChD,OAAOJ,GAAG;AACZ;AAEA,OAAO,MAAMK,iBAAiB,GAAiB;EAC7CC,UAAU,EAAExB,WAAW;EACvByB,WAAW,EAAE,MAAM;EACnBC,SAAS,EAAExB,KAAK;EAChByB,UAAU,EAAErB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}