{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kheri\\\\Downloads\\\\Bitcamp\\\\bitcamp-2025\\\\Bitcamp25\\\\test-voice\\\\src\\\\FakeCursor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\n\n// Animation patterns for different talking states\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TALKING_PATTERNS = {\n  normal: [{\n    x: 0.5,\n    y: 0.5,\n    duration: 1000\n  },\n  // center\n  {\n    x: 0.5,\n    y: 0.3,\n    duration: 800\n  },\n  // look up\n  {\n    x: 0.5,\n    y: 0.5,\n    duration: 700\n  },\n  // center\n  {\n    x: 0.3,\n    y: 0.5,\n    duration: 900\n  },\n  // look left\n  {\n    x: 0.5,\n    y: 0.5,\n    duration: 600\n  },\n  // center\n  {\n    x: 0.7,\n    y: 0.5,\n    duration: 1000\n  },\n  // look right\n  {\n    x: 0.5,\n    y: 0.5,\n    duration: 700\n  },\n  // center\n  {\n    x: 0.5,\n    y: 0.7,\n    duration: 800\n  } // look down\n  ],\n  nodding: [{\n    x: 0.5,\n    y: 0.4,\n    duration: 600\n  },\n  // up slightly\n  {\n    x: 0.5,\n    y: 0.6,\n    duration: 600\n  },\n  // down slightly\n  {\n    x: 0.5,\n    y: 0.4,\n    duration: 600\n  },\n  // up slightly\n  {\n    x: 0.5,\n    y: 0.6,\n    duration: 600\n  } // down slightly\n  ],\n  shaking: [{\n    x: 0.4,\n    y: 0.5,\n    duration: 400\n  },\n  // left\n  {\n    x: 0.6,\n    y: 0.5,\n    duration: 400\n  },\n  // right\n  {\n    x: 0.4,\n    y: 0.5,\n    duration: 400\n  },\n  // left\n  {\n    x: 0.6,\n    y: 0.5,\n    duration: 400\n  } // right\n  ]\n};\nconst FakeCursor = ({\n  isTalking,\n  isUserInteracting,\n  debug = false\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const [position, setPosition] = useState({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2\n  });\n  const animationFrameRef = useRef(null);\n  const patternIndexRef = useRef(0);\n  const patternTimeRef = useRef(0);\n  const currentPatternRef = useRef('normal');\n\n  // Random pattern selection for more natural movement\n  const selectRandomPattern = () => {\n    const patterns = ['normal', 'nodding', 'shaking'];\n    const randomIndex = Math.floor(Math.random() * patterns.length);\n    return patterns[randomIndex];\n  };\n\n  // Reset to center when needed\n  const resetToCenter = () => {\n    setPosition({\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2\n    });\n  };\n\n  // Handle user mouse movement\n  useEffect(() => {\n    const handleUserMouseMove = e => {\n      // If the user moves their mouse, hide the fake cursor and let real cursor control the bot\n      setIsVisible(false);\n      // Clear any ongoing animation\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n\n    // Add listener for real mouse movement\n    window.addEventListener('mousemove', handleUserMouseMove);\n    return () => {\n      window.removeEventListener('mousemove', handleUserMouseMove);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, []);\n\n  // Animate the fake cursor when talking\n  useEffect(() => {\n    if (isTalking && !isUserInteracting) {\n      setIsVisible(true);\n\n      // Start with a random pattern when talking begins\n      if (!animationFrameRef.current) {\n        currentPatternRef.current = selectRandomPattern();\n        patternIndexRef.current = 0;\n        patternTimeRef.current = 0;\n      }\n      const animateCursor = timestamp => {\n        if (!patternTimeRef.current) {\n          patternTimeRef.current = timestamp;\n        }\n        const pattern = TALKING_PATTERNS[currentPatternRef.current];\n        const targetPoint = pattern[patternIndexRef.current];\n        const elapsed = timestamp - patternTimeRef.current;\n        if (elapsed >= targetPoint.duration) {\n          // Move to next point in pattern\n          patternIndexRef.current = (patternIndexRef.current + 1) % pattern.length;\n\n          // Occasionally change patterns for more natural movement\n          if (patternIndexRef.current === 0 && Math.random() > 0.5) {\n            currentPatternRef.current = selectRandomPattern();\n          }\n          patternTimeRef.current = timestamp;\n        }\n\n        // Calculate current position based on pattern\n        const previousIndex = patternIndexRef.current === 0 ? pattern.length - 1 : patternIndexRef.current - 1;\n        const previousTarget = pattern[previousIndex];\n        const nextTarget = pattern[patternIndexRef.current];\n        const progress = Math.min(elapsed / nextTarget.duration, 1);\n\n        // Apply easing for smoother movement\n        const easeProgress = easeInOutQuad(progress);\n\n        // Calculate new position\n        const targetX = window.innerWidth * nextTarget.x;\n        const targetY = window.innerHeight * nextTarget.y;\n        const previousX = window.innerWidth * previousTarget.x;\n        const previousY = window.innerHeight * previousTarget.y;\n        setPosition({\n          x: previousX + (targetX - previousX) * easeProgress,\n          y: previousY + (targetY - previousY) * easeProgress\n        });\n        animationFrameRef.current = requestAnimationFrame(animateCursor);\n      };\n      animationFrameRef.current = requestAnimationFrame(animateCursor);\n      return () => {\n        if (animationFrameRef.current) {\n          cancelAnimationFrame(animationFrameRef.current);\n          animationFrameRef.current = null;\n        }\n      };\n    } else {\n      // Not talking or user is interacting, stop animation\n      setIsVisible(false);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n    }\n  }, [isTalking, isUserInteracting]);\n\n  // Easing function for smoother animation\n  const easeInOutQuad = t => {\n    return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\n  };\n\n  // Apply the fake cursor effect to the DOM\n  useEffect(() => {\n    if (isVisible) {\n      // Create a synthetic mousemove event\n      const simulateMouseMove = () => {\n        const event = new MouseEvent('mousemove', {\n          view: window,\n          bubbles: true,\n          cancelable: true,\n          clientX: position.x,\n          clientY: position.y\n        });\n\n        // Dispatch the event to make the Spline animation respond\n        document.dispatchEvent(event);\n      };\n      simulateMouseMove();\n    }\n  }, [position, isVisible]);\n\n  // Only render visual cursor in debug mode\n  if (debug && isVisible) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        left: position.x,\n        top: position.y,\n        width: '20px',\n        height: '20px',\n        borderRadius: '50%',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        transform: 'translate(-50%, -50%)',\n        pointerEvents: 'none',\n        zIndex: 9999,\n        boxShadow: '0 0 10px rgba(255, 0, 0, 0.7)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pattern-indicator\",\n        style: {\n          position: 'absolute',\n          top: '25px',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          background: 'black',\n          color: 'white',\n          padding: '2px 5px',\n          borderRadius: '3px',\n          fontSize: '10px'\n        },\n        children: currentPatternRef.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n\n  // No visual output in normal mode\n  return null;\n};\n_s(FakeCursor, \"SHM+CcYfVyWVX7rC3d8lt2COI6c=\");\n_c = FakeCursor;\nexport default FakeCursor;\nvar _c;\n$RefreshReg$(_c, \"FakeCursor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","TALKING_PATTERNS","normal","x","y","duration","nodding","shaking","FakeCursor","isTalking","isUserInteracting","debug","_s","isVisible","setIsVisible","position","setPosition","window","innerWidth","innerHeight","animationFrameRef","patternIndexRef","patternTimeRef","currentPatternRef","selectRandomPattern","patterns","randomIndex","Math","floor","random","length","resetToCenter","handleUserMouseMove","e","current","cancelAnimationFrame","addEventListener","removeEventListener","animateCursor","timestamp","pattern","targetPoint","elapsed","previousIndex","previousTarget","nextTarget","progress","min","easeProgress","easeInOutQuad","targetX","targetY","previousX","previousY","requestAnimationFrame","t","pow","simulateMouseMove","event","MouseEvent","view","bubbles","cancelable","clientX","clientY","document","dispatchEvent","style","left","top","width","height","borderRadius","backgroundColor","transform","pointerEvents","zIndex","boxShadow","children","className","background","color","padding","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kheri/Downloads/Bitcamp/bitcamp-2025/Bitcamp25/test-voice/src/FakeCursor.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\n// Animation patterns for different talking states\r\nconst TALKING_PATTERNS = {\r\n  normal: [\r\n    { x: 0.5, y: 0.5, duration: 1000 }, // center\r\n    { x: 0.5, y: 0.3, duration: 800 },  // look up\r\n    { x: 0.5, y: 0.5, duration: 700 },  // center\r\n    { x: 0.3, y: 0.5, duration: 900 },  // look left\r\n    { x: 0.5, y: 0.5, duration: 600 },  // center\r\n    { x: 0.7, y: 0.5, duration: 1000 }, // look right\r\n    { x: 0.5, y: 0.5, duration: 700 },  // center\r\n    { x: 0.5, y: 0.7, duration: 800 },  // look down\r\n  ],\r\n  \r\n  nodding: [\r\n    { x: 0.5, y: 0.4, duration: 600 },  // up slightly\r\n    { x: 0.5, y: 0.6, duration: 600 },  // down slightly\r\n    { x: 0.5, y: 0.4, duration: 600 },  // up slightly\r\n    { x: 0.5, y: 0.6, duration: 600 },  // down slightly\r\n  ],\r\n  \r\n  shaking: [\r\n    { x: 0.4, y: 0.5, duration: 400 },  // left\r\n    { x: 0.6, y: 0.5, duration: 400 },  // right\r\n    { x: 0.4, y: 0.5, duration: 400 },  // left\r\n    { x: 0.6, y: 0.5, duration: 400 },  // right\r\n  ]\r\n};\r\n\r\nconst FakeCursor = ({ isTalking, isUserInteracting, debug = false }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [position, setPosition] = useState({ x: window.innerWidth / 2, y: window.innerHeight / 2 });\r\n  const animationFrameRef = useRef(null);\r\n  const patternIndexRef = useRef(0);\r\n  const patternTimeRef = useRef(0);\r\n  const currentPatternRef = useRef('normal');\r\n  \r\n  // Random pattern selection for more natural movement\r\n  const selectRandomPattern = () => {\r\n    const patterns = ['normal', 'nodding', 'shaking'];\r\n    const randomIndex = Math.floor(Math.random() * patterns.length);\r\n    return patterns[randomIndex];\r\n  };\r\n  \r\n  // Reset to center when needed\r\n  const resetToCenter = () => {\r\n    setPosition({\r\n      x: window.innerWidth / 2,\r\n      y: window.innerHeight / 2\r\n    });\r\n  };\r\n\r\n  // Handle user mouse movement\r\n  useEffect(() => {\r\n    const handleUserMouseMove = (e) => {\r\n      // If the user moves their mouse, hide the fake cursor and let real cursor control the bot\r\n      setIsVisible(false);\r\n      // Clear any ongoing animation\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    };\r\n    \r\n    // Add listener for real mouse movement\r\n    window.addEventListener('mousemove', handleUserMouseMove);\r\n    \r\n    return () => {\r\n      window.removeEventListener('mousemove', handleUserMouseMove);\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Animate the fake cursor when talking\r\n  useEffect(() => {\r\n    if (isTalking && !isUserInteracting) {\r\n      setIsVisible(true);\r\n      \r\n      // Start with a random pattern when talking begins\r\n      if (!animationFrameRef.current) {\r\n        currentPatternRef.current = selectRandomPattern();\r\n        patternIndexRef.current = 0;\r\n        patternTimeRef.current = 0;\r\n      }\r\n      \r\n      const animateCursor = (timestamp) => {\r\n        if (!patternTimeRef.current) {\r\n          patternTimeRef.current = timestamp;\r\n        }\r\n        \r\n        const pattern = TALKING_PATTERNS[currentPatternRef.current];\r\n        const targetPoint = pattern[patternIndexRef.current];\r\n        const elapsed = timestamp - patternTimeRef.current;\r\n        \r\n        if (elapsed >= targetPoint.duration) {\r\n          // Move to next point in pattern\r\n          patternIndexRef.current = (patternIndexRef.current + 1) % pattern.length;\r\n          \r\n          // Occasionally change patterns for more natural movement\r\n          if (patternIndexRef.current === 0 && Math.random() > 0.5) {\r\n            currentPatternRef.current = selectRandomPattern();\r\n          }\r\n          \r\n          patternTimeRef.current = timestamp;\r\n        }\r\n        \r\n        // Calculate current position based on pattern\r\n        const previousIndex = patternIndexRef.current === 0 ? pattern.length - 1 : patternIndexRef.current - 1;\r\n        const previousTarget = pattern[previousIndex];\r\n        const nextTarget = pattern[patternIndexRef.current];\r\n        const progress = Math.min(elapsed / nextTarget.duration, 1);\r\n        \r\n        // Apply easing for smoother movement\r\n        const easeProgress = easeInOutQuad(progress);\r\n        \r\n        // Calculate new position\r\n        const targetX = window.innerWidth * nextTarget.x;\r\n        const targetY = window.innerHeight * nextTarget.y;\r\n        const previousX = window.innerWidth * previousTarget.x;\r\n        const previousY = window.innerHeight * previousTarget.y;\r\n        \r\n        setPosition({\r\n          x: previousX + (targetX - previousX) * easeProgress,\r\n          y: previousY + (targetY - previousY) * easeProgress\r\n        });\r\n        \r\n        animationFrameRef.current = requestAnimationFrame(animateCursor);\r\n      };\r\n      \r\n      animationFrameRef.current = requestAnimationFrame(animateCursor);\r\n      \r\n      return () => {\r\n        if (animationFrameRef.current) {\r\n          cancelAnimationFrame(animationFrameRef.current);\r\n          animationFrameRef.current = null;\r\n        }\r\n      };\r\n    } else {\r\n      // Not talking or user is interacting, stop animation\r\n      setIsVisible(false);\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n        animationFrameRef.current = null;\r\n      }\r\n    }\r\n  }, [isTalking, isUserInteracting]);\r\n\r\n  // Easing function for smoother animation\r\n  const easeInOutQuad = (t) => {\r\n    return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n  };\r\n\r\n  // Apply the fake cursor effect to the DOM\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      // Create a synthetic mousemove event\r\n      const simulateMouseMove = () => {\r\n        const event = new MouseEvent('mousemove', {\r\n          view: window,\r\n          bubbles: true,\r\n          cancelable: true,\r\n          clientX: position.x,\r\n          clientY: position.y\r\n        });\r\n        \r\n        // Dispatch the event to make the Spline animation respond\r\n        document.dispatchEvent(event);\r\n      };\r\n      \r\n      simulateMouseMove();\r\n    }\r\n  }, [position, isVisible]);\r\n\r\n  // Only render visual cursor in debug mode\r\n  if (debug && isVisible) {\r\n    return (\r\n      <div \r\n        style={{\r\n          position: 'fixed',\r\n          left: position.x,\r\n          top: position.y,\r\n          width: '20px',\r\n          height: '20px',\r\n          borderRadius: '50%',\r\n          backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n          transform: 'translate(-50%, -50%)',\r\n          pointerEvents: 'none',\r\n          zIndex: 9999,\r\n          boxShadow: '0 0 10px rgba(255, 0, 0, 0.7)'\r\n        }}\r\n      >\r\n        <div className=\"pattern-indicator\" style={{ \r\n          position: 'absolute', \r\n          top: '25px', \r\n          left: '50%', \r\n          transform: 'translateX(-50%)',\r\n          background: 'black',\r\n          color: 'white',\r\n          padding: '2px 5px',\r\n          borderRadius: '3px',\r\n          fontSize: '10px'\r\n        }}>\r\n          {currentPatternRef.current}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // No visual output in normal mode\r\n  return null;\r\n};\r\n\r\nexport default FakeCursor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}