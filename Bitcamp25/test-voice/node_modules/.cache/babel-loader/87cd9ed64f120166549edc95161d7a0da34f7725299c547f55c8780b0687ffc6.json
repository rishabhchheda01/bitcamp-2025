{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kheri\\\\Downloads\\\\Bitcamp\\\\bitcamp-2025\\\\Bitcamp25\\\\test-voice\\\\src\\\\FaceDirectionComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"@tensorflow/tfjs\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nimport \"@mediapipe/face_mesh\";\nimport Webcam from \"react-webcam\";\nimport FaceDirectionDetector from \"./face_detection/FaceDirectionDetector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputResolution = {\n  width: 640,\n  height: 480\n};\nconst videoConstraints = {\n  width: inputResolution.width,\n  height: inputResolution.height,\n  facingMode: \"user\"\n};\nfunction FaceDirectionComponent() {\n  _s();\n  const canvasRef = useRef(null);\n  const webcamRef = useRef(null);\n  const [loaded, setLoaded] = useState(false);\n  const [detector, setDetector] = useState(null);\n  const [faceData, setFaceData] = useState({\n    position: {\n      x: 0,\n      y: 0\n    },\n    direction: {\n      yaw: 0,\n      turn: 0\n    },\n    horizontalDirection: \"center\"\n  });\n  const lastDirectionRef = useRef(\"center\");\n  const keyPressTimerRef = useRef(null);\n\n  // Initialize the detector\n  useEffect(() => {\n    const initializeDetector = async () => {\n      const options = {\n        showMesh: false,\n        showTagNumbers: false,\n        showDirection: false\n      };\n      const faceDetector = new FaceDirectionDetector(options);\n      setDetector(faceDetector);\n    };\n    initializeDetector();\n\n    // Cleanup on unmount\n    return () => {\n      if (detector) {\n        detector.stop();\n      }\n      // Clear any active timers\n      if (keyPressTimerRef.current) {\n        clearInterval(keyPressTimerRef.current);\n      }\n    };\n  }, []);\n\n  // Determine face direction based on x coordinate\n  const determineHorizontalDirection = x => {\n    if (x < 250) {\n      return \"left\";\n    } else if (x > 250) {\n      return \"right\";\n    } else {\n      return \"center\";\n    }\n  };\n\n  // Simulate keyboard press\n  const simulateKeyPress = key => {\n    try {\n      // Create keydown event\n      const keyDownEvent = new KeyboardEvent('keydown', {\n        key: key,\n        code: `Key${key.toUpperCase()}`,\n        keyCode: key.charCodeAt(0),\n        which: key.charCodeAt(0),\n        bubbles: true,\n        cancelable: true\n      });\n\n      // Dispatch the event\n      document.dispatchEvent(keyDownEvent);\n\n      // Log the key press\n      console.log(`Key ${key} pressed based on face direction`);\n\n      // Create and dispatch keyup event after a short delay\n      setTimeout(() => {\n        const keyUpEvent = new KeyboardEvent('keyup', {\n          key: key,\n          code: `Key${key.toUpperCase()}`,\n          keyCode: key.charCodeAt(0),\n          which: key.charCodeAt(0),\n          bubbles: true,\n          cancelable: true\n        });\n        document.dispatchEvent(keyUpEvent);\n      }, 100);\n    } catch (error) {\n      console.error(\"Error simulating key press:\", error);\n    }\n  };\n\n  // Effect to handle direction changes and trigger key presses\n  useEffect(() => {\n    // If direction changed, trigger appropriate key press\n    if (faceData.horizontalDirection !== lastDirectionRef.current) {\n      lastDirectionRef.current = faceData.horizontalDirection;\n\n      // Clear any existing timer\n      if (keyPressTimerRef.current) {\n        clearInterval(keyPressTimerRef.current);\n      }\n\n      // If looking left or right, start continuous key pressing\n      if (faceData.horizontalDirection === \"left\") {\n        simulateKeyPress('l');\n        keyPressTimerRef.current = setInterval(() => {\n          simulateKeyPress('l');\n        }, 300); // Repeat every 300ms\n      } else if (faceData.horizontalDirection === \"right\") {\n        simulateKeyPress('r');\n        keyPressTimerRef.current = setInterval(() => {\n          simulateKeyPress('r');\n        }, 300); // Repeat every 300ms\n      } else {\n        // If center, stop pressing keys\n        if (keyPressTimerRef.current) {\n          clearInterval(keyPressTimerRef.current);\n          keyPressTimerRef.current = null;\n        }\n      }\n    }\n  }, [faceData.horizontalDirection]);\n\n  // Handle video load\n  const handleVideoLoad = async videoNode => {\n    const video = videoNode.target;\n    if (video.readyState !== 4) return;\n    if (loaded) return;\n    if (detector && webcamRef.current && canvasRef.current) {\n      await detector.start(webcamRef.current.video, canvasRef.current, data => {\n        // Update face data when detection occurs\n        if (data && data.keypoints && data.keypoints[1]) {\n          const x = Math.round(data.keypoints[1].x);\n          const y = Math.round(data.keypoints[1].y);\n          const horizontalDirection = determineHorizontalDirection(x);\n          setFaceData({\n            position: {\n              x,\n              y\n            },\n            direction: {\n              yaw: Math.round(data.yaw || 0),\n              turn: Math.round(data.turn || 0)\n            },\n            horizontalDirection\n          });\n        }\n      });\n      setLoaded(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        visibility: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        width: inputResolution.width,\n        height: inputResolution.height,\n        videoConstraints: videoConstraints,\n        onLoadedData: handleVideoLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: inputResolution.width,\n        height: inputResolution.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        bottom: \"20px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n        color: \"#00f2fe\",\n        padding: \"8px 16px\",\n        borderRadius: \"8px\",\n        fontFamily: \"monospace\",\n        fontSize: \"14px\",\n        zIndex: 1000,\n        display: \"flex\",\n        gap: \"16px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Position: x=\", faceData.position.x, \", y=\", faceData.position.y]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Direction: \", faceData.horizontalDirection.toUpperCase(), faceData.horizontalDirection === \"left\" && \" (pressing 'l')\", faceData.horizontalDirection === \"right\" && \" (pressing 'r')\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Angles: yaw=\", faceData.direction.yaw, \"\\xB0, turn=\", faceData.direction.turn, \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(FaceDirectionComponent, \"KNcKV7Mf72xQoCi9oQvRR/7l9IQ=\");\n_c = FaceDirectionComponent;\nexport default FaceDirectionComponent;\nvar _c;\n$RefreshReg$(_c, \"FaceDirectionComponent\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Webcam","FaceDirectionDetector","jsxDEV","_jsxDEV","inputResolution","width","height","videoConstraints","facingMode","FaceDirectionComponent","_s","canvasRef","webcamRef","loaded","setLoaded","detector","setDetector","faceData","setFaceData","position","x","y","direction","yaw","turn","horizontalDirection","lastDirectionRef","keyPressTimerRef","initializeDetector","options","showMesh","showTagNumbers","showDirection","faceDetector","stop","current","clearInterval","determineHorizontalDirection","simulateKeyPress","key","keyDownEvent","KeyboardEvent","code","toUpperCase","keyCode","charCodeAt","which","bubbles","cancelable","document","dispatchEvent","console","log","setTimeout","keyUpEvent","error","setInterval","handleVideoLoad","videoNode","video","target","readyState","start","data","keypoints","Math","round","children","style","visibility","ref","onLoadedData","fileName","_jsxFileName","lineNumber","columnNumber","bottom","left","transform","backgroundColor","color","padding","borderRadius","fontFamily","fontSize","zIndex","display","gap","_c","$RefreshReg$"],"sources":["C:/Users/kheri/Downloads/Bitcamp/bitcamp-2025/Bitcamp25/test-voice/src/FaceDirectionComponent.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport \"@tensorflow/tfjs\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nimport \"@mediapipe/face_mesh\";\nimport Webcam from \"react-webcam\";\nimport FaceDirectionDetector from \"./face_detection/FaceDirectionDetector\";\n\nconst inputResolution = {\n  width: 640,\n  height: 480,\n};\n\nconst videoConstraints = {\n  width: inputResolution.width,\n  height: inputResolution.height,\n  facingMode: \"user\",\n};\n\nfunction FaceDirectionComponent() {\n  const canvasRef = useRef(null);\n  const webcamRef = useRef(null);\n  const [loaded, setLoaded] = useState(false);\n  const [detector, setDetector] = useState(null);\n  const [faceData, setFaceData] = useState({\n    position: { x: 0, y: 0 },\n    direction: { yaw: 0, turn: 0 },\n    horizontalDirection: \"center\"\n  });\n  const lastDirectionRef = useRef(\"center\");\n  const keyPressTimerRef = useRef(null);\n\n  // Initialize the detector\n  useEffect(() => {\n    const initializeDetector = async () => {\n      const options = {\n        showMesh: false,\n        showTagNumbers: false,\n        showDirection: false\n      };\n      const faceDetector = new FaceDirectionDetector(options);\n      setDetector(faceDetector);\n    };\n\n    initializeDetector();\n\n    // Cleanup on unmount\n    return () => {\n      if (detector) {\n        detector.stop();\n      }\n      // Clear any active timers\n      if (keyPressTimerRef.current) {\n        clearInterval(keyPressTimerRef.current);\n      }\n    };\n  }, []);\n\n  // Determine face direction based on x coordinate\n  const determineHorizontalDirection = (x) => {\n    if (x < 250) {\n      return \"left\";\n    } else if (x > 250) {\n      return \"right\";\n    } else {\n      return \"center\";\n    }\n  };\n\n  // Simulate keyboard press\n  const simulateKeyPress = (key) => {\n    try {\n      // Create keydown event\n      const keyDownEvent = new KeyboardEvent('keydown', {\n        key: key,\n        code: `Key${key.toUpperCase()}`,\n        keyCode: key.charCodeAt(0),\n        which: key.charCodeAt(0),\n        bubbles: true,\n        cancelable: true\n      });\n      \n      // Dispatch the event\n      document.dispatchEvent(keyDownEvent);\n      \n      // Log the key press\n      console.log(`Key ${key} pressed based on face direction`);\n      \n      // Create and dispatch keyup event after a short delay\n      setTimeout(() => {\n        const keyUpEvent = new KeyboardEvent('keyup', {\n          key: key,\n          code: `Key${key.toUpperCase()}`,\n          keyCode: key.charCodeAt(0),\n          which: key.charCodeAt(0),\n          bubbles: true,\n          cancelable: true\n        });\n        document.dispatchEvent(keyUpEvent);\n      }, 100);\n    } catch (error) {\n      console.error(\"Error simulating key press:\", error);\n    }\n  };\n\n  // Effect to handle direction changes and trigger key presses\n  useEffect(() => {\n    // If direction changed, trigger appropriate key press\n    if (faceData.horizontalDirection !== lastDirectionRef.current) {\n      lastDirectionRef.current = faceData.horizontalDirection;\n      \n      // Clear any existing timer\n      if (keyPressTimerRef.current) {\n        clearInterval(keyPressTimerRef.current);\n      }\n      \n      // If looking left or right, start continuous key pressing\n      if (faceData.horizontalDirection === \"left\") {\n        simulateKeyPress('l');\n        keyPressTimerRef.current = setInterval(() => {\n          simulateKeyPress('l');\n        }, 300); // Repeat every 300ms\n      } \n      else if (faceData.horizontalDirection === \"right\") {\n        simulateKeyPress('r');\n        keyPressTimerRef.current = setInterval(() => {\n          simulateKeyPress('r');\n        }, 300); // Repeat every 300ms\n      }\n      else {\n        // If center, stop pressing keys\n        if (keyPressTimerRef.current) {\n          clearInterval(keyPressTimerRef.current);\n          keyPressTimerRef.current = null;\n        }\n      }\n    }\n  }, [faceData.horizontalDirection]);\n\n  // Handle video load\n  const handleVideoLoad = async (videoNode) => {\n    const video = videoNode.target;\n    if (video.readyState !== 4) return;\n    if (loaded) return;\n\n    if (detector && webcamRef.current && canvasRef.current) {\n      await detector.start(\n        webcamRef.current.video, \n        canvasRef.current, \n        (data) => {\n          // Update face data when detection occurs\n          if (data && data.keypoints && data.keypoints[1]) {\n            const x = Math.round(data.keypoints[1].x);\n            const y = Math.round(data.keypoints[1].y);\n            const horizontalDirection = determineHorizontalDirection(x);\n            \n            setFaceData({\n              position: { x, y },\n              direction: {\n                yaw: Math.round(data.yaw || 0),\n                turn: Math.round(data.turn || 0)\n              },\n              horizontalDirection\n            });\n          }\n        }\n      );\n      setLoaded(true);\n    }\n  };\n\n  return (\n    <div>\n      {/* Hidden webcam and canvas for detection */}\n      <div style={{ position: \"absolute\", visibility: \"hidden\" }}>\n        <Webcam\n          ref={webcamRef}\n          width={inputResolution.width}\n          height={inputResolution.height}\n          videoConstraints={videoConstraints}\n          onLoadedData={handleVideoLoad}\n        />\n        \n        <canvas\n          ref={canvasRef}\n          width={inputResolution.width}\n          height={inputResolution.height}\n        />\n      </div>\n\n      {/* Simple display of face data */}\n      <div style={{ \n        position: \"fixed\", \n        bottom: \"20px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n        color: \"#00f2fe\",\n        padding: \"8px 16px\",\n        borderRadius: \"8px\",\n        fontFamily: \"monospace\",\n        fontSize: \"14px\",\n        zIndex: 1000,\n        display: \"flex\",\n        gap: \"16px\"\n      }}>\n        <div>\n          Position: x={faceData.position.x}, y={faceData.position.y}\n        </div>\n        <div>\n          Direction: {faceData.horizontalDirection.toUpperCase()}\n          {faceData.horizontalDirection === \"left\" && \" (pressing 'l')\"}\n          {faceData.horizontalDirection === \"right\" && \" (pressing 'r')\"}\n        </div>\n        <div>\n          Angles: yaw={faceData.direction.yaw}°, turn={faceData.direction.turn}°\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FaceDirectionComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}