{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kheri\\\\Downloads\\\\Bitcamp\\\\bitcamp-2025\\\\Bitcamp25\\\\test-voice\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { RetellWebClient } from \"retell-client-js-sdk\";\nimport SplineLoader from './SplineLoader';\nimport SplineViewer from './SplineViewer';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isCallActive, setIsCallActive] = useState(false);\n  const [retellWebClient, setRetellWebClient] = useState(null);\n  const [eventStatus, setEventStatus] = useState({\n    callStarted: false,\n    callEnded: false,\n    agentStartTalking: false,\n    agentStopTalking: false,\n    error: null,\n    transcript: ''\n  });\n  const [micPermission, setMicPermission] = useState(null);\n  const [accessToken, setAccessToken] = useState('');\n  const [isGeneratingToken, setIsGeneratingToken] = useState(false);\n  const [callInfo, setCallInfo] = useState(null);\n  const [loadingComplete, setLoadingComplete] = useState(false);\n\n  // Agent ID for Retell\n  const AGENT_ID = \"agent_30b1b504a89d37e3109a7da3e9\";\n\n  // Server endpoint for token generation\n  const TOKEN_SERVER_URL = \"http://127.0.0.1:5000/api/generate-token\";\n  useEffect(() => {\n    // Initialize the RetellWebClient\n    const client = new RetellWebClient();\n    setRetellWebClient(client);\n\n    // Check for microphone permissions\n    checkMicrophonePermission();\n\n    // Set up event listeners\n    client.on(\"call_started\", () => {\n      console.log(\"call started\");\n      setEventStatus(prev => ({\n        ...prev,\n        callStarted: true,\n        callEnded: false\n      }));\n    });\n    client.on(\"call_ended\", () => {\n      console.log(\"call ended\");\n      setIsCallActive(false);\n      setEventStatus(prev => ({\n        ...prev,\n        callEnded: true\n      }));\n    });\n    client.on(\"agent_start_talking\", () => {\n      console.log(\"agent_start_talking\");\n      setEventStatus(prev => ({\n        ...prev,\n        agentStartTalking: true,\n        agentStopTalking: false\n      }));\n    });\n    client.on(\"agent_stop_talking\", () => {\n      console.log(\"agent_stop_talking\");\n      setEventStatus(prev => ({\n        ...prev,\n        agentStopTalking: true,\n        agentStartTalking: false\n      }));\n    });\n    client.on(\"update\", update => {\n      console.log(\"Update received:\", update);\n      if (update.transcript) {\n        // Check if transcript is an object with role and content properties\n        if (typeof update.transcript === 'object' && update.transcript.role && update.transcript.content) {\n          // Extract the content text\n          setEventStatus(prev => ({\n            ...prev,\n            transcript: update.transcript.content\n          }));\n        }\n        // Check if transcript is an array of message objects\n        else if (Array.isArray(update.transcript)) {\n          // Map through messages and format them\n          const formattedTranscript = update.transcript.map(msg => {\n            if (typeof msg === 'object' && msg.role && msg.content) {\n              return `${msg.role}: ${msg.content}`;\n            }\n            return String(msg); // Convert to string if it's some other type\n          }).join('\\n');\n          setEventStatus(prev => ({\n            ...prev,\n            transcript: formattedTranscript\n          }));\n        }\n        // If it's a string or can be converted to string\n        else {\n          setEventStatus(prev => ({\n            ...prev,\n            transcript: String(update.transcript)\n          }));\n        }\n      }\n    });\n    client.on(\"metadata\", metadata => {\n      console.log(\"Metadata received:\", metadata);\n    });\n    client.on(\"error\", error => {\n      console.error(\"An error occurred:\", error);\n      setEventStatus(prev => ({\n        ...prev,\n        error: error.message || \"Unknown error\"\n      }));\n      client.stopCall();\n    });\n\n    // Clean up event listeners on component unmount\n    return () => {\n      if (client) {\n        client.stopCall();\n      }\n    };\n  }, []);\n\n  // Function to generate an access token from the server\n  const generateAccessToken = async () => {\n    try {\n      setIsGeneratingToken(true);\n      setEventStatus(prev => ({\n        ...prev,\n        error: null\n      }));\n      console.log(\"Requesting access token from server...\");\n\n      // Make the API call to our server endpoint\n      const response = await fetch(TOKEN_SERVER_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          agent_id: AGENT_ID\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Server responded with status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!data.access_token) {\n        throw new Error(\"No access token received from server\");\n      }\n      console.log(\"Access token received from server:\", data.access_token);\n      setAccessToken(data.access_token);\n      setCallInfo(data); // Store the full call info for reference\n      setIsGeneratingToken(false);\n      return data.access_token;\n    } catch (error) {\n      console.error(\"Failed to generate access token:\", error);\n      setEventStatus(prev => ({\n        ...prev,\n        error: error.message || \"Failed to generate access token\"\n      }));\n      setIsGeneratingToken(false);\n      return null;\n    }\n  };\n  const checkMicrophonePermission = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      setMicPermission('granted');\n      // Stop the stream tracks immediately\n      stream.getTracks().forEach(track => track.stop());\n    } catch (error) {\n      console.error('Microphone permission denied:', error);\n      setMicPermission('denied');\n    }\n  };\n  const requestMicrophonePermission = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      setMicPermission('granted');\n      return true;\n    } catch (error) {\n      console.error('Failed to get microphone permission:', error);\n      setMicPermission('denied');\n      return false;\n    }\n  };\n  const startCall = async () => {\n    if (!retellWebClient || isCallActive) return;\n\n    // First ensure we have microphone permissions\n    if (micPermission !== 'granted') {\n      const permissionGranted = await requestMicrophonePermission();\n      if (!permissionGranted) {\n        alert('Microphone permission is required to start a call');\n        return;\n      }\n    }\n    try {\n      // Reset event status\n      setEventStatus({\n        callStarted: false,\n        callEnded: false,\n        agentStartTalking: false,\n        agentStopTalking: false,\n        error: null,\n        transcript: ''\n      });\n\n      // Ensure we have a valid token\n      if (!accessToken) {\n        const token = await generateAccessToken();\n        if (!token) {\n          throw new Error(\"Failed to generate a valid access token\");\n        }\n      }\n      console.log(\"Starting call with access token...\");\n\n      // Start the call using the access token\n      await retellWebClient.startCall({\n        accessToken: accessToken,\n        sampleRate: 24000,\n        captureDeviceId: \"default\",\n        emitRawAudioSamples: false\n      });\n      setIsCallActive(true);\n    } catch (error) {\n      console.error(\"Failed to start call:\", error);\n      setEventStatus(prev => ({\n        ...prev,\n        error: error.message || \"Failed to start call\"\n      }));\n    }\n  };\n  const stopCall = () => {\n    if (retellWebClient && isCallActive) {\n      retellWebClient.stopCall();\n      setIsCallActive(false);\n    }\n  };\n\n  // Function to check if token is expired (tokens are valid for 30 seconds)\n  const isTokenExpired = () => {\n    // If we don't have token info, consider it expired\n    if (!accessToken || !callInfo) return true;\n\n    // Track when we received the token in our application\n    if (!callInfo._tokenReceivedTime) {\n      // If this is the first time checking, add a timestamp of when we received it\n      callInfo._tokenReceivedTime = Date.now();\n      setCallInfo({\n        ...callInfo\n      }); // Update the state to save this timestamp\n      return false; // Token is fresh\n    }\n\n    // Calculate how long ago we received the token\n    const tokenReceivedTime = callInfo._tokenReceivedTime;\n    const currentTime = Date.now();\n    const tokenAgeInSeconds = (currentTime - tokenReceivedTime) / 1000;\n\n    // Token expires after 30 seconds, but we consider it expired at 25s\n    // to give us a buffer to generate a new one\n    return tokenAgeInSeconds > 25;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!loadingComplete ? /*#__PURE__*/_jsxDEV(SplineLoader, {\n      onLoadingComplete: () => setLoadingComplete(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Retell Voice Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Microphone Permission: \", micPermission === 'granted' ? '✅ Granted' : micPermission === 'denied' ? '❌ Denied' : '❓ Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), micPermission !== 'granted' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: requestMicrophonePermission,\n          className: \"btn-secondary\",\n          children: \"Request Mic Permission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: !accessToken || isTokenExpired() ? generateAccessToken : startCall,\n          disabled: isCallActive || isGeneratingToken,\n          className: \"btn-primary\",\n          children: !accessToken || isTokenExpired() ? \"Generate Token\" : isGeneratingToken ? \"Generating...\" : \"Start Call with Agent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopCall,\n          disabled: !isCallActive,\n          className: \"btn-danger\",\n          children: \"Stop Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Call Status: \", isCallActive ? '🟢 Active' : '🔴 Inactive']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Agent ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 18\n            }, this), \" \", AGENT_ID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), accessToken && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Access Token:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this), \" \", accessToken.substring(0, 8), \"...\", accessToken.substring(accessToken.length - 4), isTokenExpired() && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \" (Expired)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), callInfo && callInfo.call_id && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Call ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 24\n              }, this), \" \", callInfo.call_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Connection Info:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyleType: 'none',\n              padding: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"status-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-icon\",\n                children: \"\\uD83D\\uDD11\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), accessToken ? isTokenExpired() ? \"Token expired (valid for 30 seconds)\" : \"Using valid access token\" : \"No token generated yet\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"status-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-icon\",\n                children: \"\\uD83D\\uDD12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this), \"Token generated via server using Retell SDK\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Event Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyleType: 'none',\n              padding: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"status-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-icon\",\n                children: \"\\uD83C\\uDFA4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), \"Call Started: \", eventStatus.callStarted ? '✅ Yes' : '❌ No']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"status-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-icon\",\n                children: \"\\uD83D\\uDED1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), \"Call Ended: \", eventStatus.callEnded ? '✅ Yes' : '❌ No']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"status-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-icon\",\n                children: \"\\uD83D\\uDDE3\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), \"Agent Talking: \", eventStatus.agentStartTalking && !eventStatus.agentStopTalking ? '✅ Yes' : '❌ No']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), eventStatus.error && /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"error-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-icon\",\n                children: \"\\u26A0\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this), \"Error: \", eventStatus.error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), eventStatus.transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Latest Transcript:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              whiteSpace: 'pre-line'\n            },\n            children: eventStatus.transcript\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Debug Info: Check console for detailed logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), loadingComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -1\n      },\n      children: /*#__PURE__*/_jsxDEV(SplineViewer, {\n        url: \"https://prod.spline.design/8CIsvX5hg8u-JUKM/scene.splinecode\",\n        options: {\n          hint: true,\n          'loading-anim-type': 'spinner-small-dark'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Fr4TvmRKfUPigp6T1CFye3eg7K0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","RetellWebClient","SplineLoader","SplineViewer","jsxDEV","_jsxDEV","App","_s","isCallActive","setIsCallActive","retellWebClient","setRetellWebClient","eventStatus","setEventStatus","callStarted","callEnded","agentStartTalking","agentStopTalking","error","transcript","micPermission","setMicPermission","accessToken","setAccessToken","isGeneratingToken","setIsGeneratingToken","callInfo","setCallInfo","loadingComplete","setLoadingComplete","AGENT_ID","TOKEN_SERVER_URL","client","checkMicrophonePermission","on","console","log","prev","update","role","content","Array","isArray","formattedTranscript","map","msg","String","join","metadata","message","stopCall","generateAccessToken","response","fetch","method","headers","body","JSON","stringify","agent_id","ok","errorData","json","Error","status","data","access_token","stream","navigator","mediaDevices","getUserMedia","audio","getTracks","forEach","track","stop","requestMicrophonePermission","startCall","permissionGranted","alert","token","sampleRate","captureDeviceId","emitRawAudioSamples","isTokenExpired","_tokenReceivedTime","Date","now","tokenReceivedTime","currentTime","tokenAgeInSeconds","className","children","onLoadingComplete","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","substring","length","style","color","call_id","listStyleType","padding","whiteSpace","position","top","left","width","height","zIndex","url","options","hint","_c","$RefreshReg$"],"sources":["C:/Users/kheri/Downloads/Bitcamp/bitcamp-2025/Bitcamp25/test-voice/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { RetellWebClient } from \"retell-client-js-sdk\";\r\nimport SplineLoader from './SplineLoader';\r\nimport SplineViewer from './SplineViewer';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  const [isCallActive, setIsCallActive] = useState(false);\r\n  const [retellWebClient, setRetellWebClient] = useState(null);\r\n  const [eventStatus, setEventStatus] = useState({\r\n    callStarted: false,\r\n    callEnded: false,\r\n    agentStartTalking: false,\r\n    agentStopTalking: false,\r\n    error: null,\r\n    transcript: ''\r\n  });\r\n  const [micPermission, setMicPermission] = useState(null);\r\n  const [accessToken, setAccessToken] = useState('');\r\n  const [isGeneratingToken, setIsGeneratingToken] = useState(false);\r\n  const [callInfo, setCallInfo] = useState(null);\r\n  const [loadingComplete, setLoadingComplete] = useState(false);\r\n\r\n  // Agent ID for Retell\r\n  const AGENT_ID = \"agent_30b1b504a89d37e3109a7da3e9\";\r\n  \r\n  // Server endpoint for token generation\r\n  const TOKEN_SERVER_URL = \"http://127.0.0.1:5000/api/generate-token\";\r\n\r\n  useEffect(() => {\r\n    // Initialize the RetellWebClient\r\n    const client = new RetellWebClient();\r\n    setRetellWebClient(client);\r\n    \r\n    // Check for microphone permissions\r\n    checkMicrophonePermission();\r\n    \r\n    // Set up event listeners\r\n    client.on(\"call_started\", () => {\r\n      console.log(\"call started\");\r\n      setEventStatus(prev => ({ ...prev, callStarted: true, callEnded: false }));\r\n    });\r\n\r\n    client.on(\"call_ended\", () => {\r\n      console.log(\"call ended\");\r\n      setIsCallActive(false);\r\n      setEventStatus(prev => ({ ...prev, callEnded: true }));\r\n    });\r\n\r\n    client.on(\"agent_start_talking\", () => {\r\n      console.log(\"agent_start_talking\");\r\n      setEventStatus(prev => ({ ...prev, agentStartTalking: true, agentStopTalking: false }));\r\n    });\r\n\r\n    client.on(\"agent_stop_talking\", () => {\r\n      console.log(\"agent_stop_talking\");\r\n      setEventStatus(prev => ({ ...prev, agentStopTalking: true, agentStartTalking: false }));\r\n    });\r\n\r\n    client.on(\"update\", (update) => {\r\n      console.log(\"Update received:\", update);\r\n      if (update.transcript) {\r\n        // Check if transcript is an object with role and content properties\r\n        if (typeof update.transcript === 'object' && update.transcript.role && update.transcript.content) {\r\n          // Extract the content text\r\n          setEventStatus(prev => ({ ...prev, transcript: update.transcript.content }));\r\n        } \r\n        // Check if transcript is an array of message objects\r\n        else if (Array.isArray(update.transcript)) {\r\n          // Map through messages and format them\r\n          const formattedTranscript = update.transcript\r\n            .map(msg => {\r\n              if (typeof msg === 'object' && msg.role && msg.content) {\r\n                return `${msg.role}: ${msg.content}`;\r\n              }\r\n              return String(msg); // Convert to string if it's some other type\r\n            })\r\n            .join('\\n');\r\n          setEventStatus(prev => ({ ...prev, transcript: formattedTranscript }));\r\n        } \r\n        // If it's a string or can be converted to string\r\n        else {\r\n          setEventStatus(prev => ({ ...prev, transcript: String(update.transcript) }));\r\n        }\r\n      }\r\n    });\r\n\r\n    client.on(\"metadata\", (metadata) => {\r\n      console.log(\"Metadata received:\", metadata);\r\n    });\r\n\r\n    client.on(\"error\", (error) => {\r\n      console.error(\"An error occurred:\", error);\r\n      setEventStatus(prev => ({ ...prev, error: error.message || \"Unknown error\" }));\r\n      client.stopCall();\r\n    });\r\n    \r\n    // Clean up event listeners on component unmount\r\n    return () => {\r\n      if (client) {\r\n        client.stopCall();\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  // Function to generate an access token from the server\r\n  const generateAccessToken = async () => {\r\n    try {\r\n      setIsGeneratingToken(true);\r\n      setEventStatus(prev => ({ ...prev, error: null }));\r\n      console.log(\"Requesting access token from server...\");\r\n      \r\n      // Make the API call to our server endpoint\r\n      const response = await fetch(TOKEN_SERVER_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          agent_id: AGENT_ID,\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Server responded with status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!data.access_token) {\r\n        throw new Error(\"No access token received from server\");\r\n      }\r\n      \r\n      console.log(\"Access token received from server:\", data.access_token);\r\n      setAccessToken(data.access_token);\r\n      setCallInfo(data); // Store the full call info for reference\r\n      setIsGeneratingToken(false);\r\n      \r\n      return data.access_token;\r\n    } catch (error) {\r\n      console.error(\"Failed to generate access token:\", error);\r\n      setEventStatus(prev => ({ ...prev, error: error.message || \"Failed to generate access token\" }));\r\n      setIsGeneratingToken(false);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  const checkMicrophonePermission = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      setMicPermission('granted');\r\n      // Stop the stream tracks immediately\r\n      stream.getTracks().forEach(track => track.stop());\r\n    } catch (error) {\r\n      console.error('Microphone permission denied:', error);\r\n      setMicPermission('denied');\r\n    }\r\n  };\r\n  \r\n  const requestMicrophonePermission = async () => {\r\n    try {\r\n      await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      setMicPermission('granted');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to get microphone permission:', error);\r\n      setMicPermission('denied');\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  const startCall = async () => {\r\n    if (!retellWebClient || isCallActive) return;\r\n    \r\n    // First ensure we have microphone permissions\r\n    if (micPermission !== 'granted') {\r\n      const permissionGranted = await requestMicrophonePermission();\r\n      if (!permissionGranted) {\r\n        alert('Microphone permission is required to start a call');\r\n        return;\r\n      }\r\n    }\r\n    \r\n    try {\r\n      // Reset event status\r\n      setEventStatus({\r\n        callStarted: false,\r\n        callEnded: false,\r\n        agentStartTalking: false,\r\n        agentStopTalking: false,\r\n        error: null,\r\n        transcript: ''\r\n      });\r\n      \r\n      // Ensure we have a valid token\r\n      if (!accessToken) {\r\n        const token = await generateAccessToken();\r\n        if (!token) {\r\n          throw new Error(\"Failed to generate a valid access token\");\r\n        }\r\n      }\r\n      \r\n      console.log(\"Starting call with access token...\");\r\n      \r\n      // Start the call using the access token\r\n      await retellWebClient.startCall({\r\n        accessToken: accessToken,\r\n        sampleRate: 24000,\r\n        captureDeviceId: \"default\",\r\n        emitRawAudioSamples: false,\r\n      });\r\n      \r\n      setIsCallActive(true);\r\n    } catch (error) {\r\n      console.error(\"Failed to start call:\", error);\r\n      setEventStatus(prev => ({ ...prev, error: error.message || \"Failed to start call\" }));\r\n    }\r\n  };\r\n  \r\n  const stopCall = () => {\r\n    if (retellWebClient && isCallActive) {\r\n      retellWebClient.stopCall();\r\n      setIsCallActive(false);\r\n    }\r\n  };\r\n  \r\n  // Function to check if token is expired (tokens are valid for 30 seconds)\r\n  const isTokenExpired = () => {\r\n    // If we don't have token info, consider it expired\r\n    if (!accessToken || !callInfo) return true;\r\n    \r\n    // Track when we received the token in our application\r\n    if (!callInfo._tokenReceivedTime) {\r\n      // If this is the first time checking, add a timestamp of when we received it\r\n      callInfo._tokenReceivedTime = Date.now();\r\n      setCallInfo({...callInfo}); // Update the state to save this timestamp\r\n      return false; // Token is fresh\r\n    }\r\n    \r\n    // Calculate how long ago we received the token\r\n    const tokenReceivedTime = callInfo._tokenReceivedTime;\r\n    const currentTime = Date.now();\r\n    const tokenAgeInSeconds = (currentTime - tokenReceivedTime) / 1000;\r\n    \r\n    // Token expires after 30 seconds, but we consider it expired at 25s\r\n    // to give us a buffer to generate a new one\r\n    return tokenAgeInSeconds > 25;\r\n  };\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      {!loadingComplete ? (\r\n        <SplineLoader onLoadingComplete={() => setLoadingComplete(true)} />\r\n      ) : (\r\n        <div className=\"content-container\">\r\n          <h1>Retell Voice Demo</h1>\r\n          \r\n          <div className=\"card\">\r\n            <h3>Microphone Permission: {micPermission === 'granted' ? '✅ Granted' : micPermission === 'denied' ? '❌ Denied' : '❓ Unknown'}</h3>\r\n            {micPermission !== 'granted' && (\r\n              <button \r\n                onClick={requestMicrophonePermission}\r\n                className=\"btn-secondary\"\r\n              >\r\n                Request Mic Permission\r\n              </button>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"card\">\r\n            <button \r\n              onClick={!accessToken || isTokenExpired() ? generateAccessToken : startCall} \r\n              disabled={isCallActive || isGeneratingToken}\r\n              className=\"btn-primary\"\r\n            >\r\n              {!accessToken || isTokenExpired() ? \"Generate Token\" : isGeneratingToken ? \"Generating...\" : \"Start Call with Agent\"}\r\n            </button>\r\n            <button \r\n              onClick={stopCall} \r\n              disabled={!isCallActive}\r\n              className=\"btn-danger\"\r\n            >\r\n              Stop Call\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"card\">\r\n            <h3>Call Status: {isCallActive ? '🟢 Active' : '🔴 Inactive'}</h3>\r\n            <div className=\"status-display\">\r\n              <p><strong>Agent ID:</strong> {AGENT_ID}</p>\r\n              {accessToken && (\r\n                <div>\r\n                  <p>\r\n                    <strong>Access Token:</strong> {accessToken.substring(0, 8)}...\r\n                    {accessToken.substring(accessToken.length-4)}\r\n                    {isTokenExpired() && <span style={{color: 'red'}}> (Expired)</span>}\r\n                  </p>\r\n                  {callInfo && callInfo.call_id && (\r\n                    <p><strong>Call ID:</strong> {callInfo.call_id}</p>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"status-display\">\r\n              <p><strong>Connection Info:</strong></p>\r\n              <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n                <li className=\"status-item\">\r\n                  <span className=\"status-icon\">🔑</span>\r\n                  {accessToken ? \r\n                    (isTokenExpired() ? \"Token expired (valid for 30 seconds)\" : \"Using valid access token\") \r\n                    : \"No token generated yet\"}\r\n                </li>\r\n                <li className=\"status-item\">\r\n                  <span className=\"status-icon\">🔒</span>\r\n                  Token generated via server using Retell SDK\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"status-display\">\r\n              <p><strong>Event Status:</strong></p>\r\n              <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n                <li className=\"status-item\">\r\n                  <span className=\"status-icon\">🎤</span>\r\n                  Call Started: {eventStatus.callStarted ? '✅ Yes' : '❌ No'}\r\n                </li>\r\n                <li className=\"status-item\">\r\n                  <span className=\"status-icon\">🛑</span>\r\n                  Call Ended: {eventStatus.callEnded ? '✅ Yes' : '❌ No'}\r\n                </li>\r\n                <li className=\"status-item\">\r\n                  <span className=\"status-icon\">🗣️</span>\r\n                  Agent Talking: {eventStatus.agentStartTalking && !eventStatus.agentStopTalking ? '✅ Yes' : '❌ No'}\r\n                </li>\r\n                {eventStatus.error && (\r\n                  <li className=\"error-message\">\r\n                    <span className=\"status-icon\">⚠️</span>\r\n                    Error: {eventStatus.error}\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n            {eventStatus.transcript && (\r\n              <div className=\"transcript-container\">\r\n                <p><strong>Latest Transcript:</strong></p>\r\n                <p style={{ whiteSpace: 'pre-line' }}>{eventStatus.transcript}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"debug-info\">\r\n            <p>Debug Info: Check console for detailed logs</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Background Spline animation */}\r\n      {loadingComplete && (\r\n        <div style={{ \r\n          position: 'fixed', \r\n          top: 0, \r\n          left: 0, \r\n          width: '100%', \r\n          height: '100%', \r\n          zIndex: -1 \r\n        }}>\r\n          <SplineViewer \r\n            url=\"https://prod.spline.design/8CIsvX5hg8u-JUKM/scene.splinecode\"\r\n            options={{\r\n              hint: true,\r\n              'loading-anim-type': 'spinner-small-dark'\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}