{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kheri\\\\Downloads\\\\Bitcamp\\\\bitcamp-2025\\\\Bitcamp25\\\\test-voice\\\\src\\\\SplineViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SplineViewer = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  url,\n  options,\n  persistOnUpdate = false\n}, ref) => {\n  _s();\n  const containerRef = useRef(null);\n  const splineElementRef = useRef(null);\n  const isInitializedRef = useRef(false);\n\n  // Expose methods to parent component via ref\n  useImperativeHandle(ref, () => ({\n    getSplineElement: () => splineElementRef.current,\n    getContainer: () => containerRef.current,\n    simulateMouseMove: (x, y) => {\n      if (splineElementRef.current) {\n        try {\n          const event = new MouseEvent('mousemove', {\n            bubbles: true,\n            cancelable: true,\n            view: window,\n            clientX: x,\n            clientY: y\n          });\n          splineElementRef.current.dispatchEvent(event);\n          return true;\n        } catch (e) {\n          console.error(\"Failed to simulate mouse move on Spline:\", e);\n          return false;\n        }\n      }\n      return false;\n    }\n  }));\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    // If we should persist and we already have a Spline instance, don't recreate\n    if (persistOnUpdate && isInitializedRef.current && splineElementRef.current) {\n      return;\n    }\n\n    // Clean up any existing spline-viewer elements if not persisting\n    const existingViewer = containerRef.current.querySelector('spline-viewer');\n    if (existingViewer && (!persistOnUpdate || !isInitializedRef.current)) {\n      existingViewer.remove();\n    }\n\n    // If already initialized and should persist, don't continue\n    if (persistOnUpdate && isInitializedRef.current) {\n      return;\n    }\n\n    // Create a new spline-viewer element\n    const splineViewer = document.createElement('spline-viewer');\n    splineElementRef.current = splineViewer;\n\n    // Set the URL attribute\n    splineViewer.setAttribute('url', url);\n\n    // Set additional options if provided\n    if (options) {\n      Object.entries(options).forEach(([key, value]) => {\n        if (value === true) {\n          splineViewer.setAttribute(key, '');\n        } else if (value !== false) {\n          splineViewer.setAttribute(key, value);\n        }\n      });\n    }\n\n    // Add an event listener to know when Spline is fully loaded\n    splineViewer.addEventListener('load', () => {\n      console.log(\"Spline has loaded!\");\n\n      // Try to access the app property which might control the camera\n      try {\n        if (splineViewer.app && splineViewer.app.camera) {\n          console.log(\"Spline camera found:\", splineViewer.app.camera);\n        }\n      } catch (e) {\n        console.log(\"Couldn't access Spline camera:\", e);\n      }\n    });\n\n    // Append the viewer to the container\n    containerRef.current.appendChild(splineViewer);\n\n    // Load the Spline viewer script if not already loaded\n    if (!document.querySelector('script[src*=\"@splinetool/viewer\"]')) {\n      const script = document.createElement('script');\n      script.type = 'module';\n      script.src = 'https://unpkg.com/@splinetool/viewer@1.9.82/build/spline-viewer.js';\n      document.head.appendChild(script);\n    }\n\n    // Mark as initialized\n    isInitializedRef.current = true;\n\n    // Clean up function - only remove if not persisting\n    return () => {\n      if (!persistOnUpdate && containerRef.current) {\n        const viewer = containerRef.current.querySelector('spline-viewer');\n        if (viewer) {\n          viewer.remove();\n          isInitializedRef.current = false;\n        }\n      }\n    };\n  }, [url, options, persistOnUpdate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 10\n  }, this);\n}, \"rITkLeCAUx8dcqV1GRP+l6BGm5o=\")), \"rITkLeCAUx8dcqV1GRP+l6BGm5o=\");\n_c2 = SplineViewer;\nexport default SplineViewer;\nvar _c, _c2;\n$RefreshReg$(_c, \"SplineViewer$forwardRef\");\n$RefreshReg$(_c2, \"SplineViewer\");","map":{"version":3,"names":["React","useEffect","useRef","forwardRef","useImperativeHandle","jsxDEV","_jsxDEV","SplineViewer","_s","_c","url","options","persistOnUpdate","ref","containerRef","splineElementRef","isInitializedRef","getSplineElement","current","getContainer","simulateMouseMove","x","y","event","MouseEvent","bubbles","cancelable","view","window","clientX","clientY","dispatchEvent","e","console","error","existingViewer","querySelector","remove","splineViewer","document","createElement","setAttribute","Object","entries","forEach","key","value","addEventListener","log","app","camera","appendChild","script","type","src","head","viewer","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/kheri/Downloads/Bitcamp/bitcamp-2025/Bitcamp25/test-voice/src/SplineViewer.js"],"sourcesContent":["import React, { useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\n\nconst SplineViewer = forwardRef(({ url, options, persistOnUpdate = false }, ref) => {\n  const containerRef = useRef(null);\n  const splineElementRef = useRef(null);\n  const isInitializedRef = useRef(false);\n\n  // Expose methods to parent component via ref\n  useImperativeHandle(ref, () => ({\n    getSplineElement: () => splineElementRef.current,\n    getContainer: () => containerRef.current,\n    simulateMouseMove: (x, y) => {\n      if (splineElementRef.current) {\n        try {\n          const event = new MouseEvent('mousemove', {\n            bubbles: true,\n            cancelable: true,\n            view: window,\n            clientX: x,\n            clientY: y\n          });\n          splineElementRef.current.dispatchEvent(event);\n          return true;\n        } catch (e) {\n          console.error(\"Failed to simulate mouse move on Spline:\", e);\n          return false;\n        }\n      }\n      return false;\n    }\n  }));\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    // If we should persist and we already have a Spline instance, don't recreate\n    if (persistOnUpdate && isInitializedRef.current && splineElementRef.current) {\n      return;\n    }\n    \n    // Clean up any existing spline-viewer elements if not persisting\n    const existingViewer = containerRef.current.querySelector('spline-viewer');\n    if (existingViewer && (!persistOnUpdate || !isInitializedRef.current)) {\n      existingViewer.remove();\n    }\n\n    // If already initialized and should persist, don't continue\n    if (persistOnUpdate && isInitializedRef.current) {\n      return;\n    }\n    \n    // Create a new spline-viewer element\n    const splineViewer = document.createElement('spline-viewer');\n    splineElementRef.current = splineViewer;\n    \n    // Set the URL attribute\n    splineViewer.setAttribute('url', url);\n    \n    // Set additional options if provided\n    if (options) {\n      Object.entries(options).forEach(([key, value]) => {\n        if (value === true) {\n          splineViewer.setAttribute(key, '');\n        } else if (value !== false) {\n          splineViewer.setAttribute(key, value);\n        }\n      });\n    }\n    \n    // Add an event listener to know when Spline is fully loaded\n    splineViewer.addEventListener('load', () => {\n      console.log(\"Spline has loaded!\");\n      \n      // Try to access the app property which might control the camera\n      try {\n        if (splineViewer.app && splineViewer.app.camera) {\n          console.log(\"Spline camera found:\", splineViewer.app.camera);\n        }\n      } catch (e) {\n        console.log(\"Couldn't access Spline camera:\", e);\n      }\n    });\n    \n    // Append the viewer to the container\n    containerRef.current.appendChild(splineViewer);\n    \n    // Load the Spline viewer script if not already loaded\n    if (!document.querySelector('script[src*=\"@splinetool/viewer\"]')) {\n      const script = document.createElement('script');\n      script.type = 'module';\n      script.src = 'https://unpkg.com/@splinetool/viewer@1.9.82/build/spline-viewer.js';\n      document.head.appendChild(script);\n    }\n\n    // Mark as initialized\n    isInitializedRef.current = true;\n    \n    // Clean up function - only remove if not persisting\n    return () => {\n      if (!persistOnUpdate && containerRef.current) {\n        const viewer = containerRef.current.querySelector('spline-viewer');\n        if (viewer) {\n          viewer.remove();\n          isInitializedRef.current = false;\n        }\n      }\n    };\n  }, [url, options, persistOnUpdate]);\n\n  return <div ref={containerRef} style={{ width: '100%', height: '100%' }} />;\n});\n\nexport default SplineViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}