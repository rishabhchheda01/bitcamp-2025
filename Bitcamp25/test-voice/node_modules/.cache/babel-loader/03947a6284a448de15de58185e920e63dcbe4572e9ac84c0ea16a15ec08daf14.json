{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kheri\\\\Downloads\\\\Bitcamp\\\\bitcamp-2025\\\\Bitcamp25\\\\test-voice\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { RetellWebClient } from \"retell-client-js-sdk\";\nimport SplineLoader from './SplineLoader';\nimport SplineViewer from './SplineViewer';\nimport './index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Add a ref to maintain the Spline instance\n  const splineInstanceRef = useRef(null);\n  const cursorAnimationRef = useRef(null);\n  const [isCallActive, setIsCallActive] = useState(false);\n  const [retellWebClient, setRetellWebClient] = useState(null);\n  const [eventStatus, setEventStatus] = useState({\n    callStarted: false,\n    callEnded: false,\n    agentStartTalking: false,\n    agentStopTalking: false,\n    error: null,\n    transcript: ''\n  });\n  const [micPermission, setMicPermission] = useState(null);\n  const [accessToken, setAccessToken] = useState('');\n  const [isGeneratingToken, setIsGeneratingToken] = useState(false);\n  const [callInfo, setCallInfo] = useState(null);\n  const [loadingComplete, setLoadingComplete] = useState(false);\n  const [showUI, setShowUI] = useState(true);\n  // Add state to control the mounting/unmounting of Spline\n  const [splineInitialized, setSplineInitialized] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2\n  });\n  const [isCursorControlled, setIsCursorControlled] = useState(false);\n  const [realCursorPosition, setRealCursorPosition] = useState({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2\n  });\n  const [isUserMovingCursor, setIsUserMovingCursor] = useState(false);\n  const userCursorTimeoutRef = useRef(null);\n\n  // Agent ID for Retell\n  const AGENT_ID = \"agent_30b1b504a89d37e3109a7da3e9\";\n\n  // Server endpoint for token generation\n  const TOKEN_SERVER_URL = \"http://127.0.0.1:5000/api/generate-token\";\n\n  // Track real user cursor movements\n  useEffect(() => {\n    const handleMouseMove = event => {\n      const {\n        clientX,\n        clientY\n      } = event;\n      setRealCursorPosition({\n        x: clientX,\n        y: clientY\n      });\n\n      // When user moves cursor, use real position and stop simulated movement temporarily\n      if (isCursorControlled) {\n        setIsUserMovingCursor(true);\n        setCursorPosition({\n          x: clientX,\n          y: clientY\n        });\n\n        // Clear any existing timeout\n        if (userCursorTimeoutRef.current) {\n          clearTimeout(userCursorTimeoutRef.current);\n        }\n\n        // Set a timeout to return to simulated movement if user stops moving cursor\n        userCursorTimeoutRef.current = setTimeout(() => {\n          setIsUserMovingCursor(false);\n        }, 3000);\n      }\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (userCursorTimeoutRef.current) {\n        clearTimeout(userCursorTimeoutRef.current);\n      }\n    };\n  }, [isCursorControlled]);\n\n  // Control cursor movement via Spline\n  useEffect(() => {\n    if (splineInitialized && splineInstanceRef.current) {\n      // Create a hidden div that follows our calculated cursor position\n      // for Spline's eye tracking to follow\n      const createOrUpdateCursorElement = () => {\n        let cursorElement = document.getElementById('virtual-cursor');\n        if (!cursorElement) {\n          cursorElement = document.createElement('div');\n          cursorElement.id = 'virtual-cursor';\n          document.body.appendChild(cursorElement);\n        }\n        cursorElement.style.position = 'absolute';\n        cursorElement.style.left = `${cursorPosition.x}px`;\n        cursorElement.style.top = `${cursorPosition.y}px`;\n        cursorElement.style.width = '1px';\n        cursorElement.style.height = '1px';\n        cursorElement.style.pointerEvents = 'none';\n        cursorElement.style.opacity = '0';\n        cursorElement.style.zIndex = '9999';\n      };\n      createOrUpdateCursorElement();\n    }\n  }, [cursorPosition, splineInitialized]);\n\n  // Add this new effect to handle starting/stopping animations based on agent talking state\n  useEffect(() => {\n    if (eventStatus.agentStartTalking && !eventStatus.agentStopTalking && isCallActive) {\n      // Use a function reference that has access to the latest state\n      const startAnimation = () => {\n        if (cursorAnimationRef.current) {\n          cancelAnimationFrame(cursorAnimationRef.current);\n        }\n        let time = 0;\n        const duration = 3000; // Shorter duration for more frequent changes\n\n        // Generate random parameters for this animation cycle with INCREASED amplitudes\n        const randomAmplitude = {\n          nod: 80 + Math.random() * 40,\n          // Random amplitude between 80-120\n          shake: 120 + Math.random() * 60,\n          // Random amplitude between 120-180\n          circleX: 100 + Math.random() * 60,\n          // Random amplitude between 100-160\n          circleY: 70 + Math.random() * 40 // Random amplitude between 70-110\n        };\n        const randomSpeed = {\n          nod: 10 + Math.random() * 6,\n          // Random speed between 10-16\n          shake: 6 + Math.random() * 4,\n          // Random speed between 6-10\n          circle: 4 + Math.random() * 3 // Random speed between 4-7\n        };\n\n        // Start from current cursor position or center if not determined\n        const startX = isUserMovingCursor ? realCursorPosition.x : window.innerWidth / 2;\n        const startY = isUserMovingCursor ? realCursorPosition.y : window.innerHeight / 2;\n\n        // Add some randomization to pattern selection\n        let currentPattern = Math.floor(Math.random() * 3); // 0: nod, 1: shake, 2: circle\n        let patternDuration = 0;\n        let maxPatternDuration = Math.random() * 1000 + 500; // 500-1500ms per pattern\n\n        const animate = () => {\n          // Get latest state within the animation frame\n          if (!eventStatus.agentStartTalking || eventStatus.agentStopTalking || !isCallActive) {\n            // Stop animation if agent is not talking\n            setIsCursorControlled(false);\n            return;\n          }\n          time += 16; // approx 60fps\n          patternDuration += 16;\n          if (time > duration) {\n            time = 0; // reset animation cycle\n          }\n\n          // Switch patterns more frequently for more varied movement\n          if (patternDuration > maxPatternDuration) {\n            currentPattern = Math.floor(Math.random() * 3);\n            patternDuration = 0;\n            maxPatternDuration = Math.random() * 1000 + 500; // Randomize next pattern duration\n          }\n\n          // Define animation patterns for talking\n          const progress = time / duration;\n\n          // Create different movement patterns with randomized parameters\n          const noddingPattern = Math.sin(progress * Math.PI * randomSpeed.nod) * randomAmplitude.nod;\n          const shakingPattern = Math.sin(progress * Math.PI * randomSpeed.shake) * randomAmplitude.shake;\n          const circlePattern = {\n            x: Math.cos(progress * Math.PI * randomSpeed.circle) * randomAmplitude.circleX,\n            y: Math.sin(progress * Math.PI * randomSpeed.circle) * randomAmplitude.circleY\n          };\n\n          // Choose which pattern to use based on current pattern selection\n          let x, y;\n\n          // Add some randomness to make movements more dramatic\n          const jitter = {\n            x: (Math.random() - 0.5) * 15,\n            // More pronounced jitter\n            y: (Math.random() - 0.5) * 15\n          };\n          switch (currentPattern) {\n            case 0:\n              // Nodding (up/down)\n              x = startX + jitter.x;\n              y = startY + noddingPattern + jitter.y;\n              break;\n            case 1:\n              // Shaking head (left/right)\n              x = startX + shakingPattern + jitter.x;\n              y = startY + jitter.y;\n              break;\n            case 2:\n              // Circular/oval movement\n              x = startX + circlePattern.x + jitter.x;\n              y = startY + circlePattern.y + jitter.y;\n              break;\n            default:\n              x = startX;\n              y = startY;\n          }\n\n          // Occasionally add sudden movements to simulate more natural behavior\n          if (Math.random() < 0.01) {\n            // 1% chance per frame for sudden movement\n            x += (Math.random() - 0.5) * 200;\n            y += (Math.random() - 0.5) * 200;\n          }\n\n          // Keep cursor within viewport bounds with some padding to avoid edges\n          const padding = 100;\n          x = Math.max(padding, Math.min(window.innerWidth - padding, x));\n          y = Math.max(padding, Math.min(window.innerHeight - padding, y));\n\n          // Update cursor position for Spline to follow\n          if (!isUserMovingCursor) {\n            setCursorPosition({\n              x,\n              y\n            });\n          }\n\n          // Continue animation\n          cursorAnimationRef.current = requestAnimationFrame(animate);\n        };\n        setIsCursorControlled(true);\n        cursorAnimationRef.current = requestAnimationFrame(animate);\n      };\n\n      // Start the animation\n      startAnimation();\n    } else if (!eventStatus.agentStartTalking || eventStatus.agentStopTalking || !isCallActive) {\n      if (cursorAnimationRef.current) {\n        cancelAnimationFrame(cursorAnimationRef.current);\n        setIsCursorControlled(false);\n      }\n    }\n\n    // Clean up when component unmounts or dependencies change\n    return () => {\n      if (cursorAnimationRef.current) {\n        cancelAnimationFrame(cursorAnimationRef.current);\n      }\n    };\n  }, [eventStatus.agentStartTalking, eventStatus.agentStopTalking, isCallActive, isUserMovingCursor, realCursorPosition]);\n  useEffect(() => {\n    // Initialize the RetellWebClient\n    const client = new RetellWebClient();\n    setRetellWebClient(client);\n\n    // Check for microphone permissions\n    checkMicrophonePermission();\n\n    // Set up event listeners\n    client.on(\"call_started\", () => {\n      console.log(\"call started\");\n      setEventStatus(prev => ({\n        ...prev,\n        callStarted: true,\n        callEnded: false\n      }));\n    });\n    client.on(\"call_ended\", () => {\n      console.log(\"call ended\");\n      setIsCallActive(false);\n      setEventStatus(prev => ({\n        ...prev,\n        callEnded: true\n      }));\n    });\n    client.on(\"agent_start_talking\", () => {\n      console.log(\"agent_start_talking\");\n      setEventStatus(prev => ({\n        ...prev,\n        agentStartTalking: true,\n        agentStopTalking: false\n      }));\n    });\n    client.on(\"agent_stop_talking\", () => {\n      console.log(\"agent_stop_talking\");\n      setEventStatus(prev => ({\n        ...prev,\n        agentStopTalking: true,\n        agentStartTalking: false\n      }));\n    });\n    client.on(\"update\", update => {\n      console.log(\"Update received:\", update);\n      if (update.transcript) {\n        // Check if transcript is an object with role and content properties\n        if (typeof update.transcript === 'object' && update.transcript.role && update.transcript.content) {\n          // Extract the content text\n          setEventStatus(prev => ({\n            ...prev,\n            transcript: update.transcript.content\n          }));\n        }\n        // Check if transcript is an array of message objects\n        else if (Array.isArray(update.transcript)) {\n          // Map through messages and format them\n          const formattedTranscript = update.transcript.map(msg => {\n            if (typeof msg === 'object' && msg.role && msg.content) {\n              return `${msg.role}: ${msg.content}`;\n            }\n            return String(msg); // Convert to string if it's some other type\n          }).join('\\n');\n          setEventStatus(prev => ({\n            ...prev,\n            transcript: formattedTranscript\n          }));\n        }\n        // If it's a string or can be converted to string\n        else {\n          setEventStatus(prev => ({\n            ...prev,\n            transcript: String(update.transcript)\n          }));\n        }\n      }\n    });\n    client.on(\"metadata\", metadata => {\n      console.log(\"Metadata received:\", metadata);\n    });\n    client.on(\"error\", error => {\n      console.error(\"An error occurred:\", error);\n      setEventStatus(prev => ({\n        ...prev,\n        error: error.message || \"Unknown error\"\n      }));\n      client.stopCall();\n    });\n\n    // Clean up event listeners on component unmount\n    return () => {\n      if (client) {\n        client.stopCall();\n      }\n      if (cursorAnimationRef.current) {\n        cancelAnimationFrame(cursorAnimationRef.current);\n      }\n      // Remove virtual cursor element\n      const cursorElement = document.getElementById('virtual-cursor');\n      if (cursorElement) {\n        document.body.removeChild(cursorElement);\n      }\n    };\n  }, []);\n\n  // Function to generate an access token from the server\n  const generateAccessToken = async () => {\n    try {\n      setIsGeneratingToken(true);\n      setEventStatus(prev => ({\n        ...prev,\n        error: null\n      }));\n      console.log(\"Requesting access token from server...\");\n\n      // Make the API call to our server endpoint\n      const response = await fetch(TOKEN_SERVER_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          agent_id: AGENT_ID\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Server responded with status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!data.access_token) {\n        throw new Error(\"No access token received from server\");\n      }\n      console.log(\"Access token received from server:\", data.access_token);\n      setAccessToken(data.access_token);\n      setCallInfo(data); // Store the full call info for reference\n      setIsGeneratingToken(false);\n      return data.access_token;\n    } catch (error) {\n      console.error(\"Failed to generate access token:\", error);\n      setEventStatus(prev => ({\n        ...prev,\n        error: error.message || \"Failed to generate access token\"\n      }));\n      setIsGeneratingToken(false);\n      return null;\n    }\n  };\n  const checkMicrophonePermission = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      setMicPermission('granted');\n      // Stop the stream tracks immediately\n      stream.getTracks().forEach(track => track.stop());\n    } catch (error) {\n      console.error('Microphone permission denied:', error);\n      setMicPermission('denied');\n    }\n  };\n  const requestMicrophonePermission = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      setMicPermission('granted');\n      return true;\n    } catch (error) {\n      console.error('Failed to get microphone permission:', error);\n      setMicPermission('denied');\n      return false;\n    }\n  };\n  const startCall = async () => {\n    if (!retellWebClient || isCallActive) return;\n\n    // First ensure we have microphone permissions\n    if (micPermission !== 'granted') {\n      const permissionGranted = await requestMicrophonePermission();\n      if (!permissionGranted) {\n        alert('Microphone permission is required to start a call');\n        return;\n      }\n    }\n    try {\n      // Reset event status\n      setEventStatus({\n        callStarted: false,\n        callEnded: false,\n        agentStartTalking: false,\n        agentStopTalking: false,\n        error: null,\n        transcript: ''\n      });\n\n      // Ensure we have a valid token\n      if (!accessToken) {\n        const token = await generateAccessToken();\n        if (!token) {\n          throw new Error(\"Failed to generate a valid access token\");\n        }\n      }\n      console.log(\"Starting call with access token...\");\n\n      // Start the call using the access token\n      await retellWebClient.startCall({\n        accessToken: accessToken,\n        sampleRate: 24000,\n        captureDeviceId: \"default\",\n        emitRawAudioSamples: false\n      });\n      setIsCallActive(true);\n    } catch (error) {\n      console.error(\"Failed to start call:\", error);\n      setEventStatus(prev => ({\n        ...prev,\n        error: error.message || \"Failed to start call\"\n      }));\n    }\n  };\n  const stopCall = () => {\n    if (retellWebClient && isCallActive) {\n      retellWebClient.stopCall();\n      setIsCallActive(false);\n    }\n  };\n\n  // Function to check if token is expired (tokens are valid for 30 seconds)\n  const isTokenExpired = () => {\n    // If we don't have token info, consider it expired\n    if (!accessToken || !callInfo) return true;\n\n    // Track when we received the token in our application\n    if (!callInfo._tokenReceivedTime) {\n      // If this is the first time checking, add a timestamp of when we received it\n      callInfo._tokenReceivedTime = Date.now();\n      setCallInfo({\n        ...callInfo\n      }); // Update the state to save this timestamp\n      return false; // Token is fresh\n    }\n\n    // Calculate how long ago we received the token\n    const tokenReceivedTime = callInfo._tokenReceivedTime;\n    const currentTime = Date.now();\n    const tokenAgeInSeconds = (currentTime - tokenReceivedTime) / 1000;\n\n    // Token expires after 30 seconds, but we consider it expired at 25s\n    // to give us a buffer to generate a new one\n    return tokenAgeInSeconds > 25;\n  };\n\n  // New function to handle loading completion and initialize Spline only once\n  const handleLoadingComplete = () => {\n    setLoadingComplete(true);\n    setSplineInitialized(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isCursorControlled && !isUserMovingCursor ? 'cursor-controlled' : ''}`,\n    children: !loadingComplete ? /*#__PURE__*/_jsxDEV(SplineLoader, {\n      onLoadingComplete: handleLoadingComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spline-container\",\n        children: splineInitialized && /*#__PURE__*/_jsxDEV(SplineViewer, {\n          ref: splineInstanceRef,\n          url: \"https://prod.spline.design/8CIsvX5hg8u-JUKM/scene.splinecode\",\n          options: {\n            hint: true,\n            'loading-anim-type': 'spinner-small-dark'\n          },\n          persistOnUpdate: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sidebar ${showUI ? 'open' : 'closed'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-ui\",\n          onClick: () => setShowUI(!showUI),\n          children: showUI ? '×' : '≡'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"AI Voice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-dot ${isCallActive ? 'active' : 'inactive'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: isCallActive ? 'Connected' : 'Disconnected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this), micPermission !== 'granted' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: requestMicrophonePermission,\n            className: \"btn-secondary btn-small\",\n            children: \"Enable Mic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: !accessToken || isTokenExpired() ? generateAccessToken : startCall,\n              disabled: isCallActive || isGeneratingToken,\n              className: \"btn-primary\",\n              children: !accessToken || isTokenExpired() ? \"Connect\" : isGeneratingToken ? \"...\" : \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this), isCallActive && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: stopCall,\n              className: \"btn-danger\",\n              children: \"End\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), eventStatus.error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-badge\",\n            children: [\"Error: \", eventStatus.error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 17\n          }, this), isCallActive && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"talking-indicator\",\n            children: eventStatus.agentStartTalking && !eventStatus.agentStopTalking ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wave-animation\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 21\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 17\n          }, this), eventStatus.transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mini-transcript\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                whiteSpace: 'pre-line'\n              },\n              children: eventStatus.transcript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"spQTtCFXG7ZoPqg5jLKdRHhFarE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","RetellWebClient","SplineLoader","SplineViewer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","splineInstanceRef","cursorAnimationRef","isCallActive","setIsCallActive","retellWebClient","setRetellWebClient","eventStatus","setEventStatus","callStarted","callEnded","agentStartTalking","agentStopTalking","error","transcript","micPermission","setMicPermission","accessToken","setAccessToken","isGeneratingToken","setIsGeneratingToken","callInfo","setCallInfo","loadingComplete","setLoadingComplete","showUI","setShowUI","splineInitialized","setSplineInitialized","cursorPosition","setCursorPosition","x","window","innerWidth","y","innerHeight","isCursorControlled","setIsCursorControlled","realCursorPosition","setRealCursorPosition","isUserMovingCursor","setIsUserMovingCursor","userCursorTimeoutRef","AGENT_ID","TOKEN_SERVER_URL","handleMouseMove","event","clientX","clientY","current","clearTimeout","setTimeout","addEventListener","removeEventListener","createOrUpdateCursorElement","cursorElement","document","getElementById","createElement","id","body","appendChild","style","position","left","top","width","height","pointerEvents","opacity","zIndex","startAnimation","cancelAnimationFrame","time","duration","randomAmplitude","nod","Math","random","shake","circleX","circleY","randomSpeed","circle","startX","startY","currentPattern","floor","patternDuration","maxPatternDuration","animate","progress","noddingPattern","sin","PI","shakingPattern","circlePattern","cos","jitter","padding","max","min","requestAnimationFrame","client","checkMicrophonePermission","on","console","log","prev","update","role","content","Array","isArray","formattedTranscript","map","msg","String","join","metadata","message","stopCall","removeChild","generateAccessToken","response","fetch","method","headers","JSON","stringify","agent_id","ok","errorData","json","Error","status","data","access_token","stream","navigator","mediaDevices","getUserMedia","audio","getTracks","forEach","track","stop","requestMicrophonePermission","startCall","permissionGranted","alert","token","sampleRate","captureDeviceId","emitRawAudioSamples","isTokenExpired","_tokenReceivedTime","Date","now","tokenReceivedTime","currentTime","tokenAgeInSeconds","handleLoadingComplete","className","children","onLoadingComplete","fileName","_jsxFileName","lineNumber","columnNumber","ref","url","options","hint","persistOnUpdate","onClick","disabled","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/kheri/Downloads/Bitcamp/bitcamp-2025/Bitcamp25/test-voice/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { RetellWebClient } from \"retell-client-js-sdk\";\nimport SplineLoader from './SplineLoader';\nimport SplineViewer from './SplineViewer';\nimport './index.css';\n\nfunction App() {\n  // Add a ref to maintain the Spline instance\n  const splineInstanceRef = useRef(null);\n  const cursorAnimationRef = useRef(null);\n  const [isCallActive, setIsCallActive] = useState(false);\n  const [retellWebClient, setRetellWebClient] = useState(null);\n  const [eventStatus, setEventStatus] = useState({\n    callStarted: false,\n    callEnded: false,\n    agentStartTalking: false,\n    agentStopTalking: false,\n    error: null,\n    transcript: ''\n  });\n  const [micPermission, setMicPermission] = useState(null);\n  const [accessToken, setAccessToken] = useState('');\n  const [isGeneratingToken, setIsGeneratingToken] = useState(false);\n  const [callInfo, setCallInfo] = useState(null);\n  const [loadingComplete, setLoadingComplete] = useState(false);\n  const [showUI, setShowUI] = useState(true);\n  // Add state to control the mounting/unmounting of Spline\n  const [splineInitialized, setSplineInitialized] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState({ x: window.innerWidth / 2, y: window.innerHeight / 2 });\n  const [isCursorControlled, setIsCursorControlled] = useState(false);\n  const [realCursorPosition, setRealCursorPosition] = useState({ x: window.innerWidth / 2, y: window.innerHeight / 2 });\n  const [isUserMovingCursor, setIsUserMovingCursor] = useState(false);\n  const userCursorTimeoutRef = useRef(null);\n\n  // Agent ID for Retell\n  const AGENT_ID = \"agent_30b1b504a89d37e3109a7da3e9\";\n  \n  // Server endpoint for token generation\n  const TOKEN_SERVER_URL = \"http://127.0.0.1:5000/api/generate-token\";\n\n  // Track real user cursor movements\n  useEffect(() => {\n    const handleMouseMove = (event) => {\n      const { clientX, clientY } = event;\n      setRealCursorPosition({ x: clientX, y: clientY });\n      \n      // When user moves cursor, use real position and stop simulated movement temporarily\n      if (isCursorControlled) {\n        setIsUserMovingCursor(true);\n        setCursorPosition({ x: clientX, y: clientY });\n        \n        // Clear any existing timeout\n        if (userCursorTimeoutRef.current) {\n          clearTimeout(userCursorTimeoutRef.current);\n        }\n        \n        // Set a timeout to return to simulated movement if user stops moving cursor\n        userCursorTimeoutRef.current = setTimeout(() => {\n          setIsUserMovingCursor(false);\n        }, 3000);\n      }\n    };\n    \n    window.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (userCursorTimeoutRef.current) {\n        clearTimeout(userCursorTimeoutRef.current);\n      }\n    };\n  }, [isCursorControlled]);\n\n  // Control cursor movement via Spline\n  useEffect(() => {\n    if (splineInitialized && splineInstanceRef.current) {\n      // Create a hidden div that follows our calculated cursor position\n      // for Spline's eye tracking to follow\n      const createOrUpdateCursorElement = () => {\n        let cursorElement = document.getElementById('virtual-cursor');\n        if (!cursorElement) {\n          cursorElement = document.createElement('div');\n          cursorElement.id = 'virtual-cursor';\n          document.body.appendChild(cursorElement);\n        }\n        cursorElement.style.position = 'absolute';\n        cursorElement.style.left = `${cursorPosition.x}px`;\n        cursorElement.style.top = `${cursorPosition.y}px`;\n        cursorElement.style.width = '1px';\n        cursorElement.style.height = '1px';\n        cursorElement.style.pointerEvents = 'none';\n        cursorElement.style.opacity = '0';\n        cursorElement.style.zIndex = '9999';\n      };\n      \n      createOrUpdateCursorElement();\n    }\n  }, [cursorPosition, splineInitialized]);\n\n  // Add this new effect to handle starting/stopping animations based on agent talking state\n  useEffect(() => {\n    if (eventStatus.agentStartTalking && !eventStatus.agentStopTalking && isCallActive) {\n      // Use a function reference that has access to the latest state\n      const startAnimation = () => {\n        if (cursorAnimationRef.current) {\n          cancelAnimationFrame(cursorAnimationRef.current);\n        }\n\n        let time = 0;\n        const duration = 3000; // Shorter duration for more frequent changes\n        \n        // Generate random parameters for this animation cycle with INCREASED amplitudes\n        const randomAmplitude = {\n          nod: 80 + Math.random() * 40,      // Random amplitude between 80-120\n          shake: 120 + Math.random() * 60,    // Random amplitude between 120-180\n          circleX: 100 + Math.random() * 60,  // Random amplitude between 100-160\n          circleY: 70 + Math.random() * 40    // Random amplitude between 70-110\n        };\n        \n        const randomSpeed = {\n          nod: 10 + Math.random() * 6,        // Random speed between 10-16\n          shake: 6 + Math.random() * 4,       // Random speed between 6-10\n          circle: 4 + Math.random() * 3       // Random speed between 4-7\n        };\n        \n        // Start from current cursor position or center if not determined\n        const startX = isUserMovingCursor ? realCursorPosition.x : window.innerWidth / 2;\n        const startY = isUserMovingCursor ? realCursorPosition.y : window.innerHeight / 2;\n        \n        // Add some randomization to pattern selection\n        let currentPattern = Math.floor(Math.random() * 3); // 0: nod, 1: shake, 2: circle\n        let patternDuration = 0;\n        let maxPatternDuration = Math.random() * 1000 + 500; // 500-1500ms per pattern\n        \n        const animate = () => {\n          // Get latest state within the animation frame\n          if (!eventStatus.agentStartTalking || eventStatus.agentStopTalking || !isCallActive) {\n            // Stop animation if agent is not talking\n            setIsCursorControlled(false);\n            return;\n          }\n\n          time += 16; // approx 60fps\n          patternDuration += 16;\n          \n          if (time > duration) {\n            time = 0; // reset animation cycle\n          }\n          \n          // Switch patterns more frequently for more varied movement\n          if (patternDuration > maxPatternDuration) {\n            currentPattern = Math.floor(Math.random() * 3);\n            patternDuration = 0;\n            maxPatternDuration = Math.random() * 1000 + 500; // Randomize next pattern duration\n          }\n\n          // Define animation patterns for talking\n          const progress = time / duration;\n          \n          // Create different movement patterns with randomized parameters\n          const noddingPattern = Math.sin(progress * Math.PI * randomSpeed.nod) * randomAmplitude.nod;\n          const shakingPattern = Math.sin(progress * Math.PI * randomSpeed.shake) * randomAmplitude.shake;\n          const circlePattern = {\n            x: Math.cos(progress * Math.PI * randomSpeed.circle) * randomAmplitude.circleX,\n            y: Math.sin(progress * Math.PI * randomSpeed.circle) * randomAmplitude.circleY\n          };\n          \n          // Choose which pattern to use based on current pattern selection\n          let x, y;\n          \n          // Add some randomness to make movements more dramatic\n          const jitter = {\n            x: (Math.random() - 0.5) * 15, // More pronounced jitter\n            y: (Math.random() - 0.5) * 15\n          };\n          \n          switch(currentPattern) {\n            case 0: // Nodding (up/down)\n              x = startX + jitter.x;\n              y = startY + noddingPattern + jitter.y;\n              break;\n            case 1: // Shaking head (left/right)\n              x = startX + shakingPattern + jitter.x;\n              y = startY + jitter.y;\n              break;\n            case 2: // Circular/oval movement\n              x = startX + circlePattern.x + jitter.x;\n              y = startY + circlePattern.y + jitter.y;\n              break;\n            default:\n              x = startX;\n              y = startY;\n          }\n          \n          // Occasionally add sudden movements to simulate more natural behavior\n          if (Math.random() < 0.01) { // 1% chance per frame for sudden movement\n            x += (Math.random() - 0.5) * 200;\n            y += (Math.random() - 0.5) * 200;\n          }\n          \n          // Keep cursor within viewport bounds with some padding to avoid edges\n          const padding = 100;\n          x = Math.max(padding, Math.min(window.innerWidth - padding, x));\n          y = Math.max(padding, Math.min(window.innerHeight - padding, y));\n          \n          // Update cursor position for Spline to follow\n          if (!isUserMovingCursor) {\n            setCursorPosition({ x, y });\n          }\n          \n          // Continue animation\n          cursorAnimationRef.current = requestAnimationFrame(animate);\n        };\n        \n        setIsCursorControlled(true);\n        cursorAnimationRef.current = requestAnimationFrame(animate);\n      };\n      \n      // Start the animation\n      startAnimation();\n    } else if (!eventStatus.agentStartTalking || eventStatus.agentStopTalking || !isCallActive) {\n      if (cursorAnimationRef.current) {\n        cancelAnimationFrame(cursorAnimationRef.current);\n        setIsCursorControlled(false);\n      }\n    }\n    \n    // Clean up when component unmounts or dependencies change\n    return () => {\n      if (cursorAnimationRef.current) {\n        cancelAnimationFrame(cursorAnimationRef.current);\n      }\n    };\n  }, [eventStatus.agentStartTalking, eventStatus.agentStopTalking, isCallActive, isUserMovingCursor, realCursorPosition]);\n\n  useEffect(() => {\n    // Initialize the RetellWebClient\n    const client = new RetellWebClient();\n    setRetellWebClient(client);\n    \n    // Check for microphone permissions\n    checkMicrophonePermission();\n    \n    // Set up event listeners\n    client.on(\"call_started\", () => {\n      console.log(\"call started\");\n      setEventStatus(prev => ({ ...prev, callStarted: true, callEnded: false }));\n    });\n\n    client.on(\"call_ended\", () => {\n      console.log(\"call ended\");\n      setIsCallActive(false);\n      setEventStatus(prev => ({ ...prev, callEnded: true }));\n    });\n\n    client.on(\"agent_start_talking\", () => {\n      console.log(\"agent_start_talking\");\n      setEventStatus(prev => ({ ...prev, agentStartTalking: true, agentStopTalking: false }));\n    });\n\n    client.on(\"agent_stop_talking\", () => {\n      console.log(\"agent_stop_talking\");\n      setEventStatus(prev => ({ ...prev, agentStopTalking: true, agentStartTalking: false }));\n    });\n\n    client.on(\"update\", (update) => {\n      console.log(\"Update received:\", update);\n      if (update.transcript) {\n        // Check if transcript is an object with role and content properties\n        if (typeof update.transcript === 'object' && update.transcript.role && update.transcript.content) {\n          // Extract the content text\n          setEventStatus(prev => ({ ...prev, transcript: update.transcript.content }));\n        } \n        // Check if transcript is an array of message objects\n        else if (Array.isArray(update.transcript)) {\n          // Map through messages and format them\n          const formattedTranscript = update.transcript\n            .map(msg => {\n              if (typeof msg === 'object' && msg.role && msg.content) {\n                return `${msg.role}: ${msg.content}`;\n              }\n              return String(msg); // Convert to string if it's some other type\n            })\n            .join('\\n');\n          setEventStatus(prev => ({ ...prev, transcript: formattedTranscript }));\n        } \n        // If it's a string or can be converted to string\n        else {\n          setEventStatus(prev => ({ ...prev, transcript: String(update.transcript) }));\n        }\n      }\n    });\n\n    client.on(\"metadata\", (metadata) => {\n      console.log(\"Metadata received:\", metadata);\n    });\n\n    client.on(\"error\", (error) => {\n      console.error(\"An error occurred:\", error);\n      setEventStatus(prev => ({ ...prev, error: error.message || \"Unknown error\" }));\n      client.stopCall();\n    });\n    \n    // Clean up event listeners on component unmount\n    return () => {\n      if (client) {\n        client.stopCall();\n      }\n      if (cursorAnimationRef.current) {\n        cancelAnimationFrame(cursorAnimationRef.current);\n      }\n      // Remove virtual cursor element\n      const cursorElement = document.getElementById('virtual-cursor');\n      if (cursorElement) {\n        document.body.removeChild(cursorElement);\n      }\n    };\n  }, []);\n  \n  // Function to generate an access token from the server\n  const generateAccessToken = async () => {\n    try {\n      setIsGeneratingToken(true);\n      setEventStatus(prev => ({ ...prev, error: null }));\n      console.log(\"Requesting access token from server...\");\n      \n      // Make the API call to our server endpoint\n      const response = await fetch(TOKEN_SERVER_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          agent_id: AGENT_ID,\n        })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Server responded with status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (!data.access_token) {\n        throw new Error(\"No access token received from server\");\n      }\n      \n      console.log(\"Access token received from server:\", data.access_token);\n      setAccessToken(data.access_token);\n      setCallInfo(data); // Store the full call info for reference\n      setIsGeneratingToken(false);\n      \n      return data.access_token;\n    } catch (error) {\n      console.error(\"Failed to generate access token:\", error);\n      setEventStatus(prev => ({ ...prev, error: error.message || \"Failed to generate access token\" }));\n      setIsGeneratingToken(false);\n      return null;\n    }\n  };\n  \n  const checkMicrophonePermission = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      setMicPermission('granted');\n      // Stop the stream tracks immediately\n      stream.getTracks().forEach(track => track.stop());\n    } catch (error) {\n      console.error('Microphone permission denied:', error);\n      setMicPermission('denied');\n    }\n  };\n  \n  const requestMicrophonePermission = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({ audio: true });\n      setMicPermission('granted');\n      return true;\n    } catch (error) {\n      console.error('Failed to get microphone permission:', error);\n      setMicPermission('denied');\n      return false;\n    }\n  };\n  \n  const startCall = async () => {\n    if (!retellWebClient || isCallActive) return;\n    \n    // First ensure we have microphone permissions\n    if (micPermission !== 'granted') {\n      const permissionGranted = await requestMicrophonePermission();\n      if (!permissionGranted) {\n        alert('Microphone permission is required to start a call');\n        return;\n      }\n    }\n    \n    try {\n      // Reset event status\n      setEventStatus({\n        callStarted: false,\n        callEnded: false,\n        agentStartTalking: false,\n        agentStopTalking: false,\n        error: null,\n        transcript: ''\n      });\n      \n      // Ensure we have a valid token\n      if (!accessToken) {\n        const token = await generateAccessToken();\n        if (!token) {\n          throw new Error(\"Failed to generate a valid access token\");\n        }\n      }\n      \n      console.log(\"Starting call with access token...\");\n      \n      // Start the call using the access token\n      await retellWebClient.startCall({\n        accessToken: accessToken,\n        sampleRate: 24000,\n        captureDeviceId: \"default\",\n        emitRawAudioSamples: false,\n      });\n      \n      setIsCallActive(true);\n    } catch (error) {\n      console.error(\"Failed to start call:\", error);\n      setEventStatus(prev => ({ ...prev, error: error.message || \"Failed to start call\" }));\n    }\n  };\n  \n  const stopCall = () => {\n    if (retellWebClient && isCallActive) {\n      retellWebClient.stopCall();\n      setIsCallActive(false);\n    }\n  };\n  \n  // Function to check if token is expired (tokens are valid for 30 seconds)\n  const isTokenExpired = () => {\n    // If we don't have token info, consider it expired\n    if (!accessToken || !callInfo) return true;\n    \n    // Track when we received the token in our application\n    if (!callInfo._tokenReceivedTime) {\n      // If this is the first time checking, add a timestamp of when we received it\n      callInfo._tokenReceivedTime = Date.now();\n      setCallInfo({...callInfo}); // Update the state to save this timestamp\n      return false; // Token is fresh\n    }\n    \n    // Calculate how long ago we received the token\n    const tokenReceivedTime = callInfo._tokenReceivedTime;\n    const currentTime = Date.now();\n    const tokenAgeInSeconds = (currentTime - tokenReceivedTime) / 1000;\n    \n    // Token expires after 30 seconds, but we consider it expired at 25s\n    // to give us a buffer to generate a new one\n    return tokenAgeInSeconds > 25;\n  };\n  \n  // New function to handle loading completion and initialize Spline only once\n  const handleLoadingComplete = () => {\n    setLoadingComplete(true);\n    setSplineInitialized(true);\n  };\n\n  return (\n    <div className={`App ${isCursorControlled && !isUserMovingCursor ? 'cursor-controlled' : ''}`}>\n      {!loadingComplete ? (\n        <SplineLoader onLoadingComplete={handleLoadingComplete} />\n      ) : (\n        <>\n          {/* Main Spline Animation filling the entire viewport */}\n          <div className=\"spline-container\">\n            {/* Use splineInitialized to ensure it's only mounted once */}\n            {splineInitialized && (\n              <SplineViewer \n                ref={splineInstanceRef}\n                url=\"https://prod.spline.design/8CIsvX5hg8u-JUKM/scene.splinecode\"\n                options={{\n                  hint: true,\n                  'loading-anim-type': 'spinner-small-dark'\n                }}\n                persistOnUpdate={true}\n              />\n            )}\n          </div>\n          \n          {/* Minimal UI sidebar */}\n          <div className={`sidebar ${showUI ? 'open' : 'closed'}`}>\n            <div className=\"toggle-ui\" onClick={() => setShowUI(!showUI)}>\n              {showUI ? '×' : '≡'}\n            </div>\n            \n            <div className=\"sidebar-content\">\n              <h2>AI Voice</h2>\n              \n              <div className=\"status-indicator\">\n                <div className={`status-dot ${isCallActive ? 'active' : 'inactive'}`}></div>\n                <span>{isCallActive ? 'Connected' : 'Disconnected'}</span>\n              </div>\n              \n              {micPermission !== 'granted' && (\n                <button \n                  onClick={requestMicrophonePermission}\n                  className=\"btn-secondary btn-small\"\n                >\n                  Enable Mic\n                </button>\n              )}\n              \n              <div className=\"control-buttons\">\n                <button \n                  onClick={!accessToken || isTokenExpired() ? generateAccessToken : startCall} \n                  disabled={isCallActive || isGeneratingToken}\n                  className=\"btn-primary\"\n                >\n                  {!accessToken || isTokenExpired() \n                    ? \"Connect\" \n                    : isGeneratingToken \n                      ? \"...\" \n                      : \"Start\"}\n                </button>\n                \n                {isCallActive && (\n                  <button \n                    onClick={stopCall} \n                    className=\"btn-danger\"\n                  >\n                    End\n                  </button>\n                )}\n              </div>\n              \n              {eventStatus.error && (\n                <div className=\"error-badge\">\n                  Error: {eventStatus.error}\n                </div>\n              )}\n              \n              {/* Minimalistic talking indicator */}\n              {isCallActive && (\n                <div className=\"talking-indicator\">\n                  {eventStatus.agentStartTalking && !eventStatus.agentStopTalking ? (\n                    <div className=\"wave-animation\">\n                      <div className=\"wave\"></div>\n                      <div className=\"wave\"></div>\n                      <div className=\"wave\"></div>\n                      <div className=\"wave\"></div>\n                    </div>\n                  ) : null}\n                </div>\n              )}\n              \n              {/* Transcript in a minimal scrollable area */}\n              {eventStatus.transcript && (\n                <div className=\"mini-transcript\">\n                  <p style={{ whiteSpace: 'pre-line' }}>{eventStatus.transcript}</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}