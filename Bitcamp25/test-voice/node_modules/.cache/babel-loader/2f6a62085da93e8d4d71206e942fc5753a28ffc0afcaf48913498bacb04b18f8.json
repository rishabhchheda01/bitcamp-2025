{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmStep;\nfunction setup(backend) {\n  wasmStep = backend.wasm.cwrap(Step, null /*void*/, ['number', 'number', 'number', 'number' // out_id\n  ]);\n}\nfunction step(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    alpha\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmStep(xId, alpha, CppDType[x.dtype], outId);\n  return out;\n}\nexport const stepConfig = {\n  kernelName: Step,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: step\n};","map":{"version":3,"names":["Step","CppDType","wasmStep","setup","backend","wasm","cwrap","step","args","inputs","attrs","alpha","x","xId","dataIdMap","get","dataId","id","out","makeOutput","shape","dtype","outId","stepConfig","kernelName","backendName","setupFunc","kernelFunc"],"sources":["C:\\Users\\kheri\\Downloads\\Bitcamp\\bitcamp-2025\\Bitcamp25\\tfjs-backend-wasm\\src\\kernels\\Step.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Step, StepAttrs, StepInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmStep: (xId: number, alpha: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStep = backend.wasm.cwrap(Step, null /*void*/, [\n    'number',  // x_id\n    'number',  // alpha\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction step(\n    args: {backend: BackendWasm, inputs: StepInputs, attrs: StepAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {alpha} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmStep(xId, alpha, CppDType[x.dtype], outId);\n  return out;\n}\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: step as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,IAAI,QAA0C,uBAAuB;AAIvG,SAAQC,QAAQ,QAAO,SAAS;AAEhC,IAAIC,QACI;AAER,SAASC,KAAKA,CAACC,OAAoB;EACjCF,QAAQ,GAAGE,OAAO,CAACC,IAAI,CAACC,KAAK,CAACN,IAAI,EAAE,IAAI,CAAC,UAAU,CACjD,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,CAAG;EAAA,CACZ,CAAC;AACJ;AAEA,SAASO,IAAIA,CACTC,IAAkE;EAEpE,MAAM;IAACJ,OAAO;IAAEK,MAAM;IAAEC;EAAK,CAAC,GAAGF,IAAI;EACrC,MAAM;IAACG;EAAK,CAAC,GAAGD,KAAK;EACrB,MAAM;IAACE;EAAC,CAAC,GAAGH,MAAM;EAClB,MAAMI,GAAG,GAAGT,OAAO,CAACU,SAAS,CAACC,GAAG,CAACH,CAAC,CAACI,MAAM,CAAC,CAACC,EAAE;EAE9C,MAAMC,GAAG,GAAGd,OAAO,CAACe,UAAU,CAACP,CAAC,CAACQ,KAAK,EAAER,CAAC,CAACS,KAAK,CAAC;EAChD,MAAMC,KAAK,GAAGlB,OAAO,CAACU,SAAS,CAACC,GAAG,CAACG,GAAG,CAACF,MAAM,CAAC,CAACC,EAAE;EAClDf,QAAQ,CAACW,GAAG,EAAEF,KAAK,EAAEV,QAAQ,CAACW,CAAC,CAACS,KAAK,CAAC,EAAEC,KAAK,CAAC;EAC9C,OAAOJ,GAAG;AACZ;AAEA,OAAO,MAAMK,UAAU,GAAiB;EACtCC,UAAU,EAAExB,IAAI;EAChByB,WAAW,EAAE,MAAM;EACnBC,SAAS,EAAEvB,KAAK;EAChBwB,UAAU,EAAEpB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}