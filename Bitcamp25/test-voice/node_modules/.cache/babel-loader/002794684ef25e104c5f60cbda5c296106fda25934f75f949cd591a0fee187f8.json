{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(backend, resOffset) {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  const pValidOutputs = result[3];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {\n    pSelectedIndices,\n    selectedSize,\n    pSelectedScores,\n    pValidOutputs\n  };\n}","map":{"version":3,"names":["parseResultStruct","backend","resOffset","result","Int32Array","wasm","HEAPU8","buffer","pSelectedIndices","selectedSize","pSelectedScores","pValidOutputs","_free"],"sources":["C:\\Users\\kheri\\Downloads\\Bitcamp\\bitcamp-2025\\Bitcamp25\\tfjs-backend-wasm\\src\\kernels\\NonMaxSuppression_util.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendWasm} from '../backend_wasm';\n\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\ninterface Result {\n  pSelectedIndices: number;\n  selectedSize: number;\n  pSelectedScores: number;\n  pValidOutputs: number;\n}\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(\n    backend: BackendWasm, resOffset: number): Result {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  const pValidOutputs = result[3];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs};\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AA0BA;;;;AAIA,OAAM,SAAUA,iBAAiBA,CAC7BC,OAAoB,EAAEC,SAAiB;EACzC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAACH,OAAO,CAACI,IAAI,CAACC,MAAM,CAACC,MAAM,EAAEL,SAAS,EAAE,CAAC,CAAC;EACvE,MAAMM,gBAAgB,GAAGL,MAAM,CAAC,CAAC,CAAC;EAClC,MAAMM,YAAY,GAAGN,MAAM,CAAC,CAAC,CAAC;EAC9B,MAAMO,eAAe,GAAGP,MAAM,CAAC,CAAC,CAAC;EACjC,MAAMQ,aAAa,GAAGR,MAAM,CAAC,CAAC,CAAC;EAC/B;EACAF,OAAO,CAACI,IAAI,CAACO,KAAK,CAACV,SAAS,CAAC;EAC7B,OAAO;IAACM,gBAAgB;IAAEC,YAAY;IAAEC,eAAe;IAAEC;EAAa,CAAC;AACzE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}