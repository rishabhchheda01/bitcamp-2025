{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kheri\\\\Downloads\\\\Bitcamp\\\\bitcamp-2025\\\\Bitcamp25\\\\test-voice\\\\src\\\\FaceDirectionComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"@tensorflow/tfjs\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nimport \"@mediapipe/face_mesh\";\nimport Webcam from \"react-webcam\";\nimport FaceDirectionDetector from \"./face_detection/FaceDirectionDetector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputResolution = {\n  width: 640,\n  height: 480\n};\nconst videoConstraints = {\n  width: inputResolution.width,\n  height: inputResolution.height,\n  facingMode: \"user\"\n};\nfunction FaceDirectionComponent() {\n  _s();\n  const canvasRef = useRef(null);\n  const webcamRef = useRef(null);\n  const [loaded, setLoaded] = useState(false);\n  const [detector, setDetector] = useState(null);\n  const [faceData, setFaceData] = useState({\n    position: {\n      x: 0,\n      y: 0\n    },\n    direction: {\n      yaw: 0,\n      turn: 0\n    }\n  });\n  // Add reference for center position and state for active direction\n  const centerPositionRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const [activeDirection, setActiveDirection] = useState(null);\n  const [isCalibrated, setIsCalibrated] = useState(false);\n  const lastKeySentRef = useRef(null);\n  const keyTimeoutRef = useRef(null);\n  // Add debug state to track keypresses\n  const [debugInfo, setDebugInfo] = useState({\n    keyPressed: null,\n    pressTime: null\n  });\n  // Add threshold settings as state so they can be adjusted\n  const [thresholds, setThresholds] = useState({\n    x: inputResolution.width * 0.15,\n    y: inputResolution.height * 0.15\n  });\n\n  // Add a reference to track the last position to detect movement\n  const lastPositionRef = useRef({\n    x: 0,\n    y: 0\n  });\n\n  // Initialize the detector\n  useEffect(() => {\n    const initializeDetector = async () => {\n      const options = {\n        showMesh: false,\n        showTagNumbers: false,\n        showDirection: false\n      };\n      const faceDetector = new FaceDirectionDetector(options);\n      setDetector(faceDetector);\n    };\n    initializeDetector();\n\n    // Cleanup on unmount\n    return () => {\n      if (detector) {\n        detector.stop();\n      }\n      if (keyTimeoutRef.current) {\n        clearTimeout(keyTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Function to simulate key press\n  const simulateKeyPress = key => {\n    // Skip if already pressed the same key recently\n    if (lastKeySentRef.current === key) {\n      return;\n    }\n    lastKeySentRef.current = key;\n    setActiveDirection(key);\n\n    // Update debug info\n    setDebugInfo({\n      keyPressed: key,\n      pressTime: new Date().toLocaleTimeString()\n    });\n\n    // Create and dispatch keydown event\n    const keydownEvent = new KeyboardEvent('keydown', {\n      key: key,\n      code: `Key${key.toUpperCase()}`,\n      keyCode: key.charCodeAt(0),\n      which: key.charCodeAt(0),\n      bubbles: true,\n      cancelable: true\n    });\n    document.dispatchEvent(keydownEvent);\n\n    // Also try to trigger the event on window and document.body\n    window.dispatchEvent(keydownEvent);\n    if (document.body) document.body.dispatchEvent(keydownEvent);\n\n    // Log to console for debugging\n    console.log(`Key DOWN: ${key} at ${new Date().toLocaleTimeString()}`);\n\n    // Clear any existing timeout\n    if (keyTimeoutRef.current) {\n      clearTimeout(keyTimeoutRef.current);\n    }\n\n    // Schedule keyup after a 1 second delay\n    keyTimeoutRef.current = setTimeout(() => {\n      // Create and dispatch keyup event\n      const keyupEvent = new KeyboardEvent('keyup', {\n        key: key,\n        code: `Key${key.toUpperCase()}`,\n        keyCode: key.charCodeAt(0),\n        which: key.charCodeAt(0),\n        bubbles: true,\n        cancelable: true\n      });\n      document.dispatchEvent(keyupEvent);\n      window.dispatchEvent(keyupEvent);\n      if (document.body) document.body.dispatchEvent(keyupEvent);\n\n      // Log to console for debugging\n      console.log(`Key UP: ${key} at ${new Date().toLocaleTimeString()}`);\n\n      // Reset the last key sent after a short delay\n      lastKeySentRef.current = null;\n      setActiveDirection(null);\n\n      // Update debug info\n      setDebugInfo(prev => ({\n        ...prev,\n        keyPressed: null\n      }));\n    }, 1000); // Key press duration in ms - changed to 1000ms (1 second)\n  };\n\n  // Function to calibrate center position\n  const calibrateCenter = () => {\n    if (faceData.position.x > 0 && faceData.position.y > 0) {\n      centerPositionRef.current = {\n        ...faceData.position\n      };\n      setIsCalibrated(true);\n    }\n  };\n\n  // Handle video load\n  const handleVideoLoad = async videoNode => {\n    const video = videoNode.target;\n    if (video.readyState !== 4) return;\n    if (loaded) return;\n    if (detector && webcamRef.current && canvasRef.current) {\n      await detector.start(webcamRef.current.video, canvasRef.current, data => {\n        // Update face data when detection occurs\n        if (data && data.keypoints && data.keypoints[1]) {\n          const newPosition = {\n            x: Math.round(data.keypoints[1].x),\n            y: Math.round(data.keypoints[1].y)\n          };\n          setFaceData({\n            position: newPosition,\n            direction: {\n              yaw: Math.round(data.yaw || 0),\n              turn: Math.round(data.turn || 0)\n            }\n          });\n\n          // Auto-calibrate on first detection\n          if (!isCalibrated && newPosition.x > 0 && newPosition.y > 0) {\n            calibrateCenter();\n            lastPositionRef.current = newPosition;\n          }\n\n          // Only trigger key presses after calibration\n          if (isCalibrated) {\n            // Calculate differences from center position\n            const diffFromCenterX = newPosition.x - centerPositionRef.current.x;\n            const diffFromCenterY = newPosition.y - centerPositionRef.current.y;\n\n            // Calculate movement from last position\n            const movementX = newPosition.x - lastPositionRef.current.x;\n            const movementY = newPosition.y - lastPositionRef.current.y;\n\n            // Check if position exceeds the threshold from center\n            const exceedsThresholdX = Math.abs(diffFromCenterX) > thresholds.x;\n            const exceedsThresholdY = Math.abs(diffFromCenterY) > thresholds.y;\n\n            // Determine which key to press based on position relative to center\n            let keyToPress = null;\n\n            // Prioritize larger displacement\n            if (exceedsThresholdX && exceedsThresholdY) {\n              // If exceeds in both directions, use the one with larger relative displacement\n              if (Math.abs(diffFromCenterX / thresholds.x) > Math.abs(diffFromCenterY / thresholds.y)) {\n                keyToPress = diffFromCenterX > 0 ? 'r' : 'l';\n              } else {\n                keyToPress = diffFromCenterY > 0 ? 'd' : 'u';\n              }\n            } else if (exceedsThresholdX) {\n              // Only exceeds in X direction\n              keyToPress = diffFromCenterX > 0 ? 'r' : 'l';\n            } else if (exceedsThresholdY) {\n              // Only exceeds in Y direction\n              keyToPress = diffFromCenterY > 0 ? 'd' : 'u';\n            }\n\n            // If we should press a key and it's different from the current key\n            // or if significant movement in the same direction continues\n            const significantMovement = keyToPress === 'r' && movementX > 5 || keyToPress === 'l' && movementX < -5 || keyToPress === 'd' && movementY > 5 || keyToPress === 'u' && movementY < -5;\n            if (keyToPress && (keyToPress !== lastKeySentRef.current || significantMovement)) {\n              simulateKeyPress(keyToPress);\n            }\n\n            // Update last position reference\n            lastPositionRef.current = newPosition;\n          }\n        }\n      });\n      setLoaded(true);\n    }\n  };\n\n  // Add a function to adjust sensitivity\n  const adjustSensitivity = increase => {\n    setThresholds(prev => {\n      const multiplier = increase ? 0.9 : 1.1; // Decrease threshold to increase sensitivity\n      return {\n        x: Math.max(inputResolution.width * 0.05, prev.x * multiplier),\n        y: Math.max(inputResolution.height * 0.05, prev.y * multiplier)\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        visibility: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        width: inputResolution.width,\n        height: inputResolution.height,\n        videoConstraints: videoConstraints,\n        onLoadedData: handleVideoLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: inputResolution.width,\n        height: inputResolution.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), debugInfo.keyPressed && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        color: \"#00f2fe\",\n        padding: \"20px 40px\",\n        borderRadius: \"12px\",\n        fontFamily: \"monospace\",\n        fontSize: \"48px\",\n        fontWeight: \"bold\",\n        zIndex: 1001,\n        boxShadow: \"0 0 20px rgba(0, 242, 254, 0.5)\",\n        border: \"2px solid #00f2fe\"\n      },\n      children: [\"KEY: \", debugInfo.keyPressed.toUpperCase()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        bottom: \"20px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n        color: \"#00f2fe\",\n        padding: \"8px 16px\",\n        borderRadius: \"8px\",\n        fontFamily: \"monospace\",\n        fontSize: \"14px\",\n        zIndex: 1000,\n        display: \"flex\",\n        gap: \"16px\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Position: x=\", faceData.position.x, \", y=\", faceData.position.y]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Direction: yaw=\", faceData.direction.yaw, \"\\xB0, turn=\", faceData.direction.turn, \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), isCalibrated ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Center: x=\", centerPositionRef.current.x, \", y=\", centerPositionRef.current.y]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Calibrating center position...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this), activeDirection && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#00f2fe\",\n          color: \"black\",\n          padding: \"0px 8px\",\n          borderRadius: \"4px\"\n        },\n        children: [\"Active: \", activeDirection.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), debugInfo.pressTime && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Last press: \", debugInfo.pressTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: calibrateCenter,\n          style: {\n            background: \"none\",\n            border: \"1px solid #00f2fe\",\n            color: \"#00f2fe\",\n            padding: \"2px 8px\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            fontSize: \"12px\"\n          },\n          children: \"Recalibrate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => adjustSensitivity(true),\n          style: {\n            background: \"none\",\n            border: \"1px solid #00f2fe\",\n            color: \"#00f2fe\",\n            padding: \"2px 8px\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            fontSize: \"12px\"\n          },\n          children: \"More Sensitive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => adjustSensitivity(false),\n          style: {\n            background: \"none\",\n            border: \"1px solid #00f2fe\",\n            color: \"#00f2fe\",\n            padding: \"2px 8px\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            fontSize: \"12px\"\n          },\n          children: \"Less Sensitive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n}\n_s(FaceDirectionComponent, \"GZ45pYDR1h/bQHKo1U4UH7lZbZM=\");\n_c = FaceDirectionComponent;\nexport default FaceDirectionComponent;\nvar _c;\n$RefreshReg$(_c, \"FaceDirectionComponent\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Webcam","FaceDirectionDetector","jsxDEV","_jsxDEV","inputResolution","width","height","videoConstraints","facingMode","FaceDirectionComponent","_s","canvasRef","webcamRef","loaded","setLoaded","detector","setDetector","faceData","setFaceData","position","x","y","direction","yaw","turn","centerPositionRef","activeDirection","setActiveDirection","isCalibrated","setIsCalibrated","lastKeySentRef","keyTimeoutRef","debugInfo","setDebugInfo","keyPressed","pressTime","thresholds","setThresholds","lastPositionRef","initializeDetector","options","showMesh","showTagNumbers","showDirection","faceDetector","stop","current","clearTimeout","simulateKeyPress","key","Date","toLocaleTimeString","keydownEvent","KeyboardEvent","code","toUpperCase","keyCode","charCodeAt","which","bubbles","cancelable","document","dispatchEvent","window","body","console","log","setTimeout","keyupEvent","prev","calibrateCenter","handleVideoLoad","videoNode","video","target","readyState","start","data","keypoints","newPosition","Math","round","diffFromCenterX","diffFromCenterY","movementX","movementY","exceedsThresholdX","abs","exceedsThresholdY","keyToPress","significantMovement","adjustSensitivity","increase","multiplier","max","children","style","visibility","ref","onLoadedData","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","backgroundColor","color","padding","borderRadius","fontFamily","fontSize","fontWeight","zIndex","boxShadow","border","bottom","display","gap","flexWrap","justifyContent","onClick","background","cursor","_c","$RefreshReg$"],"sources":["C:/Users/kheri/Downloads/Bitcamp/bitcamp-2025/Bitcamp25/test-voice/src/FaceDirectionComponent.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport \"@tensorflow/tfjs\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nimport \"@mediapipe/face_mesh\";\nimport Webcam from \"react-webcam\";\nimport FaceDirectionDetector from \"./face_detection/FaceDirectionDetector\";\n\nconst inputResolution = {\n  width: 640,\n  height: 480,\n};\n\nconst videoConstraints = {\n  width: inputResolution.width,\n  height: inputResolution.height,\n  facingMode: \"user\",\n};\n\nfunction FaceDirectionComponent() {\n  const canvasRef = useRef(null);\n  const webcamRef = useRef(null);\n  const [loaded, setLoaded] = useState(false);\n  const [detector, setDetector] = useState(null);\n  const [faceData, setFaceData] = useState({\n    position: { x: 0, y: 0 },\n    direction: { yaw: 0, turn: 0 }\n  });\n  // Add reference for center position and state for active direction\n  const centerPositionRef = useRef({ x: 0, y: 0 });\n  const [activeDirection, setActiveDirection] = useState(null);\n  const [isCalibrated, setIsCalibrated] = useState(false);\n  const lastKeySentRef = useRef(null);\n  const keyTimeoutRef = useRef(null);\n  // Add debug state to track keypresses\n  const [debugInfo, setDebugInfo] = useState({\n    keyPressed: null,\n    pressTime: null\n  });\n  // Add threshold settings as state so they can be adjusted\n  const [thresholds, setThresholds] = useState({\n    x: inputResolution.width * 0.15,\n    y: inputResolution.height * 0.15\n  });\n  \n  // Add a reference to track the last position to detect movement\n  const lastPositionRef = useRef({ x: 0, y: 0 });\n\n  // Initialize the detector\n  useEffect(() => {\n    const initializeDetector = async () => {\n      const options = {\n        showMesh: false,\n        showTagNumbers: false,\n        showDirection: false\n      };\n      const faceDetector = new FaceDirectionDetector(options);\n      setDetector(faceDetector);\n    };\n\n    initializeDetector();\n\n    // Cleanup on unmount\n    return () => {\n      if (detector) {\n        detector.stop();\n      }\n      if (keyTimeoutRef.current) {\n        clearTimeout(keyTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Function to simulate key press\n  const simulateKeyPress = (key) => {\n    // Skip if already pressed the same key recently\n    if (lastKeySentRef.current === key) {\n      return;\n    }\n\n    lastKeySentRef.current = key;\n    setActiveDirection(key);\n    \n    // Update debug info\n    setDebugInfo({\n      keyPressed: key,\n      pressTime: new Date().toLocaleTimeString()\n    });\n\n    // Create and dispatch keydown event\n    const keydownEvent = new KeyboardEvent('keydown', {\n      key: key,\n      code: `Key${key.toUpperCase()}`,\n      keyCode: key.charCodeAt(0),\n      which: key.charCodeAt(0),\n      bubbles: true,\n      cancelable: true\n    });\n    document.dispatchEvent(keydownEvent);\n    \n    // Also try to trigger the event on window and document.body\n    window.dispatchEvent(keydownEvent);\n    if (document.body) document.body.dispatchEvent(keydownEvent);\n    \n    // Log to console for debugging\n    console.log(`Key DOWN: ${key} at ${new Date().toLocaleTimeString()}`);\n\n    // Clear any existing timeout\n    if (keyTimeoutRef.current) {\n      clearTimeout(keyTimeoutRef.current);\n    }\n\n    // Schedule keyup after a 1 second delay\n    keyTimeoutRef.current = setTimeout(() => {\n      // Create and dispatch keyup event\n      const keyupEvent = new KeyboardEvent('keyup', {\n        key: key,\n        code: `Key${key.toUpperCase()}`,\n        keyCode: key.charCodeAt(0),\n        which: key.charCodeAt(0),\n        bubbles: true,\n        cancelable: true\n      });\n      document.dispatchEvent(keyupEvent);\n      window.dispatchEvent(keyupEvent);\n      if (document.body) document.body.dispatchEvent(keyupEvent);\n      \n      // Log to console for debugging\n      console.log(`Key UP: ${key} at ${new Date().toLocaleTimeString()}`);\n      \n      // Reset the last key sent after a short delay\n      lastKeySentRef.current = null;\n      setActiveDirection(null);\n      \n      // Update debug info\n      setDebugInfo(prev => ({\n        ...prev,\n        keyPressed: null\n      }));\n    }, 1000); // Key press duration in ms - changed to 1000ms (1 second)\n  };\n\n  // Function to calibrate center position\n  const calibrateCenter = () => {\n    if (faceData.position.x > 0 && faceData.position.y > 0) {\n      centerPositionRef.current = { ...faceData.position };\n      setIsCalibrated(true);\n    }\n  };\n\n  // Handle video load\n  const handleVideoLoad = async (videoNode) => {\n    const video = videoNode.target;\n    if (video.readyState !== 4) return;\n    if (loaded) return;\n\n    if (detector && webcamRef.current && canvasRef.current) {\n      await detector.start(\n        webcamRef.current.video, \n        canvasRef.current, \n        (data) => {\n          // Update face data when detection occurs\n          if (data && data.keypoints && data.keypoints[1]) {\n            const newPosition = {\n              x: Math.round(data.keypoints[1].x),\n              y: Math.round(data.keypoints[1].y)\n            };\n            \n            setFaceData({\n              position: newPosition,\n              direction: {\n                yaw: Math.round(data.yaw || 0),\n                turn: Math.round(data.turn || 0)\n              }\n            });\n\n            // Auto-calibrate on first detection\n            if (!isCalibrated && newPosition.x > 0 && newPosition.y > 0) {\n              calibrateCenter();\n              lastPositionRef.current = newPosition;\n            }\n\n            // Only trigger key presses after calibration\n            if (isCalibrated) {\n              // Calculate differences from center position\n              const diffFromCenterX = newPosition.x - centerPositionRef.current.x;\n              const diffFromCenterY = newPosition.y - centerPositionRef.current.y;\n              \n              // Calculate movement from last position\n              const movementX = newPosition.x - lastPositionRef.current.x;\n              const movementY = newPosition.y - lastPositionRef.current.y;\n              \n              // Check if position exceeds the threshold from center\n              const exceedsThresholdX = Math.abs(diffFromCenterX) > thresholds.x;\n              const exceedsThresholdY = Math.abs(diffFromCenterY) > thresholds.y;\n              \n              // Determine which key to press based on position relative to center\n              let keyToPress = null;\n              \n              // Prioritize larger displacement\n              if (exceedsThresholdX && exceedsThresholdY) {\n                // If exceeds in both directions, use the one with larger relative displacement\n                if (Math.abs(diffFromCenterX / thresholds.x) > Math.abs(diffFromCenterY / thresholds.y)) {\n                  keyToPress = diffFromCenterX > 0 ? 'r' : 'l';\n                } else {\n                  keyToPress = diffFromCenterY > 0 ? 'd' : 'u';\n                }\n              } else if (exceedsThresholdX) {\n                // Only exceeds in X direction\n                keyToPress = diffFromCenterX > 0 ? 'r' : 'l';\n              } else if (exceedsThresholdY) {\n                // Only exceeds in Y direction\n                keyToPress = diffFromCenterY > 0 ? 'd' : 'u';\n              }\n              \n              // If we should press a key and it's different from the current key\n              // or if significant movement in the same direction continues\n              const significantMovement = \n                (keyToPress === 'r' && movementX > 5) ||\n                (keyToPress === 'l' && movementX < -5) ||\n                (keyToPress === 'd' && movementY > 5) ||\n                (keyToPress === 'u' && movementY < -5);\n                \n              if (keyToPress && (keyToPress !== lastKeySentRef.current || significantMovement)) {\n                simulateKeyPress(keyToPress);\n              }\n              \n              // Update last position reference\n              lastPositionRef.current = newPosition;\n            }\n          }\n        }\n      );\n      setLoaded(true);\n    }\n  };\n\n  // Add a function to adjust sensitivity\n  const adjustSensitivity = (increase) => {\n    setThresholds(prev => {\n      const multiplier = increase ? 0.9 : 1.1; // Decrease threshold to increase sensitivity\n      return {\n        x: Math.max(inputResolution.width * 0.05, prev.x * multiplier),\n        y: Math.max(inputResolution.height * 0.05, prev.y * multiplier)\n      };\n    });\n  };\n\n  return (\n    <div>\n      {/* Hidden webcam and canvas for detection */}\n      <div style={{ position: \"absolute\", visibility: \"hidden\" }}>\n        <Webcam\n          ref={webcamRef}\n          width={inputResolution.width}\n          height={inputResolution.height}\n          videoConstraints={videoConstraints}\n          onLoadedData={handleVideoLoad}\n        />\n        \n        <canvas\n          ref={canvasRef}\n          width={inputResolution.width}\n          height={inputResolution.height}\n        />\n      </div>\n\n      {/* Debug display - large key indicator */}\n      {debugInfo.keyPressed && (\n        <div style={{\n          position: \"fixed\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n          color: \"#00f2fe\",\n          padding: \"20px 40px\",\n          borderRadius: \"12px\",\n          fontFamily: \"monospace\",\n          fontSize: \"48px\",\n          fontWeight: \"bold\",\n          zIndex: 1001,\n          boxShadow: \"0 0 20px rgba(0, 242, 254, 0.5)\",\n          border: \"2px solid #00f2fe\"\n        }}>\n          KEY: {debugInfo.keyPressed.toUpperCase()}\n        </div>\n      )}\n\n      {/* Simple display of face data */}\n      <div style={{ \n        position: \"fixed\", \n        bottom: \"20px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n        color: \"#00f2fe\",\n        padding: \"8px 16px\",\n        borderRadius: \"8px\",\n        fontFamily: \"monospace\",\n        fontSize: \"14px\",\n        zIndex: 1000,\n        display: \"flex\",\n        gap: \"16px\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      }}>\n        <div>\n          Position: x={faceData.position.x}, y={faceData.position.y}\n        </div>\n        <div>\n          Direction: yaw={faceData.direction.yaw}°, turn={faceData.direction.turn}°\n        </div>\n        {isCalibrated ? (\n          <div>\n            Center: x={centerPositionRef.current.x}, y={centerPositionRef.current.y}\n          </div>\n        ) : (\n          <div>Calibrating center position...</div>\n        )}\n        {activeDirection && (\n          <div style={{ \n            backgroundColor: \"#00f2fe\", \n            color: \"black\", \n            padding: \"0px 8px\", \n            borderRadius: \"4px\" \n          }}>\n            Active: {activeDirection.toUpperCase()}\n          </div>\n        )}\n        {debugInfo.pressTime && (\n          <div>\n            Last press: {debugInfo.pressTime}\n          </div>\n        )}\n        <div style={{ display: 'flex', gap: '8px' }}>\n          <button \n            onClick={calibrateCenter}\n            style={{\n              background: \"none\",\n              border: \"1px solid #00f2fe\",\n              color: \"#00f2fe\",\n              padding: \"2px 8px\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n              fontSize: \"12px\"\n            }}\n          >\n            Recalibrate\n          </button>\n          <button \n            onClick={() => adjustSensitivity(true)}\n            style={{\n              background: \"none\",\n              border: \"1px solid #00f2fe\",\n              color: \"#00f2fe\",\n              padding: \"2px 8px\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n              fontSize: \"12px\"\n            }}\n          >\n            More Sensitive\n          </button>\n          <button \n            onClick={() => adjustSensitivity(false)}\n            style={{\n              background: \"none\",\n              border: \"1px solid #00f2fe\",\n              color: \"#00f2fe\",\n              padding: \"2px 8px\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n              fontSize: \"12px\"\n            }}\n          >\n            Less Sensitive\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FaceDirectionComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}