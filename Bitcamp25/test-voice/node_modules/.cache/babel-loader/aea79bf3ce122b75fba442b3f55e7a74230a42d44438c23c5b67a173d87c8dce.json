{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kheri\\\\Downloads\\\\Bitcamp\\\\bitcamp-2025\\\\Bitcamp25\\\\test-voice\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { RetellWebClient } from \"retell-client-js-sdk\";\nimport SplineLoader from './SplineLoader';\nimport SplineViewer from './SplineViewer';\nimport './index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isCallActive, setIsCallActive] = useState(false);\n  const [retellWebClient, setRetellWebClient] = useState(null);\n  const [eventStatus, setEventStatus] = useState({\n    callStarted: false,\n    callEnded: false,\n    agentStartTalking: false,\n    agentStopTalking: false,\n    error: null,\n    transcript: ''\n  });\n  const [micPermission, setMicPermission] = useState(null);\n  const [accessToken, setAccessToken] = useState('');\n  const [isGeneratingToken, setIsGeneratingToken] = useState(false);\n  const [callInfo, setCallInfo] = useState(null);\n  const [loadingComplete, setLoadingComplete] = useState(false);\n  const [showUI, setShowUI] = useState(true);\n\n  // Agent ID for Retell\n  const AGENT_ID = \"agent_30b1b504a89d37e3109a7da3e9\";\n\n  // Server endpoint for token generation\n  const TOKEN_SERVER_URL = \"http://127.0.0.1:5000/api/generate-token\";\n  useEffect(() => {\n    // Initialize the RetellWebClient\n    const client = new RetellWebClient();\n    setRetellWebClient(client);\n\n    // Check for microphone permissions\n    checkMicrophonePermission();\n\n    // Set up event listeners\n    client.on(\"call_started\", () => {\n      console.log(\"call started\");\n      setEventStatus(prev => ({\n        ...prev,\n        callStarted: true,\n        callEnded: false\n      }));\n    });\n    client.on(\"call_ended\", () => {\n      console.log(\"call ended\");\n      setIsCallActive(false);\n      setEventStatus(prev => ({\n        ...prev,\n        callEnded: true\n      }));\n    });\n    client.on(\"agent_start_talking\", () => {\n      console.log(\"agent_start_talking\");\n      setEventStatus(prev => ({\n        ...prev,\n        agentStartTalking: true,\n        agentStopTalking: false\n      }));\n    });\n    client.on(\"agent_stop_talking\", () => {\n      console.log(\"agent_stop_talking\");\n      setEventStatus(prev => ({\n        ...prev,\n        agentStopTalking: true,\n        agentStartTalking: false\n      }));\n    });\n    client.on(\"update\", update => {\n      console.log(\"Update received:\", update);\n      if (update.transcript) {\n        // Check if transcript is an object with role and content properties\n        if (typeof update.transcript === 'object' && update.transcript.role && update.transcript.content) {\n          // Extract the content text\n          setEventStatus(prev => ({\n            ...prev,\n            transcript: update.transcript.content\n          }));\n        }\n        // Check if transcript is an array of message objects\n        else if (Array.isArray(update.transcript)) {\n          // Map through messages and format them\n          const formattedTranscript = update.transcript.map(msg => {\n            if (typeof msg === 'object' && msg.role && msg.content) {\n              return `${msg.role}: ${msg.content}`;\n            }\n            return String(msg); // Convert to string if it's some other type\n          }).join('\\n');\n          setEventStatus(prev => ({\n            ...prev,\n            transcript: formattedTranscript\n          }));\n        }\n        // If it's a string or can be converted to string\n        else {\n          setEventStatus(prev => ({\n            ...prev,\n            transcript: String(update.transcript)\n          }));\n        }\n      }\n    });\n    client.on(\"metadata\", metadata => {\n      console.log(\"Metadata received:\", metadata);\n    });\n    client.on(\"error\", error => {\n      console.error(\"An error occurred:\", error);\n      setEventStatus(prev => ({\n        ...prev,\n        error: error.message || \"Unknown error\"\n      }));\n      client.stopCall();\n    });\n\n    // Clean up event listeners on component unmount\n    return () => {\n      if (client) {\n        client.stopCall();\n      }\n    };\n  }, []);\n\n  // Function to generate an access token from the server\n  const generateAccessToken = async () => {\n    try {\n      setIsGeneratingToken(true);\n      setEventStatus(prev => ({\n        ...prev,\n        error: null\n      }));\n      console.log(\"Requesting access token from server...\");\n\n      // Make the API call to our server endpoint\n      const response = await fetch(TOKEN_SERVER_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          agent_id: AGENT_ID\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Server responded with status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!data.access_token) {\n        throw new Error(\"No access token received from server\");\n      }\n      console.log(\"Access token received from server:\", data.access_token);\n      setAccessToken(data.access_token);\n      setCallInfo(data); // Store the full call info for reference\n      setIsGeneratingToken(false);\n      return data.access_token;\n    } catch (error) {\n      console.error(\"Failed to generate access token:\", error);\n      setEventStatus(prev => ({\n        ...prev,\n        error: error.message || \"Failed to generate access token\"\n      }));\n      setIsGeneratingToken(false);\n      return null;\n    }\n  };\n  const checkMicrophonePermission = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      setMicPermission('granted');\n      // Stop the stream tracks immediately\n      stream.getTracks().forEach(track => track.stop());\n    } catch (error) {\n      console.error('Microphone permission denied:', error);\n      setMicPermission('denied');\n    }\n  };\n  const requestMicrophonePermission = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      setMicPermission('granted');\n      return true;\n    } catch (error) {\n      console.error('Failed to get microphone permission:', error);\n      setMicPermission('denied');\n      return false;\n    }\n  };\n  const startCall = async () => {\n    if (!retellWebClient || isCallActive) return;\n\n    // First ensure we have microphone permissions\n    if (micPermission !== 'granted') {\n      const permissionGranted = await requestMicrophonePermission();\n      if (!permissionGranted) {\n        alert('Microphone permission is required to start a call');\n        return;\n      }\n    }\n    try {\n      // Reset event status\n      setEventStatus({\n        callStarted: false,\n        callEnded: false,\n        agentStartTalking: false,\n        agentStopTalking: false,\n        error: null,\n        transcript: ''\n      });\n\n      // Ensure we have a valid token\n      if (!accessToken) {\n        const token = await generateAccessToken();\n        if (!token) {\n          throw new Error(\"Failed to generate a valid access token\");\n        }\n      }\n      console.log(\"Starting call with access token...\");\n\n      // Start the call using the access token\n      await retellWebClient.startCall({\n        accessToken: accessToken,\n        sampleRate: 24000,\n        captureDeviceId: \"default\",\n        emitRawAudioSamples: false\n      });\n      setIsCallActive(true);\n    } catch (error) {\n      console.error(\"Failed to start call:\", error);\n      setEventStatus(prev => ({\n        ...prev,\n        error: error.message || \"Failed to start call\"\n      }));\n    }\n  };\n  const stopCall = () => {\n    if (retellWebClient && isCallActive) {\n      retellWebClient.stopCall();\n      setIsCallActive(false);\n    }\n  };\n\n  // Function to check if token is expired (tokens are valid for 30 seconds)\n  const isTokenExpired = () => {\n    // If we don't have token info, consider it expired\n    if (!accessToken || !callInfo) return true;\n\n    // Track when we received the token in our application\n    if (!callInfo._tokenReceivedTime) {\n      // If this is the first time checking, add a timestamp of when we received it\n      callInfo._tokenReceivedTime = Date.now();\n      setCallInfo({\n        ...callInfo\n      }); // Update the state to save this timestamp\n      return false; // Token is fresh\n    }\n\n    // Calculate how long ago we received the token\n    const tokenReceivedTime = callInfo._tokenReceivedTime;\n    const currentTime = Date.now();\n    const tokenAgeInSeconds = (currentTime - tokenReceivedTime) / 1000;\n\n    // Token expires after 30 seconds, but we consider it expired at 25s\n    // to give us a buffer to generate a new one\n    return tokenAgeInSeconds > 25;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !loadingComplete ? /*#__PURE__*/_jsxDEV(SplineLoader, {\n      onLoadingComplete: () => setLoadingComplete(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spline-container\",\n        children: /*#__PURE__*/_jsxDEV(SplineViewer, {\n          url: \"https://prod.spline.design/8CIsvX5hg8u-JUKM/scene.splinecode\",\n          options: {\n            hint: true,\n            'loading-anim-type': 'spinner-small-dark'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sidebar ${showUI ? 'open' : 'closed'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-ui\",\n          onClick: () => setShowUI(!showUI),\n          children: showUI ? '×' : '≡'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"AI Voice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-dot ${isCallActive ? 'active' : 'inactive'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: isCallActive ? 'Connected' : 'Disconnected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), micPermission !== 'granted' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: requestMicrophonePermission,\n            className: \"btn-secondary btn-small\",\n            children: \"Enable Mic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: !accessToken || isTokenExpired() ? generateAccessToken : startCall,\n              disabled: isCallActive || isGeneratingToken,\n              className: \"btn-primary\",\n              children: !accessToken || isTokenExpired() ? \"Connect\" : isGeneratingToken ? \"...\" : \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), isCallActive && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: stopCall,\n              className: \"btn-danger\",\n              children: \"End\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), eventStatus.error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-badge\",\n            children: [\"Error: \", eventStatus.error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), isCallActive && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"talking-indicator\",\n            children: eventStatus.agentStartTalking && !eventStatus.agentStopTalking ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wave-animation\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 21\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), eventStatus.transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mini-transcript\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                whiteSpace: 'pre-line'\n              },\n              children: eventStatus.transcript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fwzA7CY5vUTgEmEI/ZrRRWGzFXE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","RetellWebClient","SplineLoader","SplineViewer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isCallActive","setIsCallActive","retellWebClient","setRetellWebClient","eventStatus","setEventStatus","callStarted","callEnded","agentStartTalking","agentStopTalking","error","transcript","micPermission","setMicPermission","accessToken","setAccessToken","isGeneratingToken","setIsGeneratingToken","callInfo","setCallInfo","loadingComplete","setLoadingComplete","showUI","setShowUI","AGENT_ID","TOKEN_SERVER_URL","client","checkMicrophonePermission","on","console","log","prev","update","role","content","Array","isArray","formattedTranscript","map","msg","String","join","metadata","message","stopCall","generateAccessToken","response","fetch","method","headers","body","JSON","stringify","agent_id","ok","errorData","json","Error","status","data","access_token","stream","navigator","mediaDevices","getUserMedia","audio","getTracks","forEach","track","stop","requestMicrophonePermission","startCall","permissionGranted","alert","token","sampleRate","captureDeviceId","emitRawAudioSamples","isTokenExpired","_tokenReceivedTime","Date","now","tokenReceivedTime","currentTime","tokenAgeInSeconds","className","children","onLoadingComplete","fileName","_jsxFileName","lineNumber","columnNumber","url","options","hint","onClick","disabled","style","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/kheri/Downloads/Bitcamp/bitcamp-2025/Bitcamp25/test-voice/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { RetellWebClient } from \"retell-client-js-sdk\";\r\nimport SplineLoader from './SplineLoader';\r\nimport SplineViewer from './SplineViewer';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  const [isCallActive, setIsCallActive] = useState(false);\r\n  const [retellWebClient, setRetellWebClient] = useState(null);\r\n  const [eventStatus, setEventStatus] = useState({\r\n    callStarted: false,\r\n    callEnded: false,\r\n    agentStartTalking: false,\r\n    agentStopTalking: false,\r\n    error: null,\r\n    transcript: ''\r\n  });\r\n  const [micPermission, setMicPermission] = useState(null);\r\n  const [accessToken, setAccessToken] = useState('');\r\n  const [isGeneratingToken, setIsGeneratingToken] = useState(false);\r\n  const [callInfo, setCallInfo] = useState(null);\r\n  const [loadingComplete, setLoadingComplete] = useState(false);\r\n  const [showUI, setShowUI] = useState(true);\r\n\r\n  // Agent ID for Retell\r\n  const AGENT_ID = \"agent_30b1b504a89d37e3109a7da3e9\";\r\n  \r\n  // Server endpoint for token generation\r\n  const TOKEN_SERVER_URL = \"http://127.0.0.1:5000/api/generate-token\";\r\n\r\n  useEffect(() => {\r\n    // Initialize the RetellWebClient\r\n    const client = new RetellWebClient();\r\n    setRetellWebClient(client);\r\n    \r\n    // Check for microphone permissions\r\n    checkMicrophonePermission();\r\n    \r\n    // Set up event listeners\r\n    client.on(\"call_started\", () => {\r\n      console.log(\"call started\");\r\n      setEventStatus(prev => ({ ...prev, callStarted: true, callEnded: false }));\r\n    });\r\n\r\n    client.on(\"call_ended\", () => {\r\n      console.log(\"call ended\");\r\n      setIsCallActive(false);\r\n      setEventStatus(prev => ({ ...prev, callEnded: true }));\r\n    });\r\n\r\n    client.on(\"agent_start_talking\", () => {\r\n      console.log(\"agent_start_talking\");\r\n      setEventStatus(prev => ({ ...prev, agentStartTalking: true, agentStopTalking: false }));\r\n    });\r\n\r\n    client.on(\"agent_stop_talking\", () => {\r\n      console.log(\"agent_stop_talking\");\r\n      setEventStatus(prev => ({ ...prev, agentStopTalking: true, agentStartTalking: false }));\r\n    });\r\n\r\n    client.on(\"update\", (update) => {\r\n      console.log(\"Update received:\", update);\r\n      if (update.transcript) {\r\n        // Check if transcript is an object with role and content properties\r\n        if (typeof update.transcript === 'object' && update.transcript.role && update.transcript.content) {\r\n          // Extract the content text\r\n          setEventStatus(prev => ({ ...prev, transcript: update.transcript.content }));\r\n        } \r\n        // Check if transcript is an array of message objects\r\n        else if (Array.isArray(update.transcript)) {\r\n          // Map through messages and format them\r\n          const formattedTranscript = update.transcript\r\n            .map(msg => {\r\n              if (typeof msg === 'object' && msg.role && msg.content) {\r\n                return `${msg.role}: ${msg.content}`;\r\n              }\r\n              return String(msg); // Convert to string if it's some other type\r\n            })\r\n            .join('\\n');\r\n          setEventStatus(prev => ({ ...prev, transcript: formattedTranscript }));\r\n        } \r\n        // If it's a string or can be converted to string\r\n        else {\r\n          setEventStatus(prev => ({ ...prev, transcript: String(update.transcript) }));\r\n        }\r\n      }\r\n    });\r\n\r\n    client.on(\"metadata\", (metadata) => {\r\n      console.log(\"Metadata received:\", metadata);\r\n    });\r\n\r\n    client.on(\"error\", (error) => {\r\n      console.error(\"An error occurred:\", error);\r\n      setEventStatus(prev => ({ ...prev, error: error.message || \"Unknown error\" }));\r\n      client.stopCall();\r\n    });\r\n    \r\n    // Clean up event listeners on component unmount\r\n    return () => {\r\n      if (client) {\r\n        client.stopCall();\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  // Function to generate an access token from the server\r\n  const generateAccessToken = async () => {\r\n    try {\r\n      setIsGeneratingToken(true);\r\n      setEventStatus(prev => ({ ...prev, error: null }));\r\n      console.log(\"Requesting access token from server...\");\r\n      \r\n      // Make the API call to our server endpoint\r\n      const response = await fetch(TOKEN_SERVER_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          agent_id: AGENT_ID,\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Server responded with status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!data.access_token) {\r\n        throw new Error(\"No access token received from server\");\r\n      }\r\n      \r\n      console.log(\"Access token received from server:\", data.access_token);\r\n      setAccessToken(data.access_token);\r\n      setCallInfo(data); // Store the full call info for reference\r\n      setIsGeneratingToken(false);\r\n      \r\n      return data.access_token;\r\n    } catch (error) {\r\n      console.error(\"Failed to generate access token:\", error);\r\n      setEventStatus(prev => ({ ...prev, error: error.message || \"Failed to generate access token\" }));\r\n      setIsGeneratingToken(false);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  const checkMicrophonePermission = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      setMicPermission('granted');\r\n      // Stop the stream tracks immediately\r\n      stream.getTracks().forEach(track => track.stop());\r\n    } catch (error) {\r\n      console.error('Microphone permission denied:', error);\r\n      setMicPermission('denied');\r\n    }\r\n  };\r\n  \r\n  const requestMicrophonePermission = async () => {\r\n    try {\r\n      await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      setMicPermission('granted');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to get microphone permission:', error);\r\n      setMicPermission('denied');\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  const startCall = async () => {\r\n    if (!retellWebClient || isCallActive) return;\r\n    \r\n    // First ensure we have microphone permissions\r\n    if (micPermission !== 'granted') {\r\n      const permissionGranted = await requestMicrophonePermission();\r\n      if (!permissionGranted) {\r\n        alert('Microphone permission is required to start a call');\r\n        return;\r\n      }\r\n    }\r\n    \r\n    try {\r\n      // Reset event status\r\n      setEventStatus({\r\n        callStarted: false,\r\n        callEnded: false,\r\n        agentStartTalking: false,\r\n        agentStopTalking: false,\r\n        error: null,\r\n        transcript: ''\r\n      });\r\n      \r\n      // Ensure we have a valid token\r\n      if (!accessToken) {\r\n        const token = await generateAccessToken();\r\n        if (!token) {\r\n          throw new Error(\"Failed to generate a valid access token\");\r\n        }\r\n      }\r\n      \r\n      console.log(\"Starting call with access token...\");\r\n      \r\n      // Start the call using the access token\r\n      await retellWebClient.startCall({\r\n        accessToken: accessToken,\r\n        sampleRate: 24000,\r\n        captureDeviceId: \"default\",\r\n        emitRawAudioSamples: false,\r\n      });\r\n      \r\n      setIsCallActive(true);\r\n    } catch (error) {\r\n      console.error(\"Failed to start call:\", error);\r\n      setEventStatus(prev => ({ ...prev, error: error.message || \"Failed to start call\" }));\r\n    }\r\n  };\r\n  \r\n  const stopCall = () => {\r\n    if (retellWebClient && isCallActive) {\r\n      retellWebClient.stopCall();\r\n      setIsCallActive(false);\r\n    }\r\n  };\r\n  \r\n  // Function to check if token is expired (tokens are valid for 30 seconds)\r\n  const isTokenExpired = () => {\r\n    // If we don't have token info, consider it expired\r\n    if (!accessToken || !callInfo) return true;\r\n    \r\n    // Track when we received the token in our application\r\n    if (!callInfo._tokenReceivedTime) {\r\n      // If this is the first time checking, add a timestamp of when we received it\r\n      callInfo._tokenReceivedTime = Date.now();\r\n      setCallInfo({...callInfo}); // Update the state to save this timestamp\r\n      return false; // Token is fresh\r\n    }\r\n    \r\n    // Calculate how long ago we received the token\r\n    const tokenReceivedTime = callInfo._tokenReceivedTime;\r\n    const currentTime = Date.now();\r\n    const tokenAgeInSeconds = (currentTime - tokenReceivedTime) / 1000;\r\n    \r\n    // Token expires after 30 seconds, but we consider it expired at 25s\r\n    // to give us a buffer to generate a new one\r\n    return tokenAgeInSeconds > 25;\r\n  };\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      {!loadingComplete ? (\r\n        <SplineLoader onLoadingComplete={() => setLoadingComplete(true)} />\r\n      ) : (\r\n        <>\r\n          {/* Main Spline Animation filling the entire viewport */}\r\n          <div className=\"spline-container\">\r\n            <SplineViewer \r\n              url=\"https://prod.spline.design/8CIsvX5hg8u-JUKM/scene.splinecode\"\r\n              options={{\r\n                hint: true,\r\n                'loading-anim-type': 'spinner-small-dark'\r\n              }}\r\n            />\r\n          </div>\r\n          \r\n          {/* Minimal UI sidebar */}\r\n          <div className={`sidebar ${showUI ? 'open' : 'closed'}`}>\r\n            <div className=\"toggle-ui\" onClick={() => setShowUI(!showUI)}>\r\n              {showUI ? '×' : '≡'}\r\n            </div>\r\n            \r\n            <div className=\"sidebar-content\">\r\n              <h2>AI Voice</h2>\r\n              \r\n              <div className=\"status-indicator\">\r\n                <div className={`status-dot ${isCallActive ? 'active' : 'inactive'}`}></div>\r\n                <span>{isCallActive ? 'Connected' : 'Disconnected'}</span>\r\n              </div>\r\n              \r\n              {micPermission !== 'granted' && (\r\n                <button \r\n                  onClick={requestMicrophonePermission}\r\n                  className=\"btn-secondary btn-small\"\r\n                >\r\n                  Enable Mic\r\n                </button>\r\n              )}\r\n              \r\n              <div className=\"control-buttons\">\r\n                <button \r\n                  onClick={!accessToken || isTokenExpired() ? generateAccessToken : startCall} \r\n                  disabled={isCallActive || isGeneratingToken}\r\n                  className=\"btn-primary\"\r\n                >\r\n                  {!accessToken || isTokenExpired() \r\n                    ? \"Connect\" \r\n                    : isGeneratingToken \r\n                      ? \"...\" \r\n                      : \"Start\"}\r\n                </button>\r\n                \r\n                {isCallActive && (\r\n                  <button \r\n                    onClick={stopCall} \r\n                    className=\"btn-danger\"\r\n                  >\r\n                    End\r\n                  </button>\r\n                )}\r\n              </div>\r\n              \r\n              {eventStatus.error && (\r\n                <div className=\"error-badge\">\r\n                  Error: {eventStatus.error}\r\n                </div>\r\n              )}\r\n              \r\n              {/* Minimalistic talking indicator */}\r\n              {isCallActive && (\r\n                <div className=\"talking-indicator\">\r\n                  {eventStatus.agentStartTalking && !eventStatus.agentStopTalking ? (\r\n                    <div className=\"wave-animation\">\r\n                      <div className=\"wave\"></div>\r\n                      <div className=\"wave\"></div>\r\n                      <div className=\"wave\"></div>\r\n                      <div className=\"wave\"></div>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              )}\r\n              \r\n              {/* Transcript in a minimal scrollable area */}\r\n              {eventStatus.transcript && (\r\n                <div className=\"mini-transcript\">\r\n                  <p style={{ whiteSpace: 'pre-line' }}>{eventStatus.transcript}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}