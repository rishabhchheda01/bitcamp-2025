{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kheri\\\\Downloads\\\\Bitcamp\\\\bitcamp-2025\\\\Bitcamp25\\\\test-voice\\\\src\\\\FaceDirectionComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"@tensorflow/tfjs\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nimport \"@mediapipe/face_mesh\";\nimport Webcam from \"react-webcam\";\nimport FaceDirectionDetector from \"./face_detection/FaceDirectionDetector\";\n\n// Ensure we have valid dimensions - never use 0x0\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst inputResolution = {\n  width: 640,\n  height: 480\n};\nconst videoConstraints = {\n  width: inputResolution.width,\n  height: inputResolution.height,\n  facingMode: \"user\",\n  // Add explicit video constraints to ensure valid dimensions\n  aspectRatio: 4 / 3\n};\nfunction FaceDirectionComponent() {\n  _s();\n  const canvasRef = useRef(null);\n  const webcamRef = useRef(null);\n  const [loaded, setLoaded] = useState(false);\n  const [detector, setDetector] = useState(null);\n  const [faceData, setFaceData] = useState({\n    position: {\n      x: 0,\n      y: 0\n    },\n    direction: {\n      yaw: 0,\n      turn: 0\n    }\n  });\n  // Add reference for center position and state for active direction\n  const centerPositionRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const [activeDirection, setActiveDirection] = useState(null);\n  const [isCalibrated, setIsCalibrated] = useState(false);\n  const lastKeySentRef = useRef(null);\n  const keyTimeoutRef = useRef(null);\n  // Add debug state to track keypresses\n  const [debugInfo, setDebugInfo] = useState({\n    keyPressed: null,\n    pressTime: null\n  });\n  // Add threshold settings as state so they can be adjusted\n  const [thresholds, setThresholds] = useState({\n    x: inputResolution.width * 0.15,\n    y: inputResolution.height * 0.15\n  });\n\n  // Add a reference to track the last position to detect movement\n  const lastPositionRef = useRef({\n    x: 0,\n    y: 0\n  });\n\n  // Add state to track errors\n  const [error, setError] = useState(null);\n\n  // Initialize the detector\n  useEffect(() => {\n    const initializeDetector = async () => {\n      try {\n        var _window$tf, _window$tf2;\n        // Force TensorFlow to initialize with WebGL backend\n        await import('@tensorflow/tfjs-backend-webgl');\n        await ((_window$tf = window.tf) === null || _window$tf === void 0 ? void 0 : _window$tf.setBackend('webgl'));\n        console.log(\"TensorFlow backend initialized:\", (_window$tf2 = window.tf) === null || _window$tf2 === void 0 ? void 0 : _window$tf2.getBackend());\n        const options = {\n          runtime: 'tfjs',\n          // Explicitly set runtime to tfjs\n          showMesh: false,\n          showTagNumbers: false,\n          showDirection: false\n        };\n        const faceDetector = new FaceDirectionDetector(options);\n        setDetector(faceDetector);\n      } catch (err) {\n        console.error(\"Error initializing detector:\", err);\n        setError(`Detector init error: ${err.message}`);\n      }\n    };\n    initializeDetector();\n\n    // Cleanup on unmount\n    return () => {\n      if (detector) {\n        detector.stop();\n      }\n      if (keyTimeoutRef.current) {\n        clearTimeout(keyTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Function to simulate key press\n  const simulateKeyPress = key => {\n    // Skip if already pressed the same key recently\n    if (lastKeySentRef.current === key) {\n      return;\n    }\n    lastKeySentRef.current = key;\n    setActiveDirection(key);\n\n    // Update debug info\n    setDebugInfo({\n      keyPressed: key,\n      pressTime: new Date().toLocaleTimeString()\n    });\n\n    // Create and dispatch keydown event\n    const keydownEvent = new KeyboardEvent('keydown', {\n      key: key,\n      code: `Key${key.toUpperCase()}`,\n      keyCode: key.charCodeAt(0),\n      which: key.charCodeAt(0),\n      bubbles: true,\n      cancelable: true\n    });\n    document.dispatchEvent(keydownEvent);\n\n    // Also try to trigger the event on window and document.body\n    window.dispatchEvent(keydownEvent);\n    if (document.body) document.body.dispatchEvent(keydownEvent);\n\n    // Log to console for debugging\n    console.log(`Key DOWN: ${key} at ${new Date().toLocaleTimeString()}`);\n\n    // Clear any existing timeout\n    if (keyTimeoutRef.current) {\n      clearTimeout(keyTimeoutRef.current);\n    }\n\n    // Schedule keyup after a 1 second delay\n    keyTimeoutRef.current = setTimeout(() => {\n      // Create and dispatch keyup event\n      const keyupEvent = new KeyboardEvent('keyup', {\n        key: key,\n        code: `Key${key.toUpperCase()}`,\n        keyCode: key.charCodeAt(0),\n        which: key.charCodeAt(0),\n        bubbles: true,\n        cancelable: true\n      });\n      document.dispatchEvent(keyupEvent);\n      window.dispatchEvent(keyupEvent);\n      if (document.body) document.body.dispatchEvent(keyupEvent);\n\n      // Log to console for debugging\n      console.log(`Key UP: ${key} at ${new Date().toLocaleTimeString()}`);\n\n      // Reset the last key sent after a short delay\n      lastKeySentRef.current = null;\n      setActiveDirection(null);\n\n      // Update debug info\n      setDebugInfo(prev => ({\n        ...prev,\n        keyPressed: null\n      }));\n    }, 1000); // Key press duration in ms - changed to 1000ms (1 second)\n  };\n\n  // Function to calibrate center position\n  const calibrateCenter = () => {\n    if (faceData.position.x > 0 && faceData.position.y > 0) {\n      centerPositionRef.current = {\n        ...faceData.position\n      };\n      setIsCalibrated(true);\n    }\n  };\n\n  // Handle video load\n  const handleVideoLoad = async videoNode => {\n    try {\n      const video = videoNode.target;\n\n      // Check if video has valid dimensions\n      if (video.videoWidth === 0 || video.videoHeight === 0) {\n        console.warn(\"Video dimensions are invalid:\", video.videoWidth, \"x\", video.videoHeight);\n        return; // Wait for valid dimensions\n      }\n      if (video.readyState !== 4) {\n        console.log(\"Video not ready yet, state:\", video.readyState);\n        return; // Wait until video is completely loaded\n      }\n      if (loaded) {\n        console.log(\"Detection already started, skipping\");\n        return;\n      }\n\n      // Validate canvas dimensions\n      if (!canvasRef.current) {\n        console.error(\"Canvas ref is null\");\n        return;\n      }\n\n      // Ensure canvas has proper dimensions\n      canvasRef.current.width = video.videoWidth || inputResolution.width;\n      canvasRef.current.height = video.videoHeight || inputResolution.height;\n      console.log(\"Starting detection with video dimensions:\", video.videoWidth, \"x\", video.videoHeight, \"Canvas dimensions:\", canvasRef.current.width, \"x\", canvasRef.current.height);\n      if (detector && webcamRef.current && canvasRef.current) {\n        await detector.start(webcamRef.current.video, canvasRef.current, data => {\n          // Update face data when detection occurs\n          if (data && data.keypoints && data.keypoints[1]) {\n            const newPosition = {\n              x: Math.round(data.keypoints[1].x),\n              y: Math.round(data.keypoints[1].y)\n            };\n            setFaceData({\n              position: newPosition,\n              direction: {\n                yaw: Math.round(data.yaw || 0),\n                turn: Math.round(data.turn || 0)\n              }\n            });\n\n            // Auto-calibrate on first detection\n            if (!isCalibrated && newPosition.x > 0 && newPosition.y > 0) {\n              calibrateCenter();\n              lastPositionRef.current = newPosition;\n            }\n\n            // Only trigger key presses after calibration\n            if (isCalibrated) {\n              // Calculate differences from center position\n              const diffFromCenterX = newPosition.x - centerPositionRef.current.x;\n              const diffFromCenterY = newPosition.y - centerPositionRef.current.y;\n\n              // Calculate movement from last position\n              const movementX = newPosition.x - lastPositionRef.current.x;\n              const movementY = newPosition.y - lastPositionRef.current.y;\n\n              // Check if position exceeds the threshold from center\n              const exceedsThresholdX = Math.abs(diffFromCenterX) > thresholds.x;\n              const exceedsThresholdY = Math.abs(diffFromCenterY) > thresholds.y;\n\n              // Determine which key to press based on position relative to center\n              let keyToPress = null;\n\n              // Prioritize larger displacement\n              if (exceedsThresholdX && exceedsThresholdY) {\n                // If exceeds in both directions, use the one with larger relative displacement\n                if (Math.abs(diffFromCenterX / thresholds.x) > Math.abs(diffFromCenterY / thresholds.y)) {\n                  keyToPress = diffFromCenterX > 0 ? 'r' : 'l';\n                } else {\n                  keyToPress = diffFromCenterY > 0 ? 'd' : 'u';\n                }\n              } else if (exceedsThresholdX) {\n                // Only exceeds in X direction\n                keyToPress = diffFromCenterX > 0 ? 'r' : 'l';\n              } else if (exceedsThresholdY) {\n                // Only exceeds in Y direction\n                keyToPress = diffFromCenterY > 0 ? 'd' : 'u';\n              }\n\n              // If we should press a key and it's different from the current key\n              // or if significant movement in the same direction continues\n              const significantMovement = keyToPress === 'r' && movementX > 5 || keyToPress === 'l' && movementX < -5 || keyToPress === 'd' && movementY > 5 || keyToPress === 'u' && movementY < -5;\n              if (keyToPress && (keyToPress !== lastKeySentRef.current || significantMovement)) {\n                simulateKeyPress(keyToPress);\n              }\n\n              // Update last position reference\n              lastPositionRef.current = newPosition;\n            }\n          }\n        });\n        setLoaded(true);\n        setError(null);\n      } else {\n        console.error(\"Missing required refs or detector:\", {\n          detector: !!detector,\n          webcam: !!webcamRef.current,\n          canvas: !!canvasRef.current\n        });\n      }\n    } catch (err) {\n      console.error(\"Error starting detection:\", err);\n      setError(`Detection error: ${err.message}`);\n    }\n  };\n\n  // Add a function to adjust sensitivity\n  const adjustSensitivity = increase => {\n    setThresholds(prev => {\n      const multiplier = increase ? 0.9 : 1.1; // Decrease threshold to increase sensitivity\n      return {\n        x: Math.max(inputResolution.width * 0.05, prev.x * multiplier),\n        y: Math.max(inputResolution.height * 0.05, prev.y * multiplier)\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: \"-1000px\",\n        top: 0,\n        visibility: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        width: inputResolution.width,\n        height: inputResolution.height,\n        videoConstraints: videoConstraints,\n        onLoadedData: handleVideoLoad,\n        onLoadedMetadata: e => console.log(\"Video metadata loaded:\", e.target.videoWidth, \"x\", e.target.videoHeight),\n        imageSmoothing: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: inputResolution.width,\n        height: inputResolution.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), debugInfo.keyPressed && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        color: \"#00f2fe\",\n        padding: \"20px 40px\",\n        borderRadius: \"12px\",\n        fontFamily: \"monospace\",\n        fontSize: \"48px\",\n        fontWeight: \"bold\",\n        zIndex: 1001,\n        boxShadow: \"0 0 20px rgba(0, 242, 254, 0.5)\",\n        border: \"2px solid #00f2fe\"\n      },\n      children: [\"KEY: \", debugInfo.keyPressed.toUpperCase()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        bottom: \"20px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n        color: \"#00f2fe\",\n        padding: \"8px 16px\",\n        borderRadius: \"8px\",\n        fontFamily: \"monospace\",\n        fontSize: \"14px\",\n        zIndex: 1000,\n        display: \"flex\",\n        gap: \"16px\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      },\n      children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"#ff4a4a\"\n        },\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Position: x=\", faceData.position.x, \", y=\", faceData.position.y]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Direction: yaw=\", faceData.direction.yaw, \"\\xB0, turn=\", faceData.direction.turn, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), isCalibrated ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Center: x=\", centerPositionRef.current.x, \", y=\", centerPositionRef.current.y]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Calibrating center position...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }, this), activeDirection && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"#00f2fe\",\n            color: \"black\",\n            padding: \"0px 8px\",\n            borderRadius: \"4px\"\n          },\n          children: [\"Active: \", activeDirection.toUpperCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 15\n        }, this), debugInfo.pressTime && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Last press: \", debugInfo.pressTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: calibrateCenter,\n          style: {\n            background: \"none\",\n            border: \"1px solid #00f2fe\",\n            color: \"#00f2fe\",\n            padding: \"2px 8px\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            fontSize: \"12px\"\n          },\n          children: \"Recalibrate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => adjustSensitivity(true),\n          style: {\n            background: \"none\",\n            border: \"1px solid #00f2fe\",\n            color: \"#00f2fe\",\n            padding: \"2px 8px\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            fontSize: \"12px\"\n          },\n          children: \"More Sensitive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => adjustSensitivity(false),\n          style: {\n            background: \"none\",\n            border: \"1px solid #00f2fe\",\n            color: \"#00f2fe\",\n            padding: \"2px 8px\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            fontSize: \"12px\"\n          },\n          children: \"Less Sensitive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          style: {\n            background: \"none\",\n            border: \"1px solid #ff4a4a\",\n            color: \"#ff4a4a\",\n            padding: \"2px 8px\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            fontSize: \"12px\"\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n}\n_s(FaceDirectionComponent, \"pWiXGur41eIuFZAYuhPC6NWjodg=\");\n_c = FaceDirectionComponent;\nexport default FaceDirectionComponent;\nvar _c;\n$RefreshReg$(_c, \"FaceDirectionComponent\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Webcam","FaceDirectionDetector","jsxDEV","_jsxDEV","Fragment","_Fragment","inputResolution","width","height","videoConstraints","facingMode","aspectRatio","FaceDirectionComponent","_s","canvasRef","webcamRef","loaded","setLoaded","detector","setDetector","faceData","setFaceData","position","x","y","direction","yaw","turn","centerPositionRef","activeDirection","setActiveDirection","isCalibrated","setIsCalibrated","lastKeySentRef","keyTimeoutRef","debugInfo","setDebugInfo","keyPressed","pressTime","thresholds","setThresholds","lastPositionRef","error","setError","initializeDetector","_window$tf","_window$tf2","window","tf","setBackend","console","log","getBackend","options","runtime","showMesh","showTagNumbers","showDirection","faceDetector","err","message","stop","current","clearTimeout","simulateKeyPress","key","Date","toLocaleTimeString","keydownEvent","KeyboardEvent","code","toUpperCase","keyCode","charCodeAt","which","bubbles","cancelable","document","dispatchEvent","body","setTimeout","keyupEvent","prev","calibrateCenter","handleVideoLoad","videoNode","video","target","videoWidth","videoHeight","warn","readyState","start","data","keypoints","newPosition","Math","round","diffFromCenterX","diffFromCenterY","movementX","movementY","exceedsThresholdX","abs","exceedsThresholdY","keyToPress","significantMovement","webcam","canvas","adjustSensitivity","increase","multiplier","max","children","style","left","top","visibility","ref","onLoadedData","onLoadedMetadata","e","imageSmoothing","fileName","_jsxFileName","lineNumber","columnNumber","transform","backgroundColor","color","padding","borderRadius","fontFamily","fontSize","fontWeight","zIndex","boxShadow","border","bottom","display","gap","flexWrap","justifyContent","onClick","background","cursor","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/kheri/Downloads/Bitcamp/bitcamp-2025/Bitcamp25/test-voice/src/FaceDirectionComponent.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"@tensorflow/tfjs\";\r\nimport \"@tensorflow/tfjs-backend-webgl\";\r\nimport \"@mediapipe/face_mesh\";\r\nimport Webcam from \"react-webcam\";\r\nimport FaceDirectionDetector from \"./face_detection/FaceDirectionDetector\";\r\n\r\n// Ensure we have valid dimensions - never use 0x0\r\nconst inputResolution = {\r\n  width: 640,\r\n  height: 480,\r\n};\r\n\r\nconst videoConstraints = {\r\n  width: inputResolution.width,\r\n  height: inputResolution.height,\r\n  facingMode: \"user\",\r\n  // Add explicit video constraints to ensure valid dimensions\r\n  aspectRatio: 4/3\r\n};\r\n\r\nfunction FaceDirectionComponent() {\r\n  const canvasRef = useRef(null);\r\n  const webcamRef = useRef(null);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [detector, setDetector] = useState(null);\r\n  const [faceData, setFaceData] = useState({\r\n    position: { x: 0, y: 0 },\r\n    direction: { yaw: 0, turn: 0 }\r\n  });\r\n  // Add reference for center position and state for active direction\r\n  const centerPositionRef = useRef({ x: 0, y: 0 });\r\n  const [activeDirection, setActiveDirection] = useState(null);\r\n  const [isCalibrated, setIsCalibrated] = useState(false);\r\n  const lastKeySentRef = useRef(null);\r\n  const keyTimeoutRef = useRef(null);\r\n  // Add debug state to track keypresses\r\n  const [debugInfo, setDebugInfo] = useState({\r\n    keyPressed: null,\r\n    pressTime: null\r\n  });\r\n  // Add threshold settings as state so they can be adjusted\r\n  const [thresholds, setThresholds] = useState({\r\n    x: inputResolution.width * 0.15,\r\n    y: inputResolution.height * 0.15\r\n  });\r\n  \r\n  // Add a reference to track the last position to detect movement\r\n  const lastPositionRef = useRef({ x: 0, y: 0 });\r\n  \r\n  // Add state to track errors\r\n  const [error, setError] = useState(null);\r\n\r\n  // Initialize the detector\r\n  useEffect(() => {\r\n    const initializeDetector = async () => {\r\n      try {\r\n        // Force TensorFlow to initialize with WebGL backend\r\n        await import('@tensorflow/tfjs-backend-webgl');\r\n        await window.tf?.setBackend('webgl');\r\n        \r\n        console.log(\"TensorFlow backend initialized:\", window.tf?.getBackend());\r\n        \r\n        const options = {\r\n          runtime: 'tfjs', // Explicitly set runtime to tfjs\r\n          showMesh: false,\r\n          showTagNumbers: false,\r\n          showDirection: false\r\n        };\r\n        const faceDetector = new FaceDirectionDetector(options);\r\n        setDetector(faceDetector);\r\n      } catch (err) {\r\n        console.error(\"Error initializing detector:\", err);\r\n        setError(`Detector init error: ${err.message}`);\r\n      }\r\n    };\r\n\r\n    initializeDetector();\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      if (detector) {\r\n        detector.stop();\r\n      }\r\n      if (keyTimeoutRef.current) {\r\n        clearTimeout(keyTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Function to simulate key press\r\n  const simulateKeyPress = (key) => {\r\n    // Skip if already pressed the same key recently\r\n    if (lastKeySentRef.current === key) {\r\n      return;\r\n    }\r\n\r\n    lastKeySentRef.current = key;\r\n    setActiveDirection(key);\r\n    \r\n    // Update debug info\r\n    setDebugInfo({\r\n      keyPressed: key,\r\n      pressTime: new Date().toLocaleTimeString()\r\n    });\r\n\r\n    // Create and dispatch keydown event\r\n    const keydownEvent = new KeyboardEvent('keydown', {\r\n      key: key,\r\n      code: `Key${key.toUpperCase()}`,\r\n      keyCode: key.charCodeAt(0),\r\n      which: key.charCodeAt(0),\r\n      bubbles: true,\r\n      cancelable: true\r\n    });\r\n    document.dispatchEvent(keydownEvent);\r\n    \r\n    // Also try to trigger the event on window and document.body\r\n    window.dispatchEvent(keydownEvent);\r\n    if (document.body) document.body.dispatchEvent(keydownEvent);\r\n    \r\n    // Log to console for debugging\r\n    console.log(`Key DOWN: ${key} at ${new Date().toLocaleTimeString()}`);\r\n\r\n    // Clear any existing timeout\r\n    if (keyTimeoutRef.current) {\r\n      clearTimeout(keyTimeoutRef.current);\r\n    }\r\n\r\n    // Schedule keyup after a 1 second delay\r\n    keyTimeoutRef.current = setTimeout(() => {\r\n      // Create and dispatch keyup event\r\n      const keyupEvent = new KeyboardEvent('keyup', {\r\n        key: key,\r\n        code: `Key${key.toUpperCase()}`,\r\n        keyCode: key.charCodeAt(0),\r\n        which: key.charCodeAt(0),\r\n        bubbles: true,\r\n        cancelable: true\r\n      });\r\n      document.dispatchEvent(keyupEvent);\r\n      window.dispatchEvent(keyupEvent);\r\n      if (document.body) document.body.dispatchEvent(keyupEvent);\r\n      \r\n      // Log to console for debugging\r\n      console.log(`Key UP: ${key} at ${new Date().toLocaleTimeString()}`);\r\n      \r\n      // Reset the last key sent after a short delay\r\n      lastKeySentRef.current = null;\r\n      setActiveDirection(null);\r\n      \r\n      // Update debug info\r\n      setDebugInfo(prev => ({\r\n        ...prev,\r\n        keyPressed: null\r\n      }));\r\n    }, 1000); // Key press duration in ms - changed to 1000ms (1 second)\r\n  };\r\n\r\n  // Function to calibrate center position\r\n  const calibrateCenter = () => {\r\n    if (faceData.position.x > 0 && faceData.position.y > 0) {\r\n      centerPositionRef.current = { ...faceData.position };\r\n      setIsCalibrated(true);\r\n    }\r\n  };\r\n\r\n  // Handle video load\r\n  const handleVideoLoad = async (videoNode) => {\r\n    try {\r\n      const video = videoNode.target;\r\n      \r\n      // Check if video has valid dimensions\r\n      if (video.videoWidth === 0 || video.videoHeight === 0) {\r\n        console.warn(\"Video dimensions are invalid:\", video.videoWidth, \"x\", video.videoHeight);\r\n        return; // Wait for valid dimensions\r\n      }\r\n      \r\n      if (video.readyState !== 4) {\r\n        console.log(\"Video not ready yet, state:\", video.readyState);\r\n        return; // Wait until video is completely loaded\r\n      }\r\n      \r\n      if (loaded) {\r\n        console.log(\"Detection already started, skipping\");\r\n        return;\r\n      }\r\n      \r\n      // Validate canvas dimensions\r\n      if (!canvasRef.current) {\r\n        console.error(\"Canvas ref is null\");\r\n        return;\r\n      }\r\n      \r\n      // Ensure canvas has proper dimensions\r\n      canvasRef.current.width = video.videoWidth || inputResolution.width;\r\n      canvasRef.current.height = video.videoHeight || inputResolution.height;\r\n      \r\n      console.log(\"Starting detection with video dimensions:\", \r\n                 video.videoWidth, \"x\", video.videoHeight,\r\n                 \"Canvas dimensions:\", canvasRef.current.width, \"x\", canvasRef.current.height);\r\n\r\n      if (detector && webcamRef.current && canvasRef.current) {\r\n        await detector.start(\r\n          webcamRef.current.video, \r\n          canvasRef.current, \r\n          (data) => {\r\n            // Update face data when detection occurs\r\n            if (data && data.keypoints && data.keypoints[1]) {\r\n              const newPosition = {\r\n                x: Math.round(data.keypoints[1].x),\r\n                y: Math.round(data.keypoints[1].y)\r\n              };\r\n              \r\n              setFaceData({\r\n                position: newPosition,\r\n                direction: {\r\n                  yaw: Math.round(data.yaw || 0),\r\n                  turn: Math.round(data.turn || 0)\r\n                }\r\n              });\r\n\r\n              // Auto-calibrate on first detection\r\n              if (!isCalibrated && newPosition.x > 0 && newPosition.y > 0) {\r\n                calibrateCenter();\r\n                lastPositionRef.current = newPosition;\r\n              }\r\n\r\n              // Only trigger key presses after calibration\r\n              if (isCalibrated) {\r\n                // Calculate differences from center position\r\n                const diffFromCenterX = newPosition.x - centerPositionRef.current.x;\r\n                const diffFromCenterY = newPosition.y - centerPositionRef.current.y;\r\n                \r\n                // Calculate movement from last position\r\n                const movementX = newPosition.x - lastPositionRef.current.x;\r\n                const movementY = newPosition.y - lastPositionRef.current.y;\r\n                \r\n                // Check if position exceeds the threshold from center\r\n                const exceedsThresholdX = Math.abs(diffFromCenterX) > thresholds.x;\r\n                const exceedsThresholdY = Math.abs(diffFromCenterY) > thresholds.y;\r\n                \r\n                // Determine which key to press based on position relative to center\r\n                let keyToPress = null;\r\n                \r\n                // Prioritize larger displacement\r\n                if (exceedsThresholdX && exceedsThresholdY) {\r\n                  // If exceeds in both directions, use the one with larger relative displacement\r\n                  if (Math.abs(diffFromCenterX / thresholds.x) > Math.abs(diffFromCenterY / thresholds.y)) {\r\n                    keyToPress = diffFromCenterX > 0 ? 'r' : 'l';\r\n                  } else {\r\n                    keyToPress = diffFromCenterY > 0 ? 'd' : 'u';\r\n                  }\r\n                } else if (exceedsThresholdX) {\r\n                  // Only exceeds in X direction\r\n                  keyToPress = diffFromCenterX > 0 ? 'r' : 'l';\r\n                } else if (exceedsThresholdY) {\r\n                  // Only exceeds in Y direction\r\n                  keyToPress = diffFromCenterY > 0 ? 'd' : 'u';\r\n                }\r\n                \r\n                // If we should press a key and it's different from the current key\r\n                // or if significant movement in the same direction continues\r\n                const significantMovement = \r\n                  (keyToPress === 'r' && movementX > 5) ||\r\n                  (keyToPress === 'l' && movementX < -5) ||\r\n                  (keyToPress === 'd' && movementY > 5) ||\r\n                  (keyToPress === 'u' && movementY < -5);\r\n                  \r\n                if (keyToPress && (keyToPress !== lastKeySentRef.current || significantMovement)) {\r\n                  simulateKeyPress(keyToPress);\r\n                }\r\n                \r\n                // Update last position reference\r\n                lastPositionRef.current = newPosition;\r\n              }\r\n            }\r\n          }\r\n        );\r\n        setLoaded(true);\r\n        setError(null);\r\n      } else {\r\n        console.error(\"Missing required refs or detector:\", \r\n                     {detector: !!detector, webcam: !!webcamRef.current, canvas: !!canvasRef.current});\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error starting detection:\", err);\r\n      setError(`Detection error: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  // Add a function to adjust sensitivity\r\n  const adjustSensitivity = (increase) => {\r\n    setThresholds(prev => {\r\n      const multiplier = increase ? 0.9 : 1.1; // Decrease threshold to increase sensitivity\r\n      return {\r\n        x: Math.max(inputResolution.width * 0.05, prev.x * multiplier),\r\n        y: Math.max(inputResolution.height * 0.05, prev.y * multiplier)\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Hidden webcam and canvas for detection */}\r\n      <div style={{ position: \"absolute\", left: \"-1000px\", top: 0, visibility: \"hidden\" }}>\r\n        <Webcam\r\n          ref={webcamRef}\r\n          width={inputResolution.width}\r\n          height={inputResolution.height}\r\n          videoConstraints={videoConstraints}\r\n          onLoadedData={handleVideoLoad}\r\n          onLoadedMetadata={(e) => console.log(\"Video metadata loaded:\", e.target.videoWidth, \"x\", e.target.videoHeight)}\r\n          imageSmoothing={true}\r\n        />\r\n        \r\n        <canvas\r\n          ref={canvasRef}\r\n          width={inputResolution.width}\r\n          height={inputResolution.height}\r\n        />\r\n      </div>\r\n\r\n      {/* Debug display - large key indicator */}\r\n      {debugInfo.keyPressed && (\r\n        <div style={{\r\n          position: \"fixed\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n          color: \"#00f2fe\",\r\n          padding: \"20px 40px\",\r\n          borderRadius: \"12px\",\r\n          fontFamily: \"monospace\",\r\n          fontSize: \"48px\",\r\n          fontWeight: \"bold\",\r\n          zIndex: 1001,\r\n          boxShadow: \"0 0 20px rgba(0, 242, 254, 0.5)\",\r\n          border: \"2px solid #00f2fe\"\r\n        }}>\r\n          KEY: {debugInfo.keyPressed.toUpperCase()}\r\n        </div>\r\n      )}\r\n\r\n      {/* Simple display of face data */}\r\n      <div style={{ \r\n        position: \"fixed\", \r\n        bottom: \"20px\",\r\n        left: \"50%\",\r\n        transform: \"translateX(-50%)\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n        color: \"#00f2fe\",\r\n        padding: \"8px 16px\",\r\n        borderRadius: \"8px\",\r\n        fontFamily: \"monospace\",\r\n        fontSize: \"14px\",\r\n        zIndex: 1000,\r\n        display: \"flex\",\r\n        gap: \"16px\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\"\r\n      }}>\r\n        {error ? (\r\n          <div style={{ color: \"#ff4a4a\" }}>\r\n            Error: {error}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              Position: x={faceData.position.x}, y={faceData.position.y}\r\n            </div>\r\n            <div>\r\n              Direction: yaw={faceData.direction.yaw}°, turn={faceData.direction.turn}°\r\n            </div>\r\n            {isCalibrated ? (\r\n              <div>\r\n                Center: x={centerPositionRef.current.x}, y={centerPositionRef.current.y}\r\n              </div>\r\n            ) : (\r\n              <div>Calibrating center position...</div>\r\n            )}\r\n            {activeDirection && (\r\n              <div style={{ \r\n                backgroundColor: \"#00f2fe\", \r\n                color: \"black\", \r\n                padding: \"0px 8px\", \r\n                borderRadius: \"4px\" \r\n              }}>\r\n                Active: {activeDirection.toUpperCase()}\r\n              </div>\r\n            )}\r\n            {debugInfo.pressTime && (\r\n              <div>\r\n                Last press: {debugInfo.pressTime}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n        <div style={{ display: 'flex', gap: '8px' }}>\r\n          <button \r\n            onClick={calibrateCenter}\r\n            style={{\r\n              background: \"none\",\r\n              border: \"1px solid #00f2fe\",\r\n              color: \"#00f2fe\",\r\n              padding: \"2px 8px\",\r\n              borderRadius: \"4px\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"12px\"\r\n            }}\r\n          >\r\n            Recalibrate\r\n          </button>\r\n          <button \r\n            onClick={() => adjustSensitivity(true)}\r\n            style={{\r\n              background: \"none\",\r\n              border: \"1px solid #00f2fe\",\r\n              color: \"#00f2fe\",\r\n              padding: \"2px 8px\",\r\n              borderRadius: \"4px\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"12px\"\r\n            }}\r\n          >\r\n            More Sensitive\r\n          </button>\r\n          <button \r\n            onClick={() => adjustSensitivity(false)}\r\n            style={{\r\n              background: \"none\",\r\n              border: \"1px solid #00f2fe\",\r\n              color: \"#00f2fe\",\r\n              padding: \"2px 8px\",\r\n              borderRadius: \"4px\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"12px\"\r\n            }}\r\n          >\r\n            Less Sensitive\r\n          </button>\r\n          <button \r\n            onClick={() => window.location.reload()}\r\n            style={{\r\n              background: \"none\",\r\n              border: \"1px solid #ff4a4a\",\r\n              color: \"#ff4a4a\",\r\n              padding: \"2px 8px\",\r\n              borderRadius: \"4px\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"12px\"\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceDirectionComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}